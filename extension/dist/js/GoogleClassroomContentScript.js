/*! For license information please see GoogleClassroomContentScript.js.LICENSE.txt */
(()=>{var e={349:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return S.buffer!=U&&Z(S.buffer),H}function a(){return S.buffer!=U&&Z(S.buffer),G}function s(){return S.buffer!=U&&Z(S.buffer),j}function i(){return S.buffer!=U&&Z(S.buffer),q}function o(){return S.buffer!=U&&Z(S.buffer),K}var u,l=void 0!==(e=e||{})?e:{},c={};for(u in l)l.hasOwnProperty(u)&&(c[u]=l[u]);var d=[],h=!1,p=!1,f=!1,m=!1;h="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m=!h&&!f&&!p;var g=l.ENVIRONMENT_IS_PTHREAD||!1;g&&(U=l.buffer,J=l.DYNAMIC_BASE,Q=l.DYNAMICTOP_PTR);var y,b,w,x,v="";function k(e){return l.locateFile?l.locateFile(e,v):v+e}if(f){var I;v=p?n(386).dirname(v)+"/":"//",y=function(e,t){return w||(w=n(993)),x||(x=n(386)),e=x.normalize(e),w.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),D(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof dn))throw e})),process.on("unhandledRejection",xe),l.inspect=function(){return"[Emscripten Module object]"};try{I=n(614)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}Worker=I.Worker}else m?("undefined"!=typeof read&&(y=function(e){return read(e)}),b=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(D("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?d=scriptArgs:void 0!==arguments&&(d=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(h||p)&&(p?v=self.location.href:document.currentScript&&(v=document.currentScript.src),r&&(v=r),v=0!==v.indexOf("blob:")?v.substr(0,v.lastIndexOf("/")+1):"",f?(y=function(e,t){return w||(w=n(993)),x||(x=n(386)),e=x.normalize(e),w.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),D(t.buffer),t}):(y=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(b=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)})));f&&"undefined"==typeof performance&&(performance=n(513).performance);var N,C,S,E=l.print||console.log.bind(console),T=l.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(l[u]=c[u]);c=null,l.arguments&&(d=l.arguments),l.thisProgram&&l.thisProgram,l.quit&&l.quit,Atomics.load,Atomics.store,Atomics.compareExchange,l.wasmBinary&&(N=l.wasmBinary),l.noExitRuntime&&(C=l.noExitRuntime),"object"!=typeof WebAssembly&&T("no native wasm support detected");var A,_=new WebAssembly.Table({initial:165,maximum:165,element:"anyfunc"}),$=0,R=!1;function D(e,t){e||xe("Assertion failed: "+t)}function F(e){var t=l["_"+e];return D(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function O(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=un(n),n)}return t},array:function(e){var t=un(e.length);return V(e,t),t}},i=F(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=on()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?B(e):"boolean"===t?Boolean(e):e}(d),0!==u&&ln(u),d}function M(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?F(e):function(){return O(e,t,n,arguments)}}function L(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function B(e,t){return e?L(a(),e,t):""}function z(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return z(e,a(),t,n)}function W(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function V(e,n){t().set(e,n)}var U,H,G,j,q,K,X=65536;function Y(e,t){return e%t>0&&(e+=t-e%t),e}function Z(e){U=e,l.HEAP8=H=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=j=new Int32Array(e),l.HEAPU8=G=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=q=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=K=new Float64Array(e)}var J=5256384,Q=12576,ee=l.INITIAL_MEMORY||16777216;if(g)S=l.wasmMemory,U=l.buffer;else if(l.wasmMemory)S=l.wasmMemory;else if(!((S=new WebAssembly.Memory({initial:ee/X,maximum:2147483648/X,shared:!0})).buffer instanceof SharedArrayBuffer))throw T("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),f&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");function te(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?l.dynCall_v(n):l.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(l)}}S&&(U=S.buffer),ee=U.byteLength,Z(U),g||(s()[Q>>2]=J);var ne=[],re=[],ae=[],se=[],ie=[];function oe(){if(!g){if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)de(l.preRun.shift());te(ne)}}function ue(){te(re)}function le(){g||te(ae)}function ce(){if(!g){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;)he(l.postRun.shift());te(ie)}}function de(e){ne.unshift(e)}function he(e){ie.unshift(e)}var pe=Math.ceil,fe=Math.floor,me=0,ge=null,ye=null;function be(e){D(!g,"addRunDependency cannot be used in a pthread worker"),me++,l.monitorRunDependencies&&l.monitorRunDependencies(me)}function we(e){if(me--,l.monitorRunDependencies&&l.monitorRunDependencies(me),0==me&&(null!==ge&&(clearInterval(ge),ge=null),ye)){var t=ye;ye=null,t()}}function xe(e){throw l.onAbort&&l.onAbort(e),g&&console.error("Pthread aborting at "+(new Error).stack),E(e+=""),T(e),R=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function ve(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}l.preloadedImages={},l.preloadedAudios={};var ke="data:application/octet-stream;base64,";function Ie(e){return ve(e,ke)}var Ne="file://";function Ce(e){return ve(e,Ne)}var Se="tfjs-backend-wasm-threaded-simd.wasm";function Ee(){try{if(N)return new Uint8Array(N);if(b)return b(Se);throw"both async and sync fetching of the wasm failed"}catch(e){xe(e)}}function Te(){return N||!h&&!p||"function"!=typeof fetch||Ce(Se)?new Promise((function(e,t){e(Ee())})):fetch(Se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Se+"'";return e.arrayBuffer()})).catch((function(){return Ee()}))}function Ae(){var e={a:Gt};function t(e,t){var n=e.exports;if(l.asm=n,A=t,!g){var r=Ue.unusedWorkers.length;Ue.unusedWorkers.forEach((function(e){Ue.loadWasmModuleToWorker(e,(function(){--r||we()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){T("failed to asynchronously prepare wasm: "+e),xe(e)}))}if(g||be(),l.instantiateWasm)try{return l.instantiateWasm(e,t)}catch(e){return T("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(N||"function"!=typeof WebAssembly.instantiateStreaming||Ie(Se)||Ce(Se)||"function"!=typeof fetch)return r(n);fetch(Se,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){T("wasm streaming compile failed: "+e),T("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}Ie(Se)||(Se=k(Se));var _e={};function $e(){Ue.initRuntime()}g||re.push({func:function(){Kt()}});var Re=0,De=0,Fe=0;function Oe(e,t,n){Re=e|=0,Fe=t|=0,De=n|=0}l.__register_pthread_ptr=Oe;var Me={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},Le=13488;function Be(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),Le>>2),a=0;if(r==e&&Atomics.compareExchange(s(),Le>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function ze(e){if(g)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _kill_thread!";s()[e+12>>2]=0;var t=Ue.pthreads[e];t.worker.terminate(),Ue.freeThreadData(t),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Pe(e){if(g)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cancel_thread!";Ue.pthreads[e].worker.postMessage({cmd:"cancel"})}function We(e){if(g)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";s()[e+12>>2]=0;var t=Ue.pthreads[e];if(t){var n=t.worker;Ue.returnWorkerToPool(n)}}l._emscripten_futex_wake=Be;var Ve,Ue={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){Oe(Ue.mainThreadBlock,!p,1),nn(Ue.mainThreadBlock)},initMainThreadBlock:function(){for(var e=0;e<8;++e)Ue.allocateUnusedWorker();for(Ue.mainThreadBlock=12736,e=0;e<58;++e)i()[Ue.mainThreadBlock/4+e]=0;s()[Ue.mainThreadBlock+12>>2]=Ue.mainThreadBlock;var t=Ue.mainThreadBlock+156;for(s()[t>>2]=t,e=0;e<128;++e)i()[3244+e]=0;Atomics.store(i(),Ue.mainThreadBlock+104>>2,12976),Atomics.store(i(),Ue.mainThreadBlock+40>>2,Ue.mainThreadBlock),Atomics.store(i(),Ue.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(null!==Ue.exitHandlers){for(;Ue.exitHandlers.length>0;)Ue.exitHandlers.pop()();Ue.exitHandlers=null}g&&$&&en()},threadExit:function(e){var t=Pt();t&&(Atomics.store(i(),t+4>>2,e),Atomics.store(i(),t+0>>2,1),Atomics.store(i(),t+60>>2,1),Atomics.store(i(),t+64>>2,0),Ue.runExitHandlers(),Be(t+0,2147483647),Oe(0,0,0),$=0,g&&postMessage({cmd:"exit"}))},threadCancel:function(){Ue.runExitHandlers(),Atomics.store(i(),$+4>>2,-1),Atomics.store(i(),$+0>>2,1),Be($+0,2147483647),$=0,Oe(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Ue.pthreads)(r=Ue.pthreads[e])&&r.worker&&Ue.returnWorkerToPool(r.worker);Ue.pthreads={};for(var t=0;t<Ue.unusedWorkers.length;++t)(n=Ue.unusedWorkers[t]).terminate();for(Ue.unusedWorkers=[],t=0;t<Ue.runningWorkers.length;++t){var n,r=(n=Ue.runningWorkers[t]).pthread;Ue.freeThreadData(r),n.terminate()}Ue.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+104>>2];s()[e.threadInfoStruct+104>>2]=0,Yt(t),Yt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Yt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){delete Ue.pthreads[e.pthread.thread],Ue.unusedWorkers.push(e),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(e),1),Ue.freeThreadData(e.pthread),e.pthread=void 0},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Ue.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Pt()){var s=Ue.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ue.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===a?tn():"spawnThread"===a?Bt(n.data):"cleanupThread"===a?We(r.thread):"killThread"===a?ze(r.thread):"cancelThread"===a?Pe(r.thread):"loaded"===a?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===a?E("Thread "+r.threadId+": "+r.text):"printErr"===a?T("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"exit"===a?e.pthread&&Atomics.load(i(),e.pthread.thread+68>>2)&&Ue.returnWorkerToPool(e):"cancelDone"===a?Ue.returnWorkerToPool(e):"objectTransfer"===a?Ue.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):T("worker sent an unknown command "+a),Ue.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){T("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},f&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){console.log("worker exited - TODO: update the worker queue?")}))),e.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:S,wasmModule:A,DYNAMIC_BASE:J,DYNAMICTOP_PTR:Q})},allocateUnusedWorker:function(){var e=k("tfjs-backend-wasm-threaded-simd.worker.js");Ue.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ue.unusedWorkers.length&&(Ue.allocateUnusedWorker(),Ue.loadWasmModuleToWorker(Ue.unusedWorkers[0])),Ue.unusedWorkers.length>0?Ue.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function He(e,t){ln(e)}function Ge(){return C}function je(e,t,n,r){xe("Assertion failed: "+B(e)+", at: "+[t?B(t):"unknown filename",n,r?B(r):"unknown function"])}function qe(e,t){_main(e,t)}function Ke(e){return s()[Jt()>>2]=e,e}function Xe(e,t){if(g)return at(1,1,e,t);se.unshift({func:e,arg:t})}function Ye(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(g)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ue.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Ze(){xe()}function Je(e,t){}function Qe(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(p){var a=Atomics.wait(s(),e>>2,n,r);if("timed-out"===a)return-73;if("not-equal"===a)return-6;if("ok"===a)return 0;throw"Atomics.wait returned an unexpected value "+a}if(n!=Atomics.load(s(),e>>2))return-6;var i=performance.now(),o=i+r;Atomics.store(s(),Le>>2,e);for(var u=e;e==u;){if((i=performance.now())>o)return-73;tn(),e=Atomics.load(s(),Le>>2)}return 0}function et(){return 0|Fe}function tt(){return 0|De}function nt(e,t,n){a().copyWithin(e,t,t+n)}function rt(){return navigator.hardwareConcurrency}function at(e,t){for(var n=arguments.length-2,r=on(),a=un(8*n),s=a>>3,i=0;i<n;i++)o()[s+i]=arguments[2+i];var u=an(e,n,a,t);return ln(r),u}l.establishStackSpace=He,l.getNoExitRuntime=Ge,Ve=f?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:g?function(){return performance.now()-l.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var st=[];function it(e,t){it.array||(it.array=[]);var n,r=it.array;for(r.length=0;n=a()[e++];)100===n||102===n?(t=t+7&-8,r.push(o()[t>>3]),t+=8):(t=t+3&-4,r.push(s()[t>>2]),t+=4);return r}function ot(e,t,n){st.length=t;for(var r=n>>3,a=0;a<t;a++)st[a]=o()[r+a];var s=e<0,i=s?_e[-e-1]:Ht[e];if(s){var u=it(st[1],st[2]);return i.apply(null,u)}return i.apply(null,st)}function ut(){return a().length}function lt(e){try{return S.grow(e-U.byteLength+65535>>>16),Z(S.buffer),1}catch(e){}}function ct(e){e>>>=0;var t=ut();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),lt(Math.min(n,Y(Math.max(16777216,e,a),65536))))return!0}return!1}var dt={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var e=dt.eventHandlers.length-1;e>=0;--e)dt._removeHandler(e);dt.eventHandlers=[],dt.deferredCalls=[]},registerRemoveEventListeners:function(){dt.removeEventListenersRegistered||(se.push(dt.removeAllEventListeners),dt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in dt.deferredCalls){var s=dt.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}dt.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),dt.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<dt.deferredCalls.length;++t)dt.deferredCalls[t].targetFunction==e&&(dt.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return dt.inEventHandler&&dt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(dt.canPerformEventHandlerRequests())for(var e=0;e<dt.deferredCalls.length;++e){var t=dt.deferredCalls[e];dt.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<dt.eventHandlers.length;++n)dt.eventHandlers[n].target!=e||t&&t!=dt.eventHandlers[n].eventTypeString||dt._removeHandler(n--)},_removeHandler:function(e){var t=dt.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),dt.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++dt.inEventHandler,dt.currentEventHandler=e,dt.runDeferredCalls(),e.handlerFunc(t),dt.runDeferredCalls(),--dt.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),dt.eventHandlers.push(e),dt.registerRemoveEventListeners();else for(var n=0;n<dt.eventHandlers.length;++n)dt.eventHandlers[n].target==e.target&&dt.eventHandlers[n].eventTypeString==e.eventTypeString&&dt._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=on(),o=un(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,sn(e,637534208,t,r,o),ln(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ue.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ht(e){var t=W(e)+1,n=Xt(t);return P(e,n,t),n}function pt(e,t,n,r){var a=on(),i=un(12),o=0;t&&(o=ht(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,sn(e,657457152,0,o,i),ln(a)}function ft(e,t,n,r){pt(e,t=t?B(t):"",n,r)}function mt(e){return e>2?B(e):e}var gt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function yt(e){return e=mt(e),gt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function bt(e){return yt(e)}function wt(e,t,n){var r=bt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ft(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function xt(e,t,n){return g?at(2,1,e,t,n):wt(e,t,n)}function vt(e,t,n){return bt(e)?wt(e,t,n):xt(e,t,n)}function kt(e){}function It(e,t){}function Nt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function Ct(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function St(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}var Et={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var e=new Float32Array(Et.MINI_TEMP_BUFFER_SIZE),t=0;t<Et.MINI_TEMP_BUFFER_SIZE;t++)Et.miniTempBufferFloatViews[t]=e.subarray(0,t+1);var n=new Int32Array(Et.MINI_TEMP_BUFFER_SIZE);for(t=0;t<Et.MINI_TEMP_BUFFER_SIZE;t++)Et.miniTempBufferIntViews[t]=n.subarray(0,t+1)},recordError:function(e){Et.lastError||(Et.lastError=e)},getNewId:function(e){for(var t=Et.counter++,n=e.length;n<t;n++)e[n]=null;return t},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=B(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Et.registerContext(n,t):0},registerContext:function(e,t){var n=Xt(8);s()[n+4>>2]=Pt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Et.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Et.initExtensions(r),n},makeContextCurrent:function(e){return Et.currentContext=Et.contexts[e],l.ctx=$t=Et.currentContext&&Et.currentContext.GLctx,!(e&&!$t)},getContext:function(e){return Et.contexts[e]},deleteContext:function(e){Et.currentContext===Et.contexts[e]&&(Et.currentContext=null),"object"==typeof dt&&dt.removeAllHandlersOnTarget(Et.contexts[e].GLctx.canvas),Et.contexts[e]&&Et.contexts[e].GLctx.canvas&&(Et.contexts[e].GLctx.canvas.GLctxObject=void 0),Yt(Et.contexts[e].handle),Et.contexts[e]=null},initExtensions:function(e){if(e||(e=Et.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;Nt(t),Ct(t),St(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query");var n=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"];(t.getSupportedExtensions()||[]).forEach((function(e){-1!=n.indexOf(e)&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Et.programs[e],n=Et.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=$t.getProgramParameter(t,35718),s=0;s<a;++s){var i=$t.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=$t.getUniformLocation(t,o);if(u){var l=Et.getNewId(Et.uniforms);r[o]=[i.size,l],Et.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=$t.getUniformLocation(t,d),l=Et.getNewId(Et.uniforms),Et.uniforms[l]=u}}}}},Tt=["default","low-power","high-performance"];function At(e,t){var n={},r=t>>2;n.alpha=!!s()[r+0],n.depth=!!s()[r+1],n.stencil=!!s()[r+2],n.antialias=!!s()[r+3],n.premultipliedAlpha=!!s()[r+4],n.preserveDrawingBuffer=!!s()[r+5];var a=s()[r+6];n.powerPreference=Tt[a],n.failIfMajorPerformanceCaveat=!!s()[r+7],n.majorVersion=s()[r+8],n.minorVersion=s()[r+9],n.enableExtensionsByDefault=s()[r+10],n.explicitSwapControl=s()[r+11],n.proxyContextToMainThread=s()[r+12],n.renderViaOffscreenBackBuffer=s()[r+13];var i=bt(e);return i?n.explicitSwapControl?-1:Et.createContext(i,n):-4}function _t(e,t){return At(e,t)}var $t,Rt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Rt.buffers[e];0===t||10===t?((1===e?E:T)(L(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Rt.varargs+=4,s()[Rt.varargs-4>>2]},getStr:function(e){return B(e)},get64:function(e,t){return e}};function Dt(e){return g?at(3,1,e):0}function Ft(e,t,n,r,a){if(g)return at(4,1,e,t,n,r,a)}function Ot(e,t,n,r){if(g)return at(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Rt.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Mt(e){var t=Ue.exitHandlers.pop();e&&t()}function Lt(e,t){null===Ue.exitHandlers&&(Ue.exitHandlers=[]),Ue.exitHandlers.push((function(){cn(e,t)}))}function Bt(e){if(g)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var t=Ue.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Ue.runningWorkers.push(t);for(var n=Xt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Ue.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,thread:e.pthread_ptr,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+0,0),Atomics.store(i(),u+1,0),Atomics.store(i(),u+2,0),Atomics.store(i(),u+17,e.detached),Atomics.store(i(),u+26,n),Atomics.store(i(),u+12,0),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+11,42),Atomics.store(i(),u+27,e.stackSize),Atomics.store(i(),u+21,e.stackSize),Atomics.store(i(),u+20,a),Atomics.store(i(),u+29,a),Atomics.store(i(),u+30,e.detached),Atomics.store(i(),u+32,e.schedPolicy),Atomics.store(i(),u+33,e.schedPrio);var l=Zt()+40;Atomics.store(i(),u+44,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,selfThreadId:e.pthread_ptr,parentThreadId:e.parent_pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function zt(e,t,n){if(!t&&!n)return Me.EINVAL;if(!e)return T("pthread_getschedparam called with a null thread pointer!"),Me.ESRCH;if(s()[e+12>>2]!==e)return T("pthread_getschedparam attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Me.ESRCH;var r=Atomics.load(i(),e+108+20>>2),a=Atomics.load(i(),e+108+24>>2);return t&&(s()[t>>2]=r),n&&(s()[n>>2]=a),0}function Pt(){return 0|Re}function Wt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return T("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return T("pthread_create called with a null thread pointer!"),28;var a=[];if(g&&0===a.length)return rn(687865856,e,t,n,r);var o=0,u=0,l=0,c=0,d=0;if(t)if(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2],0===s()[t+16>>2]){var h=s()[t+20>>2],p=s()[t+24>>2];zt(Ue.currentProxiedOperationCallerThread?Ue.currentProxiedOperationCallerThread:Pt(),t+20,t+24),c=s()[t+20>>2],d=s()[t+24>>2],s()[t+20>>2]=h,s()[t+24>>2]=p}else c=s()[t+20>>2],d=s()[t+24>>2];else o=2097152;var f=0==u;f?u=Qt(16,o):D((u-=o)>0);for(var m=Xt(232),y=0;y<58;++y)i()[(m>>2)+y]=0;s()[e>>2]=m,s()[m+12>>2]=m;var b=m+156;s()[b>>2]=b;var w={stackBase:u,stackSize:o,allocatedOwnStack:f,schedPolicy:c,schedPrio:d,detached:l,startRoutine:n,pthread_ptr:m,parent_pthread_ptr:Pt(),arg:r,transferList:a};return g?(w.cmd="spawnThread",postMessage(w,a)):Bt(w),0}function Vt(e){return(e=+e)>=0?+fe(e+.5):+pe(e-.5)}function Ut(e){if(g)return at(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ke(28),-1}l._pthread_self=Pt,g?Ue.initWorker():Ue.initMainThreadBlock(),Et.init();var Ht=[null,Xe,xt,Dt,Ft,Ot,Ut],Gt={e:je,r:qe,w:Ye,a:Ze,l:Je,d:Qe,c:Be,h:Ve,g:et,x:tt,q:nt,B:rt,t:ot,A:ct,u:vt,k:kt,s:It,v:_t,m:Dt,o:Ft,i:Ot,p:$e,memory:S||l.wasmMemory,y:Mt,z:Lt,j:Wt,b:Pt,f:Vt,n:Ut,table:_},jt=Ae();l.asm=jt;var qt,Kt=l.___wasm_call_ctors=function(){return(Kt=l.___wasm_call_ctors=l.asm.C).apply(null,arguments)},Xt=(l._init=function(){return(l._init=l.asm.D).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.E).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.F).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.G).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.H).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.I).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.J).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.K).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.L).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.M).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.N).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.O).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.P).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Q).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.R).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.S).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.T).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.U).apply(null,arguments)},l._Div=function(){return(l._Div=l.asm.V).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.W).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.X).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.Y).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.Z).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm._).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.$).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.aa).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.ba).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.ca).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.da).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.ea).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.fa).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.ga).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.ha).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.ia).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.ja).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.ka).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.la).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.ma).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.na).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.oa).apply(null,arguments)},l._Negate=function(){return(l._Negate=l.asm.pa).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.qa).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.ra).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.sa).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.ta).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.ua).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.va).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.wa).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.xa).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.ya).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.za).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.Aa).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Ba).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.Ca).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Da).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.Ea).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.Fa).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Ga).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Ha).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Ia).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Ja).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Ka).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.La).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.Ma).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Na).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Oa).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Pa).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Qa).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Ra).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm.Sa).apply(null,arguments)},l._malloc=function(){return(Xt=l._malloc=l.asm.Ta).apply(null,arguments)}),Yt=l._free=function(){return(Yt=l._free=l.asm.Ua).apply(null,arguments)},Zt=l._emscripten_get_global_libc=function(){return(Zt=l._emscripten_get_global_libc=l.asm.Va).apply(null,arguments)},Jt=l.___errno_location=function(){return(Jt=l.___errno_location=l.asm.Wa).apply(null,arguments)},Qt=(l.___em_js__initPthreadsJS=function(){return(l.___em_js__initPthreadsJS=l.asm.Xa).apply(null,arguments)},l._memalign=function(){return(Qt=l._memalign=l.asm.Ya).apply(null,arguments)}),en=l.___pthread_tsd_run_dtors=function(){return(en=l.___pthread_tsd_run_dtors=l.asm.Za).apply(null,arguments)},tn=l._emscripten_main_thread_process_queued_calls=function(){return(tn=l._emscripten_main_thread_process_queued_calls=l.asm._a).apply(null,arguments)},nn=(l._emscripten_current_thread_process_queued_calls=function(){return(l._emscripten_current_thread_process_queued_calls=l.asm.$a).apply(null,arguments)},l._emscripten_register_main_browser_thread_id=function(){return(nn=l._emscripten_register_main_browser_thread_id=l.asm.ab).apply(null,arguments)}),rn=(l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.bb).apply(null,arguments)},l._emscripten_async_run_in_main_thread=function(){return(l._emscripten_async_run_in_main_thread=l.asm.cb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread=function(){return(l._emscripten_sync_run_in_main_thread=l.asm.db).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_0=function(){return(l._emscripten_sync_run_in_main_thread_0=l.asm.eb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_1=function(){return(l._emscripten_sync_run_in_main_thread_1=l.asm.fb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_2=function(){return(l._emscripten_sync_run_in_main_thread_2=l.asm.gb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(l._emscripten_sync_run_in_main_thread_xprintf_varargs=l.asm.hb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_3=function(){return(l._emscripten_sync_run_in_main_thread_3=l.asm.ib).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_4=function(){return(rn=l._emscripten_sync_run_in_main_thread_4=l.asm.jb).apply(null,arguments)}),an=(l._emscripten_sync_run_in_main_thread_5=function(){return(l._emscripten_sync_run_in_main_thread_5=l.asm.kb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_6=function(){return(l._emscripten_sync_run_in_main_thread_6=l.asm.lb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_7=function(){return(l._emscripten_sync_run_in_main_thread_7=l.asm.mb).apply(null,arguments)},l._emscripten_run_in_main_runtime_thread_js=function(){return(an=l._emscripten_run_in_main_runtime_thread_js=l.asm.nb).apply(null,arguments)}),sn=l._emscripten_async_queue_on_thread_=function(){return(sn=l._emscripten_async_queue_on_thread_=l.asm.ob).apply(null,arguments)},on=(l._emscripten_tls_init=function(){return(l._emscripten_tls_init=l.asm.pb).apply(null,arguments)},l.stackSave=function(){return(on=l.stackSave=l.asm.qb).apply(null,arguments)}),un=l.stackAlloc=function(){return(un=l.stackAlloc=l.asm.rb).apply(null,arguments)},ln=l.stackRestore=function(){return(ln=l.stackRestore=l.asm.sb).apply(null,arguments)},cn=l.dynCall_vi=function(){return(cn=l.dynCall_vi=l.asm.tb).apply(null,arguments)};function dn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function hn(e){function t(){qt||(qt=!0,l.calledRun=!0,R||(ue(),le(),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ce()))}e=e||d,me>0||(oe(),me>0||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),t()}),1)):t()))}if(l.dynCall_v=function(){return(l.dynCall_v=l.asm.ub).apply(null,arguments)},l.dynCall_ii=function(){return(l.dynCall_ii=l.asm.vb).apply(null,arguments)},l.asm=jt,l.cwrap=M,l.PThread=Ue,l.PThread=Ue,l._pthread_self=Pt,l.wasmMemory=S,l.ExitStatus=dn,l.then=function(e){if(qt)e(l);else{var t=l.onRuntimeInitialized;l.onRuntimeInitialized=function(){t&&t(),e(l)}}return l},ye=function e(){qt||hn(),qt||(ye=e)},l.run=hn,l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return g||(C=!0),g||hn(),e});e.exports=a},234:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a=void 0!==(e=e||{})?e:{},s={};for(t in a)a.hasOwnProperty(t)&&(s[t]=a[t]);var i=[],o=function(e,t){throw t},u=!1,l=!1,c=!1,d=!1;u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!u&&!c&&!l;var h,p,f,m,g="";function y(e){return a.locateFile?a.locateFile(e,g):g+e}c?(g=l?n(386).dirname(g)+"/":"//",h=function(e,t){return f||(f=n(993)),m||(m=n(386)),e=m.normalize(e),f.readFileSync(e,t?null:"utf8")},p=function(e){var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),i=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Se))throw e})),process.on("unhandledRejection",ne),o=function(e){process.exit(e)},a.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(h=function(e){return read(e)}),p=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?i=scriptArgs:void 0!==arguments&&(i=arguments),"function"==typeof quit&&(o=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?g=self.location.href:document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.lastIndexOf("/")+1):"",h=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var b,w,x,v=a.print||console.log.bind(console),k=a.printErr||console.warn.bind(console);for(t in s)s.hasOwnProperty(t)&&(a[t]=s[t]);s=null,a.arguments&&(i=a.arguments),a.thisProgram&&a.thisProgram,a.quit&&(o=a.quit),a.wasmBinary&&(b=a.wasmBinary),a.noExitRuntime&&(w=a.noExitRuntime),"object"!=typeof WebAssembly&&k("no native wasm support detected"),new WebAssembly.Table({initial:147,maximum:147,element:"anyfunc"});var I=!1;function N(e,t){e||ne("Assertion failed: "+t)}function C(e){var t=a["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);O(e,t=Ne(n),n)}return t},array:function(e){var t=Ne(e.length);return M(e,t),t}},i=C(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ie()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?D(e):"boolean"===t?Boolean(e):e}(d),0!==u&&Ce(u),d}function E(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?C(e):function(){return S(e,t,n,arguments)}}var T,A,_,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&$)return $.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function D(e,t){return e?R(A,e,t):""}function F(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function O(e,t,n){return F(e,A,t,n)}function M(e,t){T.set(e,t)}function L(e){a.HEAP8=T=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=_=new Int32Array(e),a.HEAPU8=A=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}function B(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?a.dynCall_v(n):a.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(a)}}a.INITIAL_MEMORY;var z=[],P=[],W=[],V=[];function U(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)q(a.preRun.shift());B(z)}function H(){B(P)}function G(){B(W)}function j(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)K(a.postRun.shift());B(V)}function q(e){z.unshift(e)}function K(e){V.unshift(e)}var X=Math.ceil,Y=Math.floor,Z=0,J=null,Q=null;function ee(e){Z++,a.monitorRunDependencies&&a.monitorRunDependencies(Z)}function te(e){if(Z--,a.monitorRunDependencies&&a.monitorRunDependencies(Z),0==Z&&(null!==J&&(clearInterval(J),J=null),Q)){var t=Q;Q=null,t()}}function ne(e){throw a.onAbort&&a.onAbort(e),v(e+=""),k(e),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function re(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}a.preloadedImages={},a.preloadedAudios={};var ae="data:application/octet-stream;base64,";function se(e){return re(e,ae)}var ie="file://";function oe(e){return re(e,ie)}var ue="tfjs-backend-wasm.wasm";function le(){try{if(b)return new Uint8Array(b);if(p)return p(ue);throw"both async and sync fetching of the wasm failed"}catch(e){ne(e)}}function ce(){return b||!u&&!l||"function"!=typeof fetch||oe(ue)?new Promise((function(e,t){e(le())})):fetch(ue,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ue+"'";return e.arrayBuffer()})).catch((function(){return le()}))}function de(){var e={env:xe,wasi_snapshot_preview1:xe};function t(e,t){var n=e.exports;a.asm=n,L((x=n.memory).buffer),te()}function n(e){t(e.instance)}function r(t){return ce().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),ne(e)}))}if(ee(),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(e){return k("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(b||"function"!=typeof WebAssembly.instantiateStreaming||se(ue)||oe(ue)||"function"!=typeof fetch)return r(n);fetch(ue,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}function he(e){L(x.buffer)}se(ue)||(ue=y(ue)),P.push();var pe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=pe.buffers[e];0===t||10===t?((1===e?v:k)(R(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return pe.varargs+=4,_[pe.varargs-4>>2]},getStr:function(e){return D(e)},get64:function(e,t){return e}};function fe(e){return 0}function me(e,t,n,r,a){}function ge(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=_[t+8*s>>2],o=_[t+(8*s+4)>>2],u=0;u<o;u++)pe.printChar(e,A[i+u]);a+=o}return _[r>>2]=a,0}function ye(e){Ae(e)}function be(e){ye(e)}function we(e){return(e=+e)>=0?+Y(e+.5):+X(e-.5)}var xe={emscripten_notify_memory_growth:he,fd_close:fe,fd_seek:me,fd_write:ge,proc_exit:be,roundf:we},ve=de();a.asm=ve,a._init=function(){return(a._init=a.asm.init).apply(null,arguments)},a._register_tensor=function(){return(a._register_tensor=a.asm.register_tensor).apply(null,arguments)},a._dispose_data=function(){return(a._dispose_data=a.asm.dispose_data).apply(null,arguments)},a._dispose=function(){return(a._dispose=a.asm.dispose).apply(null,arguments)},a._Abs=function(){return(a._Abs=a.asm.Abs).apply(null,arguments)},a._Add=function(){return(a._Add=a.asm.Add).apply(null,arguments)},a._AddN=function(){return(a._AddN=a.asm.AddN).apply(null,arguments)},a._ArgMax=function(){return(a._ArgMax=a.asm.ArgMax).apply(null,arguments)},a._AvgPool=function(){return(a._AvgPool=a.asm.AvgPool).apply(null,arguments)},a._BatchMatMul=function(){return(a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},a._ClipByValue=function(){return(a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},a._Conv2D=function(){return(a._Conv2D=a.asm.Conv2D).apply(null,arguments)},a._Conv2DBackpropInput=function(){return(a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},a._Cos=function(){return(a._Cos=a.asm.Cos).apply(null,arguments)},a._CropAndResize=function(){return(a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},a._Cumsum=function(){return(a._Cumsum=a.asm.Cumsum).apply(null,arguments)},a._DepthToSpace=function(){return(a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},a._DepthwiseConv2dNative=function(){return(a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},a._Div=function(){return(a._Div=a.asm.Div).apply(null,arguments)},a._Equal=function(){return(a._Equal=a.asm.Equal).apply(null,arguments)},a._Exp=function(){return(a._Exp=a.asm.Exp).apply(null,arguments)},a._FlipLeftRight=function(){return(a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},a._FloorDiv=function(){return(a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},a._FusedBatchNorm=function(){return(a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},a._FusedConv2D=function(){return(a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},a._FusedDepthwiseConv2D=function(){return(a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},a._Gather=function(){return(a._Gather=a.asm.Gather).apply(null,arguments)},a._GatherNd=function(){return(a._GatherNd=a.asm.GatherNd).apply(null,arguments)},a._Greater=function(){return(a._Greater=a.asm.Greater).apply(null,arguments)},a._GreaterEqual=function(){return(a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},a._Less=function(){return(a._Less=a.asm.Less).apply(null,arguments)},a._LessEqual=function(){return(a._LessEqual=a.asm.LessEqual).apply(null,arguments)},a._Log=function(){return(a._Log=a.asm.Log).apply(null,arguments)},a._LogicalAnd=function(){return(a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},a._Max=function(){return(a._Max=a.asm.Max).apply(null,arguments)},a._MaxPool=function(){return(a._MaxPool=a.asm.MaxPool).apply(null,arguments)},a._Maximum=function(){return(a._Maximum=a.asm.Maximum).apply(null,arguments)},a._Min=function(){return(a._Min=a.asm.Min).apply(null,arguments)},a._Minimum=function(){return(a._Minimum=a.asm.Minimum).apply(null,arguments)},a._Multiply=function(){return(a._Multiply=a.asm.Multiply).apply(null,arguments)},a._Negate=function(){return(a._Negate=a.asm.Negate).apply(null,arguments)},a._NonMaxSuppressionV3=function(){return(a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},a._NonMaxSuppressionV4=function(){return(a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},a._NonMaxSuppressionV5=function(){return(a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},a._NotEqual=function(){return(a._NotEqual=a.asm.NotEqual).apply(null,arguments)},a._OneHot=function(){return(a._OneHot=a.asm.OneHot).apply(null,arguments)},a._PadV2=function(){return(a._PadV2=a.asm.PadV2).apply(null,arguments)},a._Pow=function(){return(a._Pow=a.asm.Pow).apply(null,arguments)},a._Prelu=function(){return(a._Prelu=a.asm.Prelu).apply(null,arguments)},a._Relu=function(){return(a._Relu=a.asm.Relu).apply(null,arguments)},a._Relu6=function(){return(a._Relu6=a.asm.Relu6).apply(null,arguments)},a._ResizeBilinear=function(){return(a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},a._Reverse=function(){return(a._Reverse=a.asm.Reverse).apply(null,arguments)},a._RotateWithOffset=function(){return(a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},a._Rsqrt=function(){return(a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},a._ScatterNd=function(){return(a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},a._SelectV2=function(){return(a._SelectV2=a.asm.SelectV2).apply(null,arguments)},a._Sigmoid=function(){return(a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},a._Sin=function(){return(a._Sin=a.asm.Sin).apply(null,arguments)},a._Softmax=function(){return(a._Softmax=a.asm.Softmax).apply(null,arguments)},a._Sqrt=function(){return(a._Sqrt=a.asm.Sqrt).apply(null,arguments)},a._Square=function(){return(a._Square=a.asm.Square).apply(null,arguments)},a._SquaredDifference=function(){return(a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},a._StridedSlice=function(){return(a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},a._Sub=function(){return(a._Sub=a.asm.Sub).apply(null,arguments)},a._Sum=function(){return(a._Sum=a.asm.Sum).apply(null,arguments)},a._Tanh=function(){return(a._Tanh=a.asm.Tanh).apply(null,arguments)},a._Tile=function(){return(a._Tile=a.asm.Tile).apply(null,arguments)},a._Transpose=function(){return(a._Transpose=a.asm.Transpose).apply(null,arguments)},a.__FusedMatMul=function(){return(a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},a._malloc=function(){return(a._malloc=a.asm.malloc).apply(null,arguments)},a._free=function(){return(a._free=a.asm.free).apply(null,arguments)},a.__start=function(){return(a.__start=a.asm._start).apply(null,arguments)};var ke,Ie=a.stackSave=function(){return(Ie=a.stackSave=a.asm.stackSave).apply(null,arguments)},Ne=a.stackAlloc=function(){return(Ne=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},Ce=a.stackRestore=function(){return(Ce=a.stackRestore=a.asm.stackRestore).apply(null,arguments)};function Se(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ee(e){var t=a.__start;try{t(),Ae(0,!0)}catch(e){if(e instanceof Se)return;if("unwind"==e)return void(w=!0);var n=e;e&&"object"==typeof e&&e.stack&&(n=[e,e.stack]),k("exception thrown: "+n),o(1,e)}}function Te(e){function t(){ke||(ke=!0,a.calledRun=!0,I||(H(),G(),a.onRuntimeInitialized&&a.onRuntimeInitialized(),_e&&Ee(),j()))}e=e||i,Z>0||(U(),Z>0||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),t()}),1)):t()))}function Ae(e,t){t&&w&&0===e||(w||(I=!0,a.onExit&&a.onExit(e)),o(e,new Se(e)))}if(a.asm=ve,a.cwrap=E,a.then=function(e){if(ke)e(a);else{var t=a.onRuntimeInitialized;a.onRuntimeInitialized=function(){t&&t(),e(a)}}return a},Q=function e(){ke||Te(),ke||(Q=e)},a.run=Te,a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();var _e=!0;return a.noInitialRun&&(_e=!1),w=!0,Te(),e});e.exports=a},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),i=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),d=2*c,h=255;function p(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),p=new f(r),w=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|p.g(4)},w.quick=function(){return p.g(4)/4294967296},w.double=w,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,y(s.random(),a),e.exports){e.exports=p;try{i=n(906)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},455:function(e){e.exports=function(){"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function t(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function u(e,t,n){return(u=o()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var a=new(Function.bind.apply(e,r));return n&&i(a,n.prototype),a}).apply(null,arguments)}function l(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(r){var a=Object.getOwnPropertyDescriptor(r,t);return a.get?a.get.call(n):a.value}})(e,t,n||e)}var d="SweetAlert2:",h=function(e){return Object.keys(e).map((function(t){return e[t]}))},p=function(e){return Array.prototype.slice.call(e)},f=function(e){console.warn("".concat(d," ").concat(e))},m=function(e){console.error("".concat(d," ").concat(e))},g=[],y=function(e,t){var n;n='"'.concat(e,'" is deprecated and will be removed in the next major release. Please use "').concat(t,'" instead.'),-1===g.indexOf(n)&&(g.push(n),f(n))},b=function(e){return"function"==typeof e?e():e},w=function(e){return e&&"function"==typeof e.toPromise},x=function(e){return w(e)?e.toPromise():Promise.resolve(e)},v=function(e){return e&&Promise.resolve(e)===e},k=Object.freeze({cancel:"cancel",backdrop:"backdrop",close:"close",esc:"esc",timer:"timer"}),I=function(t){return t instanceof Element||function(t){return"object"===e(t)&&t.jquery}(t)},N=function(e){var t={};for(var n in e)t[e[n]]="swal2-"+e[n];return t},C=N(["container","shown","height-auto","iosfix","popup","modal","no-backdrop","no-transition","toast","toast-shown","toast-column","show","hide","close","title","header","content","html-container","actions","confirm","deny","cancel","footer","icon","icon-content","image","input","file","range","select","radio","checkbox","label","textarea","inputerror","input-label","validation-message","progress-steps","active-progress-step","progress-step","progress-step-line","loader","loading","styled","top","top-start","top-end","top-left","top-right","center","center-start","center-end","center-left","center-right","bottom","bottom-start","bottom-end","bottom-left","bottom-right","grow-row","grow-column","grow-fullscreen","rtl","timer-progress-bar","timer-progress-bar-container","scrollbar-measure","icon-success","icon-warning","icon-info","icon-question","icon-error"]),S=N(["success","warning","info","question","error"]),E=function(){return document.body.querySelector(".".concat(C.container))},T=function(e){var t=E();return t?t.querySelector(e):null},A=function(e){return T(".".concat(e))},_=function(){return A(C.popup)},$=function(){var e=_();return p(e.querySelectorAll(".".concat(C.icon)))},R=function(){var e=$().filter((function(e){return he(e)}));return e.length?e[0]:null},D=function(){return A(C.title)},F=function(){return A(C.content)},O=function(){return A(C.image)},M=function(){return A(C["progress-steps"])},L=function(){return A(C["validation-message"])},B=function(){return T(".".concat(C.actions," .").concat(C.confirm))},z=function(){return T(".".concat(C.actions," .").concat(C.deny))},P=function(){return T(".".concat(C.loader))},W=function(){return T(".".concat(C.actions," .").concat(C.cancel))},V=function(){return A(C.actions)},U=function(){return A(C.header)},H=function(){return A(C.footer)},G=function(){return A(C["timer-progress-bar"])},j=function(){return A(C.close)},q=function(){var e=p(_().querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])')).sort((function(e,t){return(e=parseInt(e.getAttribute("tabindex")))>(t=parseInt(t.getAttribute("tabindex")))?1:e<t?-1:0})),t=p(_().querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n')).filter((function(e){return"-1"!==e.getAttribute("tabindex")}));return function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(e.concat(t)).filter((function(e){return he(e)}))},K=function(){return!X()&&!document.body.classList.contains(C["no-backdrop"])},X=function(){return document.body.classList.contains(C["toast-shown"])},Y={previousBodyPadding:null},Z=function(e,t){if(e.textContent="",t){var n=(new DOMParser).parseFromString(t,"text/html");p(n.querySelector("head").childNodes).forEach((function(t){e.appendChild(t)})),p(n.querySelector("body").childNodes).forEach((function(t){e.appendChild(t)}))}},J=function(e,t){if(!t)return!1;for(var n=t.split(/\s+/),r=0;r<n.length;r++)if(!e.classList.contains(n[r]))return!1;return!0},Q=function(t,n,r){if(function(e,t){p(e.classList).forEach((function(n){-1===h(C).indexOf(n)&&-1===h(S).indexOf(n)&&-1===h(t.showClass).indexOf(n)&&e.classList.remove(n)}))}(t,n),n.customClass&&n.customClass[r]){if("string"!=typeof n.customClass[r]&&!n.customClass[r].forEach)return f("Invalid type of customClass.".concat(r,'! Expected string or iterable object, got "').concat(e(n.customClass[r]),'"'));ae(t,n.customClass[r])}};function ee(e,t){if(!t)return null;switch(t){case"select":case"textarea":case"file":return ie(e,C[t]);case"checkbox":return e.querySelector(".".concat(C.checkbox," input"));case"radio":return e.querySelector(".".concat(C.radio," input:checked"))||e.querySelector(".".concat(C.radio," input:first-child"));case"range":return e.querySelector(".".concat(C.range," input"));default:return ie(e,C.input)}}var te,ne=function(e){if(e.focus(),"file"!==e.type){var t=e.value;e.value="",e.value=t}},re=function(e,t,n){e&&t&&("string"==typeof t&&(t=t.split(/\s+/).filter(Boolean)),t.forEach((function(t){e.forEach?e.forEach((function(e){n?e.classList.add(t):e.classList.remove(t)})):n?e.classList.add(t):e.classList.remove(t)})))},ae=function(e,t){re(e,t,!0)},se=function(e,t){re(e,t,!1)},ie=function(e,t){for(var n=0;n<e.childNodes.length;n++)if(J(e.childNodes[n],t))return e.childNodes[n]},oe=function(e,t,n){n||0===parseInt(n)?e.style[t]="number"==typeof n?"".concat(n,"px"):n:e.style.removeProperty(t)},ue=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"flex";e.style.display=t},le=function(e){e.style.display="none"},ce=function(e,t,n,r){var a=e.querySelector(t);a&&(a.style[n]=r)},de=function(e,t,n){t?ue(e,n):le(e)},he=function(e){return!(!e||!(e.offsetWidth||e.offsetHeight||e.getClientRects().length))},pe=function(e){return!!(e.scrollHeight>e.clientHeight)},fe=function(e){var t=window.getComputedStyle(e),n=parseFloat(t.getPropertyValue("animation-duration")||"0"),r=parseFloat(t.getPropertyValue("transition-duration")||"0");return n>0||r>0},me=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=G();he(n)&&(t&&(n.style.transition="none",n.style.width="100%"),setTimeout((function(){n.style.transition="width ".concat(e/1e3,"s linear"),n.style.width="0%"}),10))},ge=function(){return"undefined"==typeof window||"undefined"==typeof document},ye='\n <div aria-labelledby="'.concat(C.title,'" aria-describedby="').concat(C.content,'" class="').concat(C.popup,'" tabindex="-1">\n   <div class="').concat(C.header,'">\n     <ul class="').concat(C["progress-steps"],'"></ul>\n     <div class="').concat(C.icon," ").concat(S.error,'"></div>\n     <div class="').concat(C.icon," ").concat(S.question,'"></div>\n     <div class="').concat(C.icon," ").concat(S.warning,'"></div>\n     <div class="').concat(C.icon," ").concat(S.info,'"></div>\n     <div class="').concat(C.icon," ").concat(S.success,'"></div>\n     <img class="').concat(C.image,'" />\n     <h2 class="').concat(C.title,'" id="').concat(C.title,'"></h2>\n     <button type="button" class="').concat(C.close,'"></button>\n   </div>\n   <div class="').concat(C.content,'">\n     <div id="').concat(C.content,'" class="').concat(C["html-container"],'"></div>\n     <input class="').concat(C.input,'" />\n     <input type="file" class="').concat(C.file,'" />\n     <div class="').concat(C.range,'">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="').concat(C.select,'"></select>\n     <div class="').concat(C.radio,'"></div>\n     <label for="').concat(C.checkbox,'" class="').concat(C.checkbox,'">\n       <input type="checkbox" />\n       <span class="').concat(C.label,'"></span>\n     </label>\n     <textarea class="').concat(C.textarea,'"></textarea>\n     <div class="').concat(C["validation-message"],'" id="').concat(C["validation-message"],'"></div>\n   </div>\n   <div class="').concat(C.actions,'">\n     <div class="').concat(C.loader,'"></div>\n     <button type="button" class="').concat(C.confirm,'"></button>\n     <button type="button" class="').concat(C.deny,'"></button>\n     <button type="button" class="').concat(C.cancel,'"></button>\n   </div>\n   <div class="').concat(C.footer,'"></div>\n   <div class="').concat(C["timer-progress-bar-container"],'">\n     <div class="').concat(C["timer-progress-bar"],'"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g,""),be=function(e){In.isVisible()&&te!==e.target.value&&In.resetValidationMessage(),te=e.target.value},we=function(e){var t,n,r,a,s,i,o,u,l,c,d=!!(t=E())&&(t.parentNode.removeChild(t),se([document.documentElement,document.body],[C["no-backdrop"],C["toast-shown"],C["has-column"]]),!0);if(ge())m("SweetAlert2 requires document to initialize");else{var h=document.createElement("div");h.className=C.container,d&&ae(h,C["no-transition"]),Z(h,ye);var p="string"==typeof(c=e.target)?document.querySelector(c):c;p.appendChild(h),function(e){var t=_();t.setAttribute("role",e.toast?"alert":"dialog"),t.setAttribute("aria-live",e.toast?"polite":"assertive"),e.toast||t.setAttribute("aria-modal","true")}(e),function(e){"rtl"===window.getComputedStyle(e).direction&&ae(E(),C.rtl)}(p),n=F(),r=ie(n,C.input),a=ie(n,C.file),s=n.querySelector(".".concat(C.range," input")),i=n.querySelector(".".concat(C.range," output")),o=ie(n,C.select),u=n.querySelector(".".concat(C.checkbox," input")),l=ie(n,C.textarea),r.oninput=be,a.onchange=be,o.onchange=be,u.onchange=be,l.oninput=be,s.oninput=function(e){be(e),i.value=s.value},s.onchange=function(e){be(e),s.nextSibling.value=s.value}}},xe=function(t,n){t instanceof HTMLElement?n.appendChild(t):"object"===e(t)?ve(t,n):t&&Z(n,t)},ve=function(e,t){e.jquery?ke(t,e):Z(t,e.toString())},ke=function(e,t){if(e.textContent="",0 in t)for(var n=0;n in t;n++)e.appendChild(t[n].cloneNode(!0));else e.appendChild(t.cloneNode(!0))},Ie=function(){if(ge())return!1;var e=document.createElement("div"),t={WebkitAnimation:"webkitAnimationEnd",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&void 0!==e.style[n])return t[n];return!1}(),Ne=function(e,t){var n=V(),r=P(),a=B(),s=z(),i=W();t.showConfirmButton||t.showDenyButton||t.showCancelButton||le(n),Q(n,t,"actions"),Ce(a,"confirm",t),Ce(s,"deny",t),Ce(i,"cancel",t),function(e,t,n,r){if(!r.buttonsStyling)return se([e,t,n],C.styled);ae([e,t,n],C.styled),r.confirmButtonColor&&(e.style.backgroundColor=r.confirmButtonColor),r.denyButtonColor&&(t.style.backgroundColor=r.denyButtonColor),r.cancelButtonColor&&(n.style.backgroundColor=r.cancelButtonColor)}(a,s,i,t),t.reverseButtons&&(n.insertBefore(i,r),n.insertBefore(s,r),n.insertBefore(a,r)),r.innerHTML=t.loaderHtml,Q(r,t,"loader")};function Ce(e,t,n){var r;de(e,n["show".concat((r=t,r.charAt(0).toUpperCase()+r.slice(1)),"Button")],"inline-block"),Z(e,n["".concat(t,"ButtonText")]),e.setAttribute("aria-label",n["".concat(t,"ButtonAriaLabel")]),e.className=C[t],Q(e,n,"".concat(t,"Button")),ae(e,n["".concat(t,"ButtonClass")])}var Se=function(e,t){var n=E();if(n){(function(e,t){"string"==typeof t?e.style.background=t:t||ae([document.documentElement,document.body],C["no-backdrop"])})(n,t.backdrop),!t.backdrop&&t.allowOutsideClick&&f('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'),function(e,t){t in C?ae(e,C[t]):(f('The "position" parameter is not valid, defaulting to "center"'),ae(e,C.center))}(n,t.position),function(e,t){if(t&&"string"==typeof t){var n="grow-".concat(t);n in C&&ae(e,C[n])}}(n,t.grow),Q(n,t,"container");var r=document.body.getAttribute("data-swal2-queue-step");r&&(n.setAttribute("data-queue-step",r),document.body.removeAttribute("data-swal2-queue-step"))}},Ee={promise:new WeakMap,innerParams:new WeakMap,domCache:new WeakMap},Te=["input","file","range","select","radio","checkbox","textarea"],Ae=function(e){if(!Oe[e.input])return m('Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(e.input,'"'));var t=Fe(e.input),n=Oe[e.input](t,e);ue(n),setTimeout((function(){ne(n)}))},_e=function(e,t){var n=ee(F(),e);if(n)for(var r in function(e){for(var t=0;t<e.attributes.length;t++){var n=e.attributes[t].name;-1===["type","value","style"].indexOf(n)&&e.removeAttribute(n)}}(n),t)"range"===e&&"placeholder"===r||n.setAttribute(r,t[r])},$e=function(e){var t=Fe(e.input);e.customClass&&ae(t,e.customClass.input)},Re=function(e,t){e.placeholder&&!t.inputPlaceholder||(e.placeholder=t.inputPlaceholder)},De=function(e,t,n){if(n.inputLabel){e.id=C.input;var r=document.createElement("label"),a=C["input-label"];r.setAttribute("for",e.id),r.className=a,r.innerText=n.inputLabel,t.insertAdjacentElement("beforebegin",r)}},Fe=function(e){var t=C[e]?C[e]:C.input;return ie(F(),t)},Oe={};Oe.text=Oe.email=Oe.password=Oe.number=Oe.tel=Oe.url=function(t,n){return"string"==typeof n.inputValue||"number"==typeof n.inputValue?t.value=n.inputValue:v(n.inputValue)||f('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(e(n.inputValue),'"')),De(t,t,n),Re(t,n),t.type=n.input,t},Oe.file=function(e,t){return De(e,e,t),Re(e,t),e},Oe.range=function(e,t){var n=e.querySelector("input"),r=e.querySelector("output");return n.value=t.inputValue,n.type=t.input,r.value=t.inputValue,De(n,e,t),e},Oe.select=function(e,t){if(e.textContent="",t.inputPlaceholder){var n=document.createElement("option");Z(n,t.inputPlaceholder),n.value="",n.disabled=!0,n.selected=!0,e.appendChild(n)}return De(e,e,t),e},Oe.radio=function(e){return e.textContent="",e},Oe.checkbox=function(e,t){var n=ee(F(),"checkbox");n.value=1,n.id=C.checkbox,n.checked=Boolean(t.inputValue);var r=e.querySelector("span");return Z(r,t.inputPlaceholder),e},Oe.textarea=function(e,t){if(e.value=t.inputValue,Re(e,t),De(e,e,t),"MutationObserver"in window){var n=parseInt(window.getComputedStyle(_()).width),r=parseInt(window.getComputedStyle(_()).paddingLeft)+parseInt(window.getComputedStyle(_()).paddingRight);new MutationObserver((function(){var t=e.offsetWidth+r;_().style.width=t>n?"".concat(t,"px"):null})).observe(e,{attributes:!0,attributeFilter:["style"]})}return e};var Me=function(e,t){var n=F().querySelector("#".concat(C.content));t.html?(xe(t.html,n),ue(n,"block")):t.text?(n.textContent=t.text,ue(n,"block")):le(n),function(e,t){var n=F(),r=Ee.innerParams.get(e),a=!r||t.input!==r.input;Te.forEach((function(e){var r=C[e],s=ie(n,r);_e(e,t.inputAttributes),s.className=r,a&&le(s)})),t.input&&(a&&Ae(t),$e(t))}(e,t),Q(F(),t,"content")},Le=function(){for(var e=$(),t=0;t<e.length;t++)le(e[t])},Be=function(e,t){We(e,t),ze(),Q(e,t,"icon")},ze=function(){for(var e=_(),t=window.getComputedStyle(e).getPropertyValue("background-color"),n=e.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"),r=0;r<n.length;r++)n[r].style.backgroundColor=t},Pe=function(e,t){e.textContent="",t.iconHtml?Z(e,Ve(t.iconHtml)):"success"===t.icon?Z(e,'\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    '):"error"===t.icon?Z(e,'\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    '):Z(e,Ve({question:"?",warning:"!",info:"i"}[t.icon]))},We=function(e,t){if(t.iconColor){e.style.color=t.iconColor,e.style.borderColor=t.iconColor;for(var n=0,r=[".swal2-success-line-tip",".swal2-success-line-long",".swal2-x-mark-line-left",".swal2-x-mark-line-right"];n<r.length;n++){ce(e,r[n],"backgroundColor",t.iconColor)}ce(e,".swal2-success-ring","borderColor",t.iconColor)}},Ve=function(e){return'<div class="'.concat(C["icon-content"],'">').concat(e,"</div>")},Ue=[],He=function(){return E()&&E().getAttribute("data-queue-step")},Ge=function(e,t){var n=M();if(!t.progressSteps||0===t.progressSteps.length)return le(n);ue(n),n.textContent="";var r=parseInt(void 0===t.currentProgressStep?He():t.currentProgressStep);r>=t.progressSteps.length&&f("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"),t.progressSteps.forEach((function(e,a){var s=function(e){var t=document.createElement("li");return ae(t,C["progress-step"]),Z(t,e),t}(e);if(n.appendChild(s),a===r&&ae(s,C["active-progress-step"]),a!==t.progressSteps.length-1){var i=function(e){var t=document.createElement("li");return ae(t,C["progress-step-line"]),e.progressStepsDistance&&(t.style.width=e.progressStepsDistance),t}(t);n.appendChild(i)}}))},je=function(e,t){var n=U();Q(n,t,"header"),Ge(0,t),function(e,t){var n=Ee.innerParams.get(e);if(n&&t.icon===n.icon&&R())Be(R(),t);else if(Le(),t.icon)if(-1!==Object.keys(S).indexOf(t.icon)){var r=T(".".concat(C.icon,".").concat(S[t.icon]));ue(r),Pe(r,t),Be(r,t),ae(r,t.showClass.icon)}else m('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(t.icon,'"'))}(e,t),function(e,t){var n=O();if(!t.imageUrl)return le(n);ue(n,""),n.setAttribute("src",t.imageUrl),n.setAttribute("alt",t.imageAlt),oe(n,"width",t.imageWidth),oe(n,"height",t.imageHeight),n.className=C.image,Q(n,t,"image")}(0,t),function(e,t){var n=D();de(n,t.title||t.titleText),t.title&&xe(t.title,n),t.titleText&&(n.innerText=t.titleText),Q(n,t,"title")}(0,t),function(e,t){var n=j();Z(n,t.closeButtonHtml),Q(n,t,"closeButton"),de(n,t.showCloseButton),n.setAttribute("aria-label",t.closeButtonAriaLabel)}(0,t)},qe=function(e,t){e.className="".concat(C.popup," ").concat(he(e)?t.showClass.popup:""),t.toast?(ae([document.documentElement,document.body],C["toast-shown"]),ae(e,C.toast)):ae(e,C.modal),Q(e,t,"popup"),"string"==typeof t.customClass&&ae(e,t.customClass),t.icon&&ae(e,C["icon-".concat(t.icon)])},Ke=function(e,t){(function(e,t){var n=_();oe(n,"width",t.width),oe(n,"padding",t.padding),t.background&&(n.style.background=t.background),qe(n,t)})(0,t),Se(0,t),je(e,t),Me(e,t),Ne(0,t),function(e,t){var n=H();de(n,t.footer),t.footer&&xe(t.footer,n),Q(n,t,"footer")}(0,t),"function"==typeof t.didRender?t.didRender(_()):"function"==typeof t.onRender&&t.onRender(_())},Xe=function(){return B()&&B().click()};var Ye=function(){var e=_();e||In.fire(),e=_();var t=V(),n=B(),r=P();ue(t),le(n),ae([e,t],C.loading),ue(r),e.setAttribute("data-loading",!0),e.setAttribute("aria-busy",!0),e.focus()},Ze={},Je=function(){return new Promise((function(e){var t=window.scrollX,n=window.scrollY;Ze.restoreFocusTimeout=setTimeout((function(){Ze.previousActiveElement&&Ze.previousActiveElement.focus?(Ze.previousActiveElement.focus(),Ze.previousActiveElement=null):document.body&&document.body.focus(),e()}),100),void 0!==t&&void 0!==n&&window.scrollTo(t,n)}))},Qe=function(){if(Ze.timeout)return function(){var e=G(),t=parseInt(window.getComputedStyle(e).width);e.style.removeProperty("transition"),e.style.width="100%";var n=parseInt(window.getComputedStyle(e).width),r=parseInt(t/n*100);e.style.removeProperty("transition"),e.style.width="".concat(r,"%")}(),Ze.timeout.stop()},et=function(){if(Ze.timeout){var e=Ze.timeout.start();return me(e),e}},tt={title:"",titleText:"",text:"",html:"",footer:"",icon:void 0,iconColor:void 0,iconHtml:void 0,toast:!1,animation:!0,showClass:{popup:"swal2-show",backdrop:"swal2-backdrop-show",icon:"swal2-icon-show"},hideClass:{popup:"swal2-hide",backdrop:"swal2-backdrop-hide",icon:"swal2-icon-hide"},customClass:void 0,target:"body",backdrop:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showDenyButton:!1,showCancelButton:!1,preConfirm:void 0,preDeny:void 0,confirmButtonText:"OK",confirmButtonAriaLabel:"",confirmButtonColor:void 0,denyButtonText:"No",denyButtonAriaLabel:"",denyButtonColor:void 0,cancelButtonText:"Cancel",cancelButtonAriaLabel:"",cancelButtonColor:void 0,buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusDeny:!1,focusCancel:!1,showCloseButton:!1,closeButtonHtml:"&times;",closeButtonAriaLabel:"Close this dialog",loaderHtml:"",showLoaderOnConfirm:!1,imageUrl:void 0,imageWidth:void 0,imageHeight:void 0,imageAlt:"",timer:void 0,timerProgressBar:!1,width:void 0,padding:void 0,background:void 0,input:void 0,inputPlaceholder:"",inputLabel:"",inputValue:"",inputOptions:{},inputAutoTrim:!0,inputAttributes:{},inputValidator:void 0,returnInputValueOnDeny:!1,validationMessage:void 0,grow:!1,position:"center",progressSteps:[],currentProgressStep:void 0,progressStepsDistance:void 0,onBeforeOpen:void 0,onOpen:void 0,willOpen:void 0,didOpen:void 0,onRender:void 0,didRender:void 0,onClose:void 0,onAfterClose:void 0,willClose:void 0,didClose:void 0,onDestroy:void 0,didDestroy:void 0,scrollbarPadding:!0},nt=["allowEscapeKey","allowOutsideClick","background","buttonsStyling","cancelButtonAriaLabel","cancelButtonColor","cancelButtonText","closeButtonAriaLabel","closeButtonHtml","confirmButtonAriaLabel","confirmButtonColor","confirmButtonText","currentProgressStep","customClass","denyButtonAriaLabel","denyButtonColor","denyButtonText","didClose","didDestroy","footer","hideClass","html","icon","iconColor","imageAlt","imageHeight","imageUrl","imageWidth","onAfterClose","onClose","onDestroy","progressSteps","reverseButtons","showCancelButton","showCloseButton","showConfirmButton","showDenyButton","text","title","titleText","willClose"],rt={animation:'showClass" and "hideClass',onBeforeOpen:"willOpen",onOpen:"didOpen",onRender:"didRender",onClose:"willClose",onAfterClose:"didClose",onDestroy:"didDestroy"},at=["allowOutsideClick","allowEnterKey","backdrop","focusConfirm","focusDeny","focusCancel","heightAuto","keydownListenerCapture"],st=function(e){return Object.prototype.hasOwnProperty.call(tt,e)},it=function(e){return rt[e]},ot=function(e){st(e)||f('Unknown parameter "'.concat(e,'"'))},ut=function(e){-1!==at.indexOf(e)&&f('The parameter "'.concat(e,'" is incompatible with toasts'))},lt=function(e){it(e)&&y(e,it(e))},ct=Object.freeze({isValidParameter:st,isUpdatableParameter:function(e){return-1!==nt.indexOf(e)},isDeprecatedParameter:it,argsToParams:function(t){var n={};return"object"!==e(t[0])||I(t[0])?["title","html","icon"].forEach((function(r,a){var s=t[a];"string"==typeof s||I(s)?n[r]=s:void 0!==s&&m("Unexpected type of ".concat(r,'! Expected "string" or "Element", got ').concat(e(s)))})):a(n,t[0]),n},isVisible:function(){return he(_())},clickConfirm:Xe,clickDeny:function(){return z()&&z().click()},clickCancel:function(){return W()&&W().click()},getContainer:E,getPopup:_,getTitle:D,getContent:F,getHtmlContainer:function(){return A(C["html-container"])},getImage:O,getIcon:R,getIcons:$,getInputLabel:function(){return A(C["input-label"])},getCloseButton:j,getActions:V,getConfirmButton:B,getDenyButton:z,getCancelButton:W,getLoader:P,getHeader:U,getFooter:H,getTimerProgressBar:G,getFocusableElements:q,getValidationMessage:L,isLoading:function(){return _().hasAttribute("data-loading")},fire:function(){for(var e=this,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return u(e,n)},mixin:function(e){return function(n){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(p,n);var u,d,h=(u=p,d=o(),function(){var e,t=s(u);if(d){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function p(){return t(this,p),h.apply(this,arguments)}return r(p,[{key:"_main",value:function(t){return c(s(p.prototype),"_main",this).call(this,a({},e,t))}}]),p}(this)},queue:function(e){var t=this;Ue=e;var n=function(e,t){Ue=[],e(t)},r=[];return new Promise((function(e){!function a(s,i){s<Ue.length?(document.body.setAttribute("data-swal2-queue-step",s),t.fire(Ue[s]).then((function(t){void 0!==t.value?(r.push(t.value),a(s+1,i)):n(e,{dismiss:t.dismiss})}))):n(e,{value:r})}(0)}))},getQueueStep:He,insertQueueStep:function(e,t){return t&&t<Ue.length?Ue.splice(t,0,e):Ue.push(e)},deleteQueueStep:function(e){void 0!==Ue[e]&&Ue.splice(e,1)},showLoading:Ye,enableLoading:Ye,getTimerLeft:function(){return Ze.timeout&&Ze.timeout.getTimerLeft()},stopTimer:Qe,resumeTimer:et,toggleTimer:function(){var e=Ze.timeout;return e&&(e.running?Qe():et())},increaseTimer:function(e){if(Ze.timeout){var t=Ze.timeout.increase(e);return me(t,!0),t}},isTimerRunning:function(){return Ze.timeout&&Ze.timeout.isRunning()}});function dt(){var e=Ee.innerParams.get(this);if(e){var t=Ee.domCache.get(this);le(t.loader),e.showConfirmButton?ue(t.confirmButton,"inline-block"):e.showConfirmButton||e.showCancelButton||le(t.actions),se([t.popup,t.actions],C.loading),t.popup.removeAttribute("aria-busy"),t.popup.removeAttribute("data-loading"),t.confirmButton.disabled=!1,t.denyButton.disabled=!1,t.cancelButton.disabled=!1}}var ht=function(){null===Y.previousBodyPadding&&document.body.scrollHeight>window.innerHeight&&(Y.previousBodyPadding=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")),document.body.style.paddingRight="".concat(Y.previousBodyPadding+function(){var e=document.createElement("div");e.className=C["scrollbar-measure"],document.body.appendChild(e);var t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t}(),"px"))},pt=function(){if(!navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i)){_().scrollHeight>window.innerHeight-44&&(E().style.paddingBottom="".concat(44,"px"))}},ft=function(){var e,t=E();t.ontouchstart=function(t){e=mt(t)},t.ontouchmove=function(t){e&&(t.preventDefault(),t.stopPropagation())}},mt=function(e){var t=e.target,n=E();return!(e.touches&&e.touches.length&&"stylus"===e.touches[0].touchType||t!==n&&(pe(n)||"INPUT"===t.tagName||pe(F())&&F().contains(t)))},gt=function(){return!!window.MSInputMethodContext&&!!document.documentMode},yt=function(){var e=E(),t=_();e.style.removeProperty("align-items"),t.offsetTop<0&&(e.style.alignItems="flex-start")},bt={swalPromiseResolve:new WeakMap};function wt(e,t,n,r){n?Ct(e,r):(Je().then((function(){return Ct(e,r)})),Ze.keydownTarget.removeEventListener("keydown",Ze.keydownHandler,{capture:Ze.keydownListenerCapture}),Ze.keydownHandlerAdded=!1),t.parentNode&&!document.body.getAttribute("data-swal2-queue-step")&&t.parentNode.removeChild(t),K()&&(null!==Y.previousBodyPadding&&(document.body.style.paddingRight="".concat(Y.previousBodyPadding,"px"),Y.previousBodyPadding=null),function(){if(J(document.body,C.iosfix)){var e=parseInt(document.body.style.top,10);se(document.body,C.iosfix),document.body.style.top="",document.body.scrollTop=-1*e}}(),"undefined"!=typeof window&&gt()&&window.removeEventListener("resize",yt),p(document.body.children).forEach((function(e){e.hasAttribute("data-previous-aria-hidden")?(e.setAttribute("aria-hidden",e.getAttribute("data-previous-aria-hidden")),e.removeAttribute("data-previous-aria-hidden")):e.removeAttribute("aria-hidden")}))),se([document.documentElement,document.body],[C.shown,C["height-auto"],C["no-backdrop"],C["toast-shown"],C["toast-column"]])}function xt(e){var t=_();if(t){e=vt(e);var n=Ee.innerParams.get(this);if(n&&!J(t,n.hideClass.popup)){var r=bt.swalPromiseResolve.get(this);se(t,n.showClass.popup),ae(t,n.hideClass.popup);var a=E();se(a,n.showClass.backdrop),ae(a,n.hideClass.backdrop),kt(this,t,n),r(e)}}}var vt=function(e){return void 0===e?{isConfirmed:!1,isDenied:!1,isDismissed:!0}:a({isConfirmed:!1,isDenied:!1,isDismissed:!1},e)},kt=function(e,t,n){var r=E(),a=Ie&&fe(t),s=n.onClose,i=n.onAfterClose,o=n.willClose,u=n.didClose;It(t,o,s),a?Nt(e,t,r,u||i):wt(e,r,X(),u||i)},It=function(e,t,n){null!==t&&"function"==typeof t?t(e):null!==n&&"function"==typeof n&&n(e)},Nt=function(e,t,n,r){Ze.swalCloseEventFinishedCallback=wt.bind(null,e,n,X(),r),t.addEventListener(Ie,(function(e){e.target===t&&(Ze.swalCloseEventFinishedCallback(),delete Ze.swalCloseEventFinishedCallback)}))},Ct=function(e,t){setTimeout((function(){"function"==typeof t&&t(),e._destroy()}))};function St(e,t,n){var r=Ee.domCache.get(e);t.forEach((function(e){r[e].disabled=n}))}function Et(e,t){if(!e)return!1;if("radio"===e.type)for(var n=e.parentNode.parentNode.querySelectorAll("input"),r=0;r<n.length;r++)n[r].disabled=t;else e.disabled=t}var Tt=function(){function e(n,r){t(this,e),this.callback=n,this.remaining=r,this.running=!1,this.start()}return r(e,[{key:"start",value:function(){return this.running||(this.running=!0,this.started=new Date,this.id=setTimeout(this.callback,this.remaining)),this.remaining}},{key:"stop",value:function(){return this.running&&(this.running=!1,clearTimeout(this.id),this.remaining-=new Date-this.started),this.remaining}},{key:"increase",value:function(e){var t=this.running;return t&&this.stop(),this.remaining+=e,t&&this.start(),this.remaining}},{key:"getTimerLeft",value:function(){return this.running&&(this.stop(),this.start()),this.remaining}},{key:"isRunning",value:function(){return this.running}}]),e}(),At={email:function(e,t){return/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e)?Promise.resolve():Promise.resolve(t||"Invalid email address")},url:function(e,t){return/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e)?Promise.resolve():Promise.resolve(t||"Invalid URL")}};function _t(e){(function(e){e.inputValidator||Object.keys(At).forEach((function(t){e.input===t&&(e.inputValidator=At[t])}))})(e),e.showLoaderOnConfirm&&!e.preConfirm&&f("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"),e.animation=b(e.animation),function(e){(!e.target||"string"==typeof e.target&&!document.querySelector(e.target)||"string"!=typeof e.target&&!e.target.appendChild)&&(f('Target parameter is not valid, defaulting to "body"'),e.target="body")}(e),"string"==typeof e.title&&(e.title=e.title.split("\n").join("<br />")),we(e)}var $t=function(e){var t=E(),n=_();"function"==typeof e.willOpen?e.willOpen(n):"function"==typeof e.onBeforeOpen&&e.onBeforeOpen(n);var r=window.getComputedStyle(document.body).overflowY;Mt(t,n,e),setTimeout((function(){Ft(t,n)}),10),K()&&(Ot(t,e.scrollbarPadding,r),p(document.body.children).forEach((function(e){e===E()||function(e,t){if("function"==typeof e.contains)return e.contains(t)}(e,E())||(e.hasAttribute("aria-hidden")&&e.setAttribute("data-previous-aria-hidden",e.getAttribute("aria-hidden")),e.setAttribute("aria-hidden","true"))}))),X()||Ze.previousActiveElement||(Ze.previousActiveElement=document.activeElement),Rt(n,e),se(t,C["no-transition"])},Rt=function(e,t){"function"==typeof t.didOpen?setTimeout((function(){return t.didOpen(e)})):"function"==typeof t.onOpen&&setTimeout((function(){return t.onOpen(e)}))},Dt=function e(t){var n=_();if(t.target===n){var r=E();n.removeEventListener(Ie,e),r.style.overflowY="auto"}},Ft=function(e,t){Ie&&fe(t)?(e.style.overflowY="hidden",t.addEventListener(Ie,Dt)):e.style.overflowY="auto"},Ot=function(e,t,n){(function(){if((/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream||"MacIntel"===navigator.platform&&navigator.maxTouchPoints>1)&&!J(document.body,C.iosfix)){var e=document.body.scrollTop;document.body.style.top="".concat(-1*e,"px"),ae(document.body,C.iosfix),ft(),pt()}})(),"undefined"!=typeof window&&gt()&&(yt(),window.addEventListener("resize",yt)),t&&"hidden"!==n&&ht(),setTimeout((function(){e.scrollTop=0}))},Mt=function(e,t,n){ae(e,n.showClass.backdrop),t.style.setProperty("opacity","0","important"),ue(t),setTimeout((function(){ae(t,n.showClass.popup),t.style.removeProperty("opacity")}),10),ae([document.documentElement,document.body],C.shown),n.heightAuto&&n.backdrop&&!n.toast&&ae([document.documentElement,document.body],C["height-auto"])},Lt=function(e){return e.checked?1:0},Bt=function(e){return e.checked?e.value:null},zt=function(e){return e.files.length?null!==e.getAttribute("multiple")?e.files:e.files[0]:null},Pt=function(t,n){var r=F(),a=function(e){return Vt[n.input](r,Ut(e),n)};w(n.inputOptions)||v(n.inputOptions)?(Ye(),x(n.inputOptions).then((function(e){t.hideLoading(),a(e)}))):"object"===e(n.inputOptions)?a(n.inputOptions):m("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(e(n.inputOptions)))},Wt=function(e,t){var n=e.getInput();le(n),x(t.inputValue).then((function(r){n.value="number"===t.input?parseFloat(r)||0:"".concat(r),ue(n),n.focus(),e.hideLoading()})).catch((function(t){m("Error in inputValue promise: ".concat(t)),n.value="",ue(n),n.focus(),e.hideLoading()}))},Vt={select:function(e,t,n){var r=ie(e,C.select),a=function(e,t,r){var a=document.createElement("option");a.value=r,Z(a,t),n.inputValue.toString()===r.toString()&&(a.selected=!0),e.appendChild(a)};t.forEach((function(e){var t=e[0],n=e[1];if(Array.isArray(n)){var s=document.createElement("optgroup");s.label=t,s.disabled=!1,r.appendChild(s),n.forEach((function(e){return a(s,e[1],e[0])}))}else a(r,n,t)})),r.focus()},radio:function(e,t,n){var r=ie(e,C.radio);t.forEach((function(e){var t=e[0],a=e[1],s=document.createElement("input"),i=document.createElement("label");s.type="radio",s.name=C.radio,s.value=t,n.inputValue.toString()===t.toString()&&(s.checked=!0);var o=document.createElement("span");Z(o,a),o.className=C.label,i.appendChild(s),i.appendChild(o),r.appendChild(i)}));var a=r.querySelectorAll("input");a.length&&a[0].focus()}},Ut=function t(n){var r=[];return"undefined"!=typeof Map&&n instanceof Map?n.forEach((function(n,a){var s=n;"object"===e(s)&&(s=t(s)),r.push([a,s])})):Object.keys(n).forEach((function(a){var s=n[a];"object"===e(s)&&(s=t(s)),r.push([a,s])})),r},Ht=function(e,t,n){var r=function(e,t){var n=e.getInput();if(!n)return null;switch(t.input){case"checkbox":return Lt(n);case"radio":return Bt(n);case"file":return zt(n);default:return t.inputAutoTrim?n.value.trim():n.value}}(e,t);t.inputValidator?Gt(e,t,r):e.getInput().checkValidity()?"deny"===n?jt(e,t,r):Kt(e,t,r):(e.enableButtons(),e.showValidationMessage(t.validationMessage))},Gt=function(e,t,n){e.disableInput(),Promise.resolve().then((function(){return x(t.inputValidator(n,t.validationMessage))})).then((function(r){e.enableButtons(),e.enableInput(),r?e.showValidationMessage(r):Kt(e,t,n)}))},jt=function(e,t,n){t.preDeny?Promise.resolve().then((function(){return x(t.preDeny(n,t.validationMessage))})).then((function(t){!1===t?e.hideLoading():e.closePopup({isDenied:!0,value:void 0===t?n:t})})):e.closePopup({isDenied:!0,value:n})},qt=function(e,t){e.closePopup({isConfirmed:!0,value:t})},Kt=function(e,t,n){t.showLoaderOnConfirm&&Ye(),t.preConfirm?(e.resetValidationMessage(),Promise.resolve().then((function(){return x(t.preConfirm(n,t.validationMessage))})).then((function(t){he(L())||!1===t?e.hideLoading():qt(e,void 0===t?n:t)}))):qt(e,n)},Xt=function(e,t,n){for(var r=q(),a=0;a<r.length;a++)return(t+=n)===r.length?t=0:-1===t&&(t=r.length-1),r[t].focus();_().focus()},Yt=["ArrowRight","ArrowDown","Right","Down"],Zt=["ArrowLeft","ArrowUp","Left","Up"],Jt=["Escape","Esc"],Qt=function(e,t,n){var r=Ee.innerParams.get(e);r.stopKeydownPropagation&&t.stopPropagation(),"Enter"===t.key?en(e,t,r):"Tab"===t.key?tn(t,r):-1!==[].concat(Yt,Zt).indexOf(t.key)?nn(t.key):-1!==Jt.indexOf(t.key)&&rn(t,r,n)},en=function(e,t,n){if(!t.isComposing&&t.target&&e.getInput()&&t.target.outerHTML===e.getInput().outerHTML){if(-1!==["textarea","file"].indexOf(n.input))return;Xe(),t.preventDefault()}},tn=function(e,t){for(var n=e.target,r=q(),a=-1,s=0;s<r.length;s++)if(n===r[s]){a=s;break}e.shiftKey?Xt(0,a,-1):Xt(0,a,1),e.stopPropagation(),e.preventDefault()},nn=function(e){if(-1!==[B(),z(),W()].indexOf(document.activeElement)){var t=-1!==Yt.indexOf(e)?"nextElementSibling":"previousElementSibling",n=document.activeElement[t];n&&n.focus()}},rn=function(e,t,n){b(t.allowEscapeKey)&&(e.preventDefault(),n(k.esc))},an=function(e,t,n){t.popup.onclick=function(){var t=Ee.innerParams.get(e);t.showConfirmButton||t.showDenyButton||t.showCancelButton||t.showCloseButton||t.input||n(k.close)}},sn=!1,on=function(e){e.popup.onmousedown=function(){e.container.onmouseup=function(t){e.container.onmouseup=void 0,t.target===e.container&&(sn=!0)}}},un=function(e){e.container.onmousedown=function(){e.popup.onmouseup=function(t){e.popup.onmouseup=void 0,(t.target===e.popup||e.popup.contains(t.target))&&(sn=!0)}}},ln=function(e,t,n){t.container.onclick=function(r){var a=Ee.innerParams.get(e);sn?sn=!1:r.target===t.container&&b(a.allowOutsideClick)&&n(k.backdrop)}};var cn=function(e){var t=a({},tt.showClass,e.showClass),n=a({},tt.hideClass,e.hideClass),r=a({},tt,e);return r.showClass=t,r.hideClass=n,!1===e.animation&&(r.showClass={popup:"swal2-noanimation",backdrop:"swal2-noanimation"},r.hideClass={}),r},dn=function(e,t,n){return new Promise((function(r){var a=function(t){e.closePopup({isDismissed:!0,dismiss:t})};bt.swalPromiseResolve.set(e,r),t.confirmButton.onclick=function(){return function(e,t){e.disableButtons(),t.input?Ht(e,t,"confirm"):Kt(e,t,!0)}(e,n)},t.denyButton.onclick=function(){return function(e,t){e.disableButtons(),t.returnInputValueOnDeny?Ht(e,t,"deny"):jt(e,t,!1)}(e,n)},t.cancelButton.onclick=function(){return function(e,t){e.disableButtons(),t(k.cancel)}(e,a)},t.closeButton.onclick=function(){return a(k.close)},function(e,t,n){Ee.innerParams.get(e).toast?an(e,t,n):(on(t),un(t),ln(e,t,n))}(e,t,a),function(e,t,n,r){t.keydownTarget&&t.keydownHandlerAdded&&(t.keydownTarget.removeEventListener("keydown",t.keydownHandler,{capture:t.keydownListenerCapture}),t.keydownHandlerAdded=!1),n.toast||(t.keydownHandler=function(t){return Qt(e,t,r)},t.keydownTarget=n.keydownListenerCapture?window:_(),t.keydownListenerCapture=n.keydownListenerCapture,t.keydownTarget.addEventListener("keydown",t.keydownHandler,{capture:t.keydownListenerCapture}),t.keydownHandlerAdded=!0)}(e,Ze,n,a),n.toast&&(n.input||n.footer||n.showCloseButton)?ae(document.body,C["toast-column"]):se(document.body,C["toast-column"]),function(e,t){"select"===t.input||"radio"===t.input?Pt(e,t):-1!==["text","email","number","tel","textarea"].indexOf(t.input)&&(w(t.inputValue)||v(t.inputValue))&&Wt(e,t)}(e,n),$t(n),pn(Ze,n,a),fn(t,n),setTimeout((function(){t.container.scrollTop=0}))}))},hn=function(e){var t={popup:_(),container:E(),content:F(),actions:V(),confirmButton:B(),denyButton:z(),cancelButton:W(),loader:P(),closeButton:j(),validationMessage:L(),progressSteps:M()};return Ee.domCache.set(e,t),t},pn=function(e,t,n){var r=G();le(r),t.timer&&(e.timeout=new Tt((function(){n("timer"),delete e.timeout}),t.timer),t.timerProgressBar&&(ue(r),setTimeout((function(){e.timeout.running&&me(t.timer)}))))},fn=function(e,t){if(!t.toast)return b(t.allowEnterKey)?void(mn(e,t)||Xt(0,-1,1)):gn()},mn=function(e,t){return t.focusDeny&&he(e.denyButton)?(e.denyButton.focus(),!0):t.focusCancel&&he(e.cancelButton)?(e.cancelButton.focus(),!0):!(!t.focusConfirm||!he(e.confirmButton)||(e.confirmButton.focus(),0))},gn=function(){document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()};var yn,bn=function(e){"function"==typeof e.didDestroy?e.didDestroy():"function"==typeof e.onDestroy&&e.onDestroy()},wn=function(e){delete e.params,delete Ze.keydownHandler,delete Ze.keydownTarget,xn(Ee),xn(bt)},xn=function(e){for(var t in e)e[t]=new WeakMap},vn=Object.freeze({hideLoading:dt,disableLoading:dt,getInput:function(e){var t=Ee.innerParams.get(e||this),n=Ee.domCache.get(e||this);return n?ee(n.content,t.input):null},close:xt,closePopup:xt,closeModal:xt,closeToast:xt,enableButtons:function(){St(this,["confirmButton","denyButton","cancelButton"],!1)},disableButtons:function(){St(this,["confirmButton","denyButton","cancelButton"],!0)},enableInput:function(){return Et(this.getInput(),!1)},disableInput:function(){return Et(this.getInput(),!0)},showValidationMessage:function(e){var t=Ee.domCache.get(this),n=Ee.innerParams.get(this);Z(t.validationMessage,e),t.validationMessage.className=C["validation-message"],n.customClass&&n.customClass.validationMessage&&ae(t.validationMessage,n.customClass.validationMessage),ue(t.validationMessage);var r=this.getInput();r&&(r.setAttribute("aria-invalid",!0),r.setAttribute("aria-describedBy",C["validation-message"]),ne(r),ae(r,C.inputerror))},resetValidationMessage:function(){var e=Ee.domCache.get(this);e.validationMessage&&le(e.validationMessage);var t=this.getInput();t&&(t.removeAttribute("aria-invalid"),t.removeAttribute("aria-describedBy"),se(t,C.inputerror))},getProgressSteps:function(){return Ee.domCache.get(this).progressSteps},_main:function(e){(function(e){for(var t in e)ot(t),e.toast&&ut(t),lt(t)})(e),Ze.currentInstance&&Ze.currentInstance._destroy(),Ze.currentInstance=this;var t=cn(e);_t(t),Object.freeze(t),Ze.timeout&&(Ze.timeout.stop(),delete Ze.timeout),clearTimeout(Ze.restoreFocusTimeout);var n=hn(this);return Ke(this,t),Ee.innerParams.set(this,t),dn(this,n,t)},update:function(e){var t=_(),n=Ee.innerParams.get(this);if(!t||J(t,n.hideClass.popup))return f("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");var r={};Object.keys(e).forEach((function(t){In.isUpdatableParameter(t)?r[t]=e[t]:f('Invalid parameter to update: "'.concat(t,'". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md'))}));var s=a({},n,r);Ke(this,s),Ee.innerParams.set(this,s),Object.defineProperties(this,{params:{value:a({},this.params,e),writable:!1,enumerable:!0}})},_destroy:function(){var e=Ee.domCache.get(this),t=Ee.innerParams.get(this);t&&(e.popup&&Ze.swalCloseEventFinishedCallback&&(Ze.swalCloseEventFinishedCallback(),delete Ze.swalCloseEventFinishedCallback),Ze.deferDisposalTimer&&(clearTimeout(Ze.deferDisposalTimer),delete Ze.deferDisposalTimer),bn(t),wn(this))}}),kn=function(){function e(){if(t(this,e),"undefined"!=typeof window){"undefined"==typeof Promise&&m("This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"),yn=this;for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];var s=Object.freeze(this.constructor.argsToParams(r));Object.defineProperties(this,{params:{value:s,writable:!1,enumerable:!0,configurable:!0}});var i=this._main(this.params);Ee.promise.set(this,i)}}return r(e,[{key:"then",value:function(e){return Ee.promise.get(this).then(e)}},{key:"finally",value:function(e){return Ee.promise.get(this).finally(e)}}]),e}();a(kn.prototype,vn),a(kn,ct),Object.keys(vn).forEach((function(e){kn[e]=function(){var t;if(yn)return(t=yn)[e].apply(t,arguments)}})),kn.DismissReason=k,kn.version="10.9.0";var In=kn;return In.default=In,In}(),void 0!==this&&this.Sweetalert2&&(this.swal=this.sweetAlert=this.Swal=this.SweetAlert=this.Sweetalert2),"undefined"!=typeof document&&function(e,t){var n=e.createElement("style");if(e.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,'.swal2-popup.swal2-toast{flex-direction:row;align-items:center;width:auto;padding:.625em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{flex-direction:row;padding:0}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;padding:0;font-size:1em}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex-basis:auto!important;width:auto;height:auto;margin:0 .3125em;padding:0}.swal2-popup.swal2-toast .swal2-styled{margin:0 .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(100,150,200,.5)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-no-transition{transition:none!important}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-popup{display:none;position:relative;box-sizing:border-box;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:5px;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:flex;flex-direction:column;align-items:center;padding:0 1.8em}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:100%;margin:1.25em auto 0;padding:0 1.6em}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 2em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#2778c4;color:#fff;font-size:1.0625em}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#d14529;color:#fff;font-size:1.0625em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#757575;color:#fff;font-size:1.0625em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;height:.25em;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;z-index:2;top:0;right:0;align-items:center;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;transition:color .1s ease-out;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-content{z-index:1;justify-content:center;margin:0;padding:0 1.6em;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto}.swal2-validation-message{display:none;align-items:center;justify-content:center;margin:0 -2.7em;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent!important}body.swal2-no-backdrop .swal2-container>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-container.swal2-top{top:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-top-left,body.swal2-no-backdrop .swal2-container.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-top-end,body.swal2-no-backdrop .swal2-container.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-container.swal2-center{top:50%;left:50%;transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-left,body.swal2-no-backdrop .swal2-container.swal2-center-start{top:50%;left:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-end,body.swal2-no-backdrop .swal2-container.swal2-center-right{top:50%;right:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom{bottom:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom-left,body.swal2-no-backdrop .swal2-container.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-bottom-end,body.swal2-no-backdrop .swal2-container.swal2-bottom-right{right:0;bottom:0}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}body.swal2-toast-column .swal2-toast{flex-direction:column;align-items:stretch}body.swal2-toast-column .swal2-toast .swal2-actions{flex:1;align-self:stretch;height:2.2em;margin-top:.3125em}body.swal2-toast-column .swal2-toast .swal2-loading{justify-content:center}body.swal2-toast-column .swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}body.swal2-toast-column .swal2-toast .swal2-validation-message{font-size:1em}')},906:()=>{},993:()=>{},352:()=>{},386:()=>{},513:()=>{},589:()=>{},758:()=>{},614:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Pa,computeFlatOffset:()=>Qa,computeOutShape:()=>Va,getNormalizedAxes:()=>ja,isSliceContinous:()=>Ja,maskToAxes:()=>Wa,parseSliceParams:()=>es,startForAxis:()=>Ya,startIndicesWithElidedDims:()=>qa,stopForAxis:()=>Za,stopIndicesWithElidedDims:()=>Ka,stridesForAxis:()=>Xa,stridesWithElidedDims:()=>Ua});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Si,computeOutShape:()=>Ci,segOpComputeOptimalWindowSize:()=>Ni});var r={};n.r(r),n.d(r,{ERF_A1:()=>tl,ERF_A2:()=>nl,ERF_A3:()=>rl,ERF_A4:()=>al,ERF_A5:()=>sl,ERF_P:()=>el,PARALLELIZE_THRESHOLD:()=>ki,SELU_SCALE:()=>Qu,SELU_SCALEALPHA:()=>Ju,applyActivation:()=>Go,assertAndGetBroadcastShape:()=>fi,assertAxesAreInnerMostDims:()=>xs,assertParamsConsistent:()=>Ys,assignToTypedArray:()=>pl,axesAreInnerMostDims:()=>gs,calculateShapes:()=>za,castTensor:()=>gl,combineLocations:()=>ys,complexWithEvenIndex:()=>cl,complexWithOddIndex:()=>dl,computeConv2DInfo:()=>Rs,computeConv3DInfo:()=>Ds,computeDefaultPad:()=>Fs,computeDilation2DInfo:()=>As,computeOptimalWindowSize:()=>Ii,computeOutAndReduceShapes:()=>bs,computeOutShape:()=>Zs,computePool2DInfo:()=>_s,computePool3DInfo:()=>$s,convertConv2DDataFormat:()=>Ws,eitherStridesOrDilationsAreOne:()=>Ps,expandShapeToKeepDim:()=>ws,exponent:()=>ml,exponents:()=>fl,getAxesPermutation:()=>vs,getBroadcastDims:()=>hi,getComplexWithIndex:()=>hl,getFusedBiasGradient:()=>Ho,getFusedDyActivation:()=>Uo,getImageCenter:()=>ju,getInnerMostAxes:()=>Is,getPermuted:()=>Ku,getReductionAxes:()=>pi,getReshaped:()=>qu,getReshapedPermuted:()=>Xu,getSliceBeginCoords:()=>Yu,getSliceSize:()=>Zu,getUndoAxesPermutation:()=>ks,linspaceImpl:()=>bl,log:()=>ol,mergeRealAndImagArrays:()=>ul,prepareAndValidate:()=>Ma,prepareSplitSize:()=>Io,reshapeTensor:()=>yl,segment_util:()=>t,shouldFuse:()=>jo,slice_util:()=>e,splitRealAndImagArrays:()=>ll,tupleValuesAreOne:()=>zs,upcastType:()=>vr,validateInput:()=>Ba,validateUpdateShape:()=>La,warn:()=>il});var a={};n.r(a),n.d(a,{json:()=>pw});var s={};n.r(s),n.d(s,{json:()=>fw});var i={};n.r(i),n.d(i,{json:()=>mw});var o={};n.r(o),n.d(o,{json:()=>gw});var u={};n.r(u),n.d(u,{json:()=>yw});var l={};n.r(l),n.d(l,{json:()=>bw});var c={};n.r(c),n.d(c,{json:()=>ww});var d={};n.r(d),n.d(d,{json:()=>xw});var h={};n.r(h),n.d(h,{json:()=>vw});var p={};n.r(p),n.d(p,{json:()=>kw});var f={};n.r(f),n.d(f,{json:()=>Iw});var m={};n.r(m),n.d(m,{json:()=>Nw});var g={};n.r(g),n.d(g,{json:()=>Cw});var y={};n.r(y),n.d(y,{json:()=>Sw});var b={};n.r(b),n.d(b,{json:()=>Ew});var w={};n.r(w),n.d(w,{json:()=>Tw});var x={};n.r(x),n.d(x,{json:()=>Aw});var v={};n.r(v),n.d(v,{addImpl:()=>Nv,ceilImpl:()=>Qv,expImpl:()=>Lk,expm1Impl:()=>Pk,floorImpl:()=>iI,logImpl:()=>bI,maxImpl:()=>CI,multiplyImpl:()=>Uk,notEqualImpl:()=>MI,rsqrtImpl:()=>GI,simpleAbsImpl:()=>Dv,sliceImpl:()=>qk,squaredDifferenceImpl:()=>mN,subImpl:()=>Yk,transposeImpl:()=>SI,uniqueImpl:()=>IN});let k={player:null,video:null,stream:null,ctx:null,canvas:null,model:null};const I="youtube_video_id";var N=n(455),C=n.n(N);function S(e){let t=document.getElementById("studyModeLocker"),n=document.createElement("DIV"),r=document.createElement("BUTTON"),a=document.createElement("I"),s=document.createElement("BUTTON"),i=document.createElement("I");a.setAttribute("class","fas fa-times-circle icon-left-padding"),r.setAttribute("class","button exit-button"),r.innerText="Leave",r.addEventListener("click",(t=>function(e,t){e.stopPropagation();let n=document.getElementById("studyModeLocker");n&&(n.remove(),k.stream.getTracks().forEach((function(e){e.stop()})),k.video=null,window.addEventListener("click",t))}(t,e))),i.setAttribute("class","fas fa-question icon-left-padding"),s.setAttribute("class","button question-button"),s.innerText="Question",s.addEventListener("click",(e=>async function(e){e.stopPropagation(),k.player.pauseVideo(),console.debug("Question ButtonPressed at "+k.player.getCurrentTime());let t=await C().fire({input:"textarea",inputLabel:"Have a question?",inputPlaceholder:"Type your question here...",showCancelButton:!0,confirmButtonText:"Submit",showLoaderOnConfirm:!0,preConfirm:e=>function(e){return new Promise(((t,n)=>{chrome.runtime.sendMessage({type:"AddActiveQuestion",videoID:window.localStorage.getItem(I),timestamp:Math.trunc(k.player.getCurrentTime()),questionText:e},(e=>{t(e)}))}))}(e)});t.isConfirmed&&t.value.status&&C().fire({icon:"success",text:"Great, we will let your teacher know."})}(e))),r.appendChild(a),s.appendChild(i),n.setAttribute("class","button-container"),n.appendChild(r),n.appendChild(s),t.appendChild(n)}class E{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class T{time(e){return A("time")}read(e){return A("read")}readSync(e){return A("readSync")}numDataIds(){return A("numDataIds")}disposeData(e){return A("disposeData")}write(e,t,n){return A("write")}move(e,t,n,r){return A("move")}memory(){return A("memory")}floatPrecision(){return A("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return A("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:i}){return A("fusedBatchMatMul")}slice(e,t,n){return A("slice")}stridedSlice(e,t,n,r){return A("stridedSlice")}unstack(e,t){return A("unstack")}reverse(e,t){return A("reverse")}concat(e,t){return A("concat")}neg(e){return A("neg")}add(e,t){return A("add")}addN(e){return A("addN")}subtract(e,t){return A("subtract")}multiply(e,t){return A("multiply")}realDivide(e,t){return A("realDivide")}floorDiv(e,t){return A("floorDiv")}sum(e,t){return A("sum")}prod(e,t){return A("prod")}unsortedSegmentSum(e,t,n){return A("unsortedSegmentSum")}argMin(e,t){return A("argMin")}argMax(e,t){return A("argMax")}equal(e,t){return A("equal")}notEqual(e,t){return A("notEqual")}less(e,t){return A("less")}lessEqual(e,t){return A("lessEqual")}greater(e,t){return A("greater")}greaterEqual(e,t){return A("greaterEqual")}logicalNot(e){return A("logicalNot")}logicalAnd(e,t){return A("logicalAnd")}logicalOr(e,t){return A("logicalOr")}where(e){return A("where")}select(e,t,n){return A("select")}topk(e,t,n){return A("topk")}min(e,t){return A("min")}minimum(e,t){return A("minimum")}mod(e,t){return A("mod")}max(e,t){return A("max")}maximum(e,t){return A("maximum")}all(e,t){return A("all")}any(e,t){return A("any")}squaredDifference(e,t){return A("squaredDifference")}ceil(e){return A("ceil")}floor(e){return A("floor")}round(e){return A("round")}sign(e){return A("sign")}isNaN(e){return A("isNaN")}isInf(e){return A("isInf")}isFinite(e){return A("isFinite")}pow(e,t){return A("pow")}exp(e){return A("exp")}expm1(e){return A("expm1")}softmax(e,t){return A("softmax")}log(e){return A("log")}log1p(e){return A("log1p")}sqrt(e){return A("sqrt")}rsqrt(e){return A("rsqrt")}square(e){return A("square")}reciprocal(e){return A("reciprocal")}relu(e){return A("relu")}relu6(e){return A("relu6")}prelu(e,t){return A("prelu")}elu(e){return A("elu")}eluDer(e,t){return A("eluDer")}selu(e){return A("selu")}int(e){return A("int")}clip(e,t,n){return A("clip")}abs(e){return A("abs")}complexAbs(e){return A("complexAbs")}sigmoid(e){return A("sigmoid")}softplus(e){return A("softplus")}sin(e){return A("sin")}cos(e){return A("cos")}tan(e){return A("tan")}asin(e){return A("asin")}acos(e){return A("acos")}atan(e){return A("atan")}atan2(e,t){return A("atan2")}sinh(e){return A("sinh")}cosh(e){return A("cosh")}tanh(e){return A("tanh")}asinh(e){return A("asinh")}acosh(e){return A("acosh")}atanh(e){return A("atanh")}erf(e){return A("erf")}step(e,t){return A("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return A("fusedConv2d")}conv2d(e,t,n){return A("conv2d")}conv2dDerInput(e,t,n){return A("conv2dDerInput")}conv2dDerFilter(e,t,n){return A("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return A("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return A("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return A("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return A("depthwiseConv2DDerFilter")}conv3d(e,t,n){return A("conv3d")}conv3dDerInput(e,t,n){return A("conv3dDerInput")}conv3dDerFilter(e,t,n){return A("conv3dDerFilter")}maxPool(e,t){return A("maxPool")}maxPoolBackprop(e,t,n,r){return A("maxPoolBackprop")}avgPool(e,t){return A("avgPool")}avgPoolBackprop(e,t,n){return A("avgPoolBackprop")}avgPool3d(e,t){return A("avgPool3d")}avgPool3dBackprop(e,t,n){return A("avgPool3dBackprop")}maxPool3d(e,t){return A("maxPool3d")}maxPool3dBackprop(e,t,n,r){return A("maxPool3dBackprop")}reshape(e,t){return A("reshape")}cast(e,t){return A("cast")}tile(e,t){return A("tile")}pad(e,t,n){return A("pad")}transpose(e,t){return A("transpose")}gather(e,t,n){return A("gather")}gatherND(e,t){return A("gatherND")}scatterND(e,t,n){return A("scatterND")}batchToSpaceND(e,t,n){return A("batchToSpaceND")}spaceToBatchND(e,t,n){return A("spaceToBatchND")}resizeBilinear(e,t,n,r){return A("resizeBilinear")}resizeBilinearBackprop(e,t,n){return A("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return A("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return A("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,a,s){return A("batchNorm")}localResponseNormalization4D(e,t,n,r,a){return A("localResponseNormalization4D")}LRNGrad(e,t,n,r,a,s,i){return A("LRNGrad")}multinomial(e,t,n,r){return A("multinomial")}oneHot(e,t,n,r){return A("oneHot")}cumsum(e,t,n,r){return A("cumsum")}nonMaxSuppression(e,t,n,r,a){return A("nonMaxSuppression")}fft(e){return A("fft")}ifft(e){return A("ifft")}complex(e,t){return A("complex")}real(e){return A("real")}imag(e){return A("imag")}cropAndResize(e,t,n,r,a,s){return A("cropAndResize")}depthToSpace(e,t,n){return A("depthToSpace")}split(e,t,n){return A("split")}sparseToDense(e,t,n,r){return A("sparseToDense")}diag(e){return A("diag")}fill(e,t,n){return A("fill")}onesLike(e){return A("onesLike")}zerosLike(e){return A("zerosLike")}linspace(e,t,n){return A("linspace")}dispose(){return A("dispose")}}function A(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function _(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function $(e,t,n){return Math.max(e,Math.min(t,n))}function R(e){return e%2==0?e:e+1}function D(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function F(e,t,n=""){D(B(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function O(e){D(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function M(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||X(e)&&!n)for(let r=0;r<e.length;++r)M(e[r],t,n);else t.push(e);return t}function L(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function B(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function z(e){return e%1==0}function P(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function W(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function V(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function U(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function H(e,t){const n=t.length;return D((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e)),D(e.every((e=>z(e))),(()=>"All values in axis param must be integers but got axis "+e)),e.map((e=>e<0?n+e:e))}function G(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:H(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function q(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function K(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function X(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Y(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Z(e){return"string"==typeof e||e instanceof String}function J(e){return"number"==typeof e}function Q(e){return Array.isArray(e)?Q(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":J(e)?"float32":Z(e)?"string":"boolean"==typeof e?"bool":"float32"}function ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function te(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function re(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=re(e+t*i,s,n)}return r}function ae(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return re(0,e,t)}function se(e,t){const n=ie(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ie(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function oe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ae(e,new Float32Array(n));if("int32"===t)return ae(e,new Int32Array(n));if("bool"===t)return ae(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function ue(e){e.forEach((t=>{D(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function le(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ce(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function de(e){return e&&e.then&&"function"==typeof e.then}class he{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(de(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function pe(){return me}let fe,me=null;function ge(){if(null==fe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}fe=e}return fe}function ye(e,t){const n=function(){const e=ge();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const be="Abs",we="Acos",xe="Acosh",ve="Add",ke="AddN",Ie="ArgMax",Ne="ArgMin",Ce="Asin",Se="Asinh",Ee="Atan",Te="Atanh",Ae="Atan2",_e="AvgPool",$e="AvgPoolBackprop",Re="AvgPool3D",De="BatchMatMul",Fe="BatchToSpaceND",Oe="BroadcastTo",Me="Cast",Le="Ceil",Be="ClipByValue",ze="Complex",Pe="Concat",We="Conv2D",Ve="Conv2DBackpropFilter",Ue="Conv2DBackpropInput",He="Conv3D",Ge="Conv3DBackpropFilterV2",je="Conv3DBackpropInputV2",qe="Cos",Ke="Cosh",Xe="Cumsum",Ye="CropAndResize",Ze="DepthToSpace",Je="DepthwiseConv2dNative",Qe="DepthwiseConv2dNativeBackpropFilter",et="DepthwiseConv2dNativeBackpropInput",tt="Dilation2D",nt="Dilation2DBackpropInput",rt="Dilation2DBackpropFilter",at="Div",st="Elu",it="Erf",ot="Equal",ut="Exp",lt="Expm1",ct="FFT",dt="Fill",ht="FlipLeftRight",pt="Floor",ft="FloorDiv",mt="FusedBatchNorm",gt="GatherV2",yt="GatherNd",bt="Greater",wt="GreaterEqual",xt="Identity",vt="IFFT",kt="Imag",It="IsFinite",Nt="IsInf",Ct="IsNan",St="Less",Et="LessEqual",Tt="Log",At="Log1p",_t="LogicalAnd",$t="LogicalNot",Rt="LogSoftmax",Dt="Max",Ft="Maximum",Ot="MaxPool",Mt="MaxPoolBackprop",Lt="MaxPool3D",Bt="MaxPoolWithArgmax",zt="Mean",Pt="Min",Wt="Minimum",Vt="MirrorPad",Ut="Multiply",Ht="Negate",Gt="NotEqual",jt="NonMaxSuppressionV3",qt="NonMaxSuppressionV4",Kt="NonMaxSuppressionV5",Xt="OnesLike",Yt="OneHot",Zt="PadV2",Jt="Pow",Qt="Prelu",en="Real",tn="Reciprocal",nn="Relu",rn="Reshape",an="ResizeNearestNeighbor",sn="ResizeBilinear",on="Relu6",un="Reverse",ln="Round",cn="Rsqrt",dn="ScatterNd",hn="SelectV2",pn="Selu",fn="Slice",mn="Sin",gn="Sinh",yn="Sign",bn="Sigmoid",wn="Softplus",xn="Sqrt",vn="Sum",kn="SpaceToBatchND",In="SplitV",Nn="Softmax",Cn="SquaredDifference",Sn="Square",En="Sub",Tn="StridedSlice",An="Tan",_n="Tanh",$n="Tile",Rn="Transpose",Dn="Unique",Fn="Unpack",On="UnsortedSegmentSum",Mn="ZerosLike",Ln="Step",Bn="FromPixels",zn="RotateWithOffset",Pn="_FusedMatMul",Wn="FusedConv2D",Vn="FusedDepthwiseConv2D",Un=ye("kernelRegistry",(()=>new Map)),Hn=ye("gradRegistry",(()=>new Map));function Gn(e,t){const n=Yn(e,t);return Un.get(n)}function jn(e){return Hn.get(e)}function qn(e){const t=Un.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Kn(e){const{kernelName:t,backendName:n}=e,r=Yn(t,n);Un.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Un.set(r,e)}function Xn(e){const{kernelName:t}=e;Hn.has(t)&&pe().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Hn.set(t,e)}function Yn(e,t){return`${t}_${e}`}class Zn{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Qn)}profileKernel(e,t,n){let r;const a=this.backendTimer.time((()=>{r=n()}));for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Jn(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Jn(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Qn{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?W(r+"ms",9):r.error,o=W(e,25),u=t.rank,l=t.size,c=W(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function er(e,t,n,r){const a=ne(t),s=function(e,t,n,r){const a=L(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?ar(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],tr(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=rr(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function tr(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":Z(e)?`'${e}'`:"bool"===n?nr(e):parseFloat(e.toFixed(7)).toString(),W(r,t)}function nr(e){return 0===e?"false":"true"}function rr(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[tr(ar(e)[0],0,n)]:"bool"===n?[nr(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ar(r),s=ar(s)),["["+r.map(((e,t)=>tr(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>tr(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ar(e):Array.from(e)).map(((e,t)=>tr(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;h.push(...rr(e.slice(r,s),l,n,c,a,!1))}h.push("...");for(let t=o-3;t<o;t++){const r=t*d,s=r+d;h.push(...rr(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;h.push(...rr(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function ar(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function sr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=M(e)),pe().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function ir(){return pe().platform.now()}function or(e,t="utf-8"){return t=t||"utf-8",pe().platform.encode(e,t)}function ur(e,t="utf-8"){return t=t||"utf-8",pe().platform.decode(e,t)}class lr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=L(e),null!=n){const e=n.length;D(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||q(t,this.size),this.strides=ne(e)}set(e,...t){0===t.length&&(t=[0]),D(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return cr().makeTensor(this.values,this.shape,this.dtype)}}let cr=null,dr=null,hr=null;class pr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=L(e),this.strides=ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return dr.buffer(this.shape,this.dtype,e)}bufferSync(){return dr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ae(this.shape,e)}arraySync(){return ae(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=cr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=cr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await cr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(cr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return dr.print(this,e)}clone(){return this.throwIfDisposed(),dr.clone(this)}toString(e=!1){return er(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),dr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),cr().makeVariable(this,e,t,n)}}Object.defineProperty(pr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class fr extends pr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!B(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cr().disposeTensor(this),this.dataId=e.dataId,cr().incRef(this,null)}dispose(){cr().disposeVariable(this),this.isDisposedInternal=!0}}var mr,gr,yr,br,wr;Object.defineProperty(fr,Symbol.hasInstance,{value:e=>e instanceof pr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(mr||(mr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(gr||(gr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(yr||(yr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(br||(br={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(wr||(wr={}));const xr={float32:br,int32:gr,bool:yr,complex64:wr};function vr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return xr[e][t]}function kr(e){return vr(e,"int32")}function Ir(e,t){if(e.dtype===t.dtype)return[e,t];const n=vr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Nr(e,t){return t.some((t=>t.id===e.id))}function Cr(e){const t=[];return Sr(e,t,new Set),t}function Sr(e,t,n){if(null==e)return;if(e instanceof pr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Sr(r,t,n))}}class Er{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Tr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Er}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zn(this.backendInstance),!0}setupRegisteredKernels(){qn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){qn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof T||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Tr.nextTensorId++}nextVariableId(){return Tr.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return _r.runKernelFunc((n=>n.cast(e,t)),n,null,Me,r)}})),[],{}),t}runKernel(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,a,s,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,d=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=Gn(r,this.backendName);let f,m;if(null!=p)h=()=>{const e=this.backend.numDataIds();f=p.kernelFunc({inputs:t,attrs:a,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n)));if(l){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(s||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return o};else{const t=e=>{l&&(u=e.map((e=>this.keep(this.clone(e)))))};h=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const a=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>h())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=h()})),l&&this.addTapeNode(r,t,o,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=jn(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(D(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Z(e[0])&&(a=e.map((e=>or(e))));const s=r.write(a,t,n),i=new pr(t,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new pr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new fr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Y(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof fr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=jn(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ie(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Cr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(D(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));D(a instanceof pr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=se(L(e),"float32");return _r.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!B(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),$r);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return D(ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;D(t.every((e=>e instanceof pr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,a)=>(n=e(...t,a),D(n.value instanceof pr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),D(ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];D(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),D(s.every((e=>e instanceof pr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ir(),n=await this.backend.time(e);return n.wallMs=ir()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Er;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ar(){const e=ge();if(null==e._tfengine){const t=new he(e);e._tfengine=new Tr(t)}var t;return t=e._tfengine.ENV,me=t,cr=()=>e._tfengine,e._tfengine}Tr.nextTensorId=0,Tr.nextVariableId=0;const _r=Ar();function $r(e,t){const n={a:e,b:t};return _r.runKernelFunc(((n,r)=>{const a=n.add(e,t);return r([e,t]),a}),n,null,ve)}function Rr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Dr=pe();function Fr(e,t){let n=e;if(X(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||X(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&pe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Or(e,r,[]),r}function Or(e,t,n){if(n=n||[],!Array.isArray(e)&&!X(e))return void D(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));D(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),D(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Or(e[t],r,n.concat(t))}function Mr(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function Lr(e,t,n,r="numeric"){if(e instanceof pr)return Mr(r,e.dtype,t,n),e;let a=Q(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Mr(r,a,t,n),null==e||!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Fr(e,a);X(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?sr(e,a):M(e,[],!0);return _r.makeTensor(i,s,a)}function Br(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Lr(e,`${t}[${r}]`,n)),r)}function zr(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{_r.startScope(n);try{const t=r(...e);return de(t)&&console.error("Cannot return a Promise inside of tidy."),_r.endScope(t),t}catch(e){throw _r.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}Dr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Dr.registerFlag("IS_BROWSER",(()=>Rr())),Dr.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Dr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Dr.registerFlag("PROD",(()=>!1)),Dr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Dr.getBool("DEBUG"))),Dr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Dr.registerFlag("IS_TEST",(()=>!1));const Pr=zr({complex_:function(e,t){const n=Lr(e,"real","complex"),r=Lr(t,"imag","complex");F(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return _r.runKernelFunc((e=>e.complex(n,r)),a,null,ze)}});function Wr(e,t,n,r){if(null==r&&(r=Q(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ue(t);const e=L(t),r=L(n);D(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==L(t.slice(e));D(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return X(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?sr(e,r):M(e,[],!0),_r.makeTensor(e,t,r)}function Vr(e,t,n){return Wr(e,t,Fr(e,n),n)}const Ur={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Hr(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Gr(await Promise.all(r)),specs:n}}function Gr(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const jr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function qr(e){return jr?Buffer.byteLength(e):new Blob([e]).size}function Kr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Xr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:qr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:qr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Yr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class Zr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Zr.instance&&(Zr.instance=new Zr),Zr.instance}static registerSaveRouter(e){Zr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Zr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Zr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Zr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Zr.getInstance().loadRouters:Zr.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Jr=e=>Zr.getSaveHandlers(e),Qr="tensorflowjs",ea="models_store",ta="model_info_store";function na(){if(!pe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ra(e){const t=e.result;t.createObjectStore(ea,{keyPath:"modelPath"}),t.createObjectStore(ta,{keyPath:"modelPath"})}class aa{constructor(e){if(this.indexedDB=na(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Qr,1);r.onupgradeneeded=()=>ra(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ea,"readonly"),r=t.objectStore(ea).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Xr(t),s=a.transaction(ta,"readwrite");let i=s.objectStore(ta);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(ea,"readwrite");const o=u.objectStore(ea).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(ta);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}aa.URL_SCHEME="indexeddb://";const sa=e=>{return pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(aa.URL_SCHEME)?(t=e.slice(aa.URL_SCHEME.length),new aa(t)):null;var t};Zr.registerSaveRouter(sa),Zr.registerLoadRouter(sa);class ia{constructor(){this.indexedDB=na()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Qr,1);n.onupgradeneeded=()=>ra(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ta,"readonly"),s=a.objectStore(ta).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(aa.URL_SCHEME)?t.slice(aa.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Qr,1);r.onupgradeneeded=()=>ra(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ta,"readwrite"),i=s.objectStore(ta),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(ea,"readwrite");const r=u.objectStore(ea).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const oa="/",ua="tensorflowjs_models",la="info",ca="model_topology",da="weight_specs",ha="weight_data",pa="model_metadata";function fa(e){return{info:[ua,e,la].join(oa),topology:[ua,e,ca].join(oa),weightSpecs:[ua,e,da].join(oa),weightData:[ua,e,ha].join(oa),modelMetadata:[ua,e,pa].join(oa)}}function ma(e){const t=e.split(oa);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(oa)}class ga{constructor(e){if(!pe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fa(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Xr(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(jr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(jr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ga.URL_SCHEME="localstorage://";const ya=e=>{return pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ga.URL_SCHEME)?(t=e.slice(ga.URL_SCHEME.length),new ga(t)):null;var t};Zr.registerSaveRouter(ya),Zr.registerLoadRouter(ya);class ba{constructor(){D(pe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),D("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ua+oa,n=oa+la;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ma(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=fa(e=(t=e).startsWith(ga.URL_SCHEME)?t.slice(ga.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class wa{constructor(){this.managers={}}static getInstance(){return null==wa.instance&&(wa.instance=new wa),wa.instance}static registerManager(e,t){D(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),D(e.length>0,(()=>"scheme must not be an empty string."));const n=wa.getInstance();D(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class xa{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(pe().get("IS_BROWSER")){pe().setPlatform("browser",new xa);try{wa.registerManager(ga.URL_SCHEME,new ba)}catch(e){}try{wa.registerManager(aa.URL_SCHEME,new ia)}catch(e){}}let va;function ka(e,t="float32",n){return t=t||"float32",ue(e),new lr(e,t,n)}pe().get("IS_NODE")&&pe().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=pe().global.fetch?pe().global.fetch(e,t):(null==va&&(va=n(352)),va(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ia=zr({cast_:function(e,t){const n=Lr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return _r.runKernelFunc((e=>e.cast(n,t)),r,null,Me,a)}}),Na=zr({clone_:function(e){const t=Lr(e,"x","clone",null),n={x:t};return _r.runKernelFunc((()=>_r.makeTensorFromDataId(t.dataId,t.shape,t.dtype)),n,null,xt)}});function Ca(e){return new Promise((e=>setTimeout(e))).then(e)}Ar(),dr={buffer:ka,cast:Ia,clone:Na,print:function(e,t=!1){console.log(e.toString(t))}};class Sa{constructor(e){if(!pe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Sa.URL_SCHEME)&&(e=e.slice(Sa.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Ca((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ca((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Xr(e)}}}}function Ea(e,t,n,r){!function(e){D(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){D(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+e)),D(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+t)),D(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Ta(e,t){null==t&&(t={});const n=null==t.fetchFunc?pe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ea(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ea(a,t.onProgress,.5,1)}Sa.URL_SCHEME="downloads://",Zr.registerSaveRouter((e=>pe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Sa.URL_SCHEME)?function(e="model"){return new Sa(e)}(e.slice(Sa.URL_SCHEME.length)):null));class Aa{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(D("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=pe().platform.fetch,D(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&D(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Xr(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:a,convertedBy:s,format:i},d=t.modelInitializer;return d&&(c.modelInitializer=d),c}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Kr(await Ta(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function _a(e){return null!=e.match(Aa.URL_SCHEME_REGEX)}Aa.URL_SCHEME_REGEX=/^https?:\/\//;const $a=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>_a(e))):_a(e),n)return Ra(e,t)}return null};function Ra(e,t){return new Aa(e,t)}function Da(e,t){return Ra(e,t)}let Fa;Zr.registerSaveRouter($a),Zr.registerLoadRouter($a);const Oa=zr({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Gn(Bn,_r.backendName)){const n={pixels:e},r={numChannels:t};return _r.runKernel(Bn,n,r)}const[o,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,c;if(i?l=e.getContext("2d").getImageData(0,0,o,u).data:r||n?l=e.data:(s||a)&&(null==Fa&&(Fa=document.createElement("canvas").getContext("2d")),Fa.canvas.width=o,Fa.canvas.height=u,Fa.drawImage(e,0,0,o,u),l=Fa.getImageData(0,0,o,u).data),4===t)c=new Int32Array(l);else{const e=o*u;c=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)c[n*t+e]=l[4*n+e]}return function(e,t,n){if(O(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Fr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Wr(e,t,r,n)}(c,[u,o,t],"int32")}});function Ma(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let a=1;for(let e=0;e<n.length-1;++e)a*=n[e];const s=e.shape,i=n.slice();i.pop();let o=1;for(let t=r;t<e.rank;++t)o*=s[t],i.push(s[t]);const u=[...ne(e.shape).map((e=>e/o)),1].slice(0,r);return[i,a,o,u]}function La(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Ba(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}La(n,t,e)}function za(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:L(t.shape)/o,sliceSize:i,strides:[...ne(n.slice(0,a)),1],outputSize:L(n)}}function Pa(e,t,n){const r=e.shape.length;D(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),D(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)D(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Wa(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Va(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ua(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Ha(e,t,n){return n<=e?n:n-(t-1)}function Ga(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ja(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=qa(i,u,l,r,e),d=Ka(o,u,l,a,e),h=Ua(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Ya(i,r,s,e,t,u),d[t]=Za(o,a,s,e,t,u),h[t]=Xa(s,t,u);return{begin:c,end:d,strides:h}}function qa(e,t,n,r,a){const s=[...a],i=Ga(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=Ha(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Ka(e,t,n,r,a){const s=[...a],i=Ga(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=Ha(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=$(0,s[e],a[e])}return s}function Xa(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ya(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=$(0,i,u-1),i}function Za(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?$(0,i,u):$(-1,i,u-1),i}function Ja(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Qa(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function es(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{D(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(D(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}class ts{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ns{constructor(){this.classNameMap={}}static getMap(){return null==ns.instance&&(ns.instance=new ns),ns.instance}static register(e){ns.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rs(e){D(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),D("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),D(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ns.register(e)}function as(e){pe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ss(){return _r}function is(){return _r.memory()}function os(e,t){return _r.tidy(e,t)}function us(e){Cr(e).forEach((e=>e.dispose()))}function ls(e){return _r.keep(e)}function cs(e,t,n=1){return _r.registerBackend(e,t,n)}function ds(e){return _r.customGrad(e)}function hs(e,t){if((X(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&X(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Wr(e,[],[],t)}hr=as;class ps extends ts{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return us(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){D(ee(e),(()=>"The f passed in variableGrads(f) must be a function")),D(null==t||Array.isArray(t)&&t.every((e=>e instanceof fr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in _r.registeredVariables)t.push(_r.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;D((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=_r.gradients(e,t,null,!0);D(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),D(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&us(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:hs(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ps,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const fs=zr({abs_:function(e){const t=Lr(e,"x","abs"),n={x:t};return _r.runKernelFunc(((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t))),n,null,be)}}),ms=zr({add_:function(e,t){let n=Lr(e,"a","add"),r=Lr(t,"b","add");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.add(n,r);return t([n,r]),a}),a,null,ve)}});function gs(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ys(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function bs(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function ws(e,t){return ys(e,t.map((e=>1)),t)}function xs(e,t,n){D(gs(t,n),(()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`))}function vs(e,t){if(gs(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ks(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Is(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ns=zr({reshape_:function(e,t){const n=Lr(e,"x","reshape",null),r={x:n},a={shape:t};return _r.runKernelFunc(((e,r)=>(t=U(t,n.size),D(n.size===L(t),(()=>"new shape and old shape must have the same number of elements.")),r([n]),e.reshape(n,t))),r,null,rn,a)}}),Cs=zr({transpose_:function(e,t){const n=Lr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),D(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{D(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return _r.runKernelFunc((e=>e.transpose(n,t)),r,null,Rn,a)}}),Ss=zr({all_:function(e,t=null,n=!1){let r=Lr(e,"x","all","bool");const a={x:r},s={axis:t,keepDims:n};return _r.runKernelFunc((e=>{const a=H(t,r.shape);let s=a;const i=vs(s,r.rank);null!=i&&(r=Cs(r,i),s=Is(s.length,r.rank));const o=e.all(r,s);if(n){const e=ws(o.shape,a);return Ns(o,e)}return o}),a,null,"All",s)}}),Es=zr({any_:function(e,t=null,n=!1){let r=Lr(e,"x","any","bool");const a={x:r},s={axis:t,keepDims:n};return _r.runKernelFunc((e=>{const a=H(t,r.shape);let s=a;const i=vs(s,r.rank);null!=i&&(r=Cs(r,i),s=Is(s.length,r.rank));const o=e.any(r,s);if(n){const e=ws(o.shape,a);return Ns(o,e)}return o}),a,null,"Any",s)}}),Ts=zr({argMax_:function(e,t=0){let n=Lr(e,"x","argMax");const r={x:n},a={axis:t};return _r.runKernelFunc(((e,r)=>{r([n]);let a=H(t,n.shape);const s=vs(a,n.rank);return null!=s&&(n=Cs(n,s),a=Is(a.length,n.rank)),e.argMax(n,a[0])}),r,null,Ie,a)}});function As(e,t,n,r,a="NHWC",s){return Rs(e,[...t,e[3]],n,s,r,null,null,Ws(a))}function _s(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Os(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,e[1],e[1]]}return Rs(e,l,n,r,a,s,!1,i)}function $s(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=Ms(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);d="channelsFirst",c=[o,u,l,e[1],e[1]]}return Ds(e,c,n,r,a,!1,d,s)}function Rs(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,d,l,c]=e}const[h,p,,f]=t,[m,g]=Os(n),[y,b]=Os(r),w=Ls(h,y),x=Ls(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Fs(e,t,n));const s=e[1],i=Bs((e[0]-t+2*r)/n+1,a);D(z(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const o=Bs((s-t+2*r)/n+1,a);return D(z(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[i,o]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2);l={top:u,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Bs((t-s+h+p)/r+1,o),d=Bs((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,m,g,w,x,s,o),N=i?f*d:f;let C;return"channelsFirst"===o?C=[u,N,k,I]:"channelsLast"===o&&(C=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function Ds(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,h,l,c,d]=e}const[p,f,m,,g]=t,[y,b,w]=Ms(n),[x,v,k]=Ms(r),I=Ls(p,x),N=Ls(f,v),C=Ls(m,k),{padInfo:S,outDepth:E,outHeight:T,outWidth:A}=function(e,t,n,r,a,s,i,o,u,l,c){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Fs(e,t,r));const i=e[1],o=e[2],u=Bs((e[0]-t+2*a)/r+1,s);D(z(u),(()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`));const l=Bs((i-t+2*a)/r+1,s);D(z(l),(()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`));const c=Bs((o-t+2*a)/r+1,s);return D(z(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[u,l,c,1]}([t,n,r,1],o,0,a,e,c);h=s[0],p=s[1],f=s[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(h-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),w=c-b,x=Math.floor(m/2);d={top:b,bottom:w,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(a,l,c,d,y,b,w,I,N,C,o),_=s?g*h:g;let $;return"channelsFirst"===i?$=[u,_,E,T,A]:"channelsLast"===i&&($=[u,E,T,A,_]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:h,outDepth:E,outHeight:T,outWidth:A,outChannels:_,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:C,dilationDepth:x,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function Fs(e,t,n,r=1){const a=Ls(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Os(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ms(e){return"number"==typeof e?[e,e,e]:e}function Ls(e,t){return t<=1?e:e+(e-1)*(t-1)}function Bs(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function zs(e){const[t,n,r]=Os(e);return 1===t&&1===n&&1===r}function Ps(e,t){return zs(e)||zs(t)}function Ws(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const Vs=zr({avgPool_:function(e,t,n,r,a){const s=Lr(e,"x","avgPool","float32");D(Ps(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ns(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&D(z(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=_r.runKernelFunc(((e,s)=>{const o=_s(i.shape,t,n,1,r,a);return s([i]),1===o.filterWidth&&1===o.filterHeight&&B(o.inShape,o.outShape)?i.clone():e.avgPool(i,o)}),u,null,_e,l);return c=Ia(c,s.dtype),o?Ns(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Us=zr({avgPool3d_:function(e,t,n,r,a,s="NDHWC",i){null==i?i=[1,1,1]:as("dilations is deprecated, this field will be gone in v3.0.0.");const o=Lr(e,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),D("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s)),D(Ps(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&D(z(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:u},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:i};let h=_r.runKernelFunc(((e,o)=>{null==i&&(i=[1,1,1]);const l=$s(u.shape,t,n,i,r,a,s);return o([u]),e.avgPool3d(u,l)}),c,null,Re,d);return h=Ia(h,u.dtype),l?Ns(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});function Hs(e){return null==e?null:0===e.rank?Ns(e,[e.size]):1===e.rank?e:2===e.rank?Ns(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ns(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const Gs=zr({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=Lr(e,"x","batchNorm"),o=Lr(t,"mean","batchNorm"),u=Lr(n,"variance","batchNorm");let l,c;null!=a&&(l=Lr(a,"scale","batchNorm")),null!=r&&(c=Lr(r,"offset","batchNorm")),D(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),D(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),D(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d=function(e){let t;return t=0===e.rank||1===e.rank?Ns(e,[1,1,1,e.size]):2===e.rank?Ns(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ns(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),h={x:d,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},f=_r.runKernelFunc(((e,t)=>(t([d,o,u,l]),e.batchNorm(d,Hs(o),Hs(u),Hs(c),Hs(l),s))),h,null,mt,p);return Ns(f,i.shape)}}),js=zr({batchNorm2d_:function(e,t,n,r,a,s){const i=Lr(e,"x","batchNorm"),o=Lr(t,"mean","batchNorm"),u=Lr(n,"variance","batchNorm");let l,c;return null!=a&&(l=Lr(a,"scale","batchNorm")),null!=r&&(c=Lr(r,"offset","batchNorm")),D(2===i.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+".")),D(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),D(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Gs(i,o,u,c,l,s)}}),qs=zr({batchNorm3d_:function(e,t,n,r,a,s){const i=Lr(e,"x","batchNorm"),o=Lr(t,"mean","batchNorm"),u=Lr(n,"variance","batchNorm");let l,c;return null!=a&&(l=Lr(a,"scale","batchNorm")),null!=r&&(c=Lr(r,"offset","batchNorm")),D(3===i.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+".")),D(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),D(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Gs(i,o,u,c,l,s)}}),Ks=zr({batchNorm4d_:function(e,t,n,r,a,s){const i=Lr(e,"x","batchNorm"),o=Lr(t,"mean","batchNorm"),u=Lr(n,"variance","batchNorm");let l,c;return null!=a&&(l=Lr(a,"scale","batchNorm")),null!=r&&(c=Lr(r,"offset","batchNorm")),D(4===i.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+".")),D(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),D(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&D(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&D(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Gs(i,o,u,c,l,s)}}),Xs=zr({clipByValue_:function(e,t,n){const r=Lr(e,"x","clipByValue");D(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return _r.runKernelFunc(((e,a)=>{const s=e.clip(r,t,n);return a([r]),s}),a,null,Be,s)}});function Ys(e,t){const n=e[0].length;e.forEach(((e,t)=>{D(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),D(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)D(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Zs(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Js=zr({concat_:function(e,t=0){D(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Br(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}));const r=n,a={axis:t};return _r.runKernelFunc(((e,r)=>{const a=H(t,n[0].shape)[0],s=Zs(n.map((e=>e.shape)),a);if(0===L(s))return Vr([],s);if(n=n.filter((e=>e.size>0)),1===n.length)return n[0];Ys(n.map((e=>e.shape)),a);const i=e.concat(n,a);return r(n),i}),r,null,Pe,a)}}),Qs=zr({concat1d_:function(e){return Js(e,0)}}),ei=zr({concat2d_:function(e,t){return Js(e,t)}}),ti=zr({concat3d_:function(e,t){return Js(e,t)}}),ni=zr({concat4d_:function(e,t){return Js(e,t)}}),ri=zr({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Lr(e,"x","conv2d"),u=Lr(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),D(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+".")),null!=i&&D(z(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d="NHWC"===a?l.shape[3]:l.shape[1];D(d===u.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`)),D(Ps(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=_r.runKernelFunc(((e,t)=>{const o=Ws(a),c=Rs(l.shape,u.shape,n,s,r,i,!1,o),d=e.conv2d(l,u,c);return t([l,u]),d}),h,null,We,p);return c?Ns(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ai=zr({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Lr(e,"x","conv1d"),u=Lr(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Ns(o,[1,o.shape[0],o.shape[1]])),D(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),D(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+".")),null!=i&&D(z(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),D(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),D(Ps(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),D("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=Ns(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=Ns(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=ri(h,d,[1,n],r,"NHWC",[1,s],i);return Ns(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),si=zr({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){D(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),D(4===o.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+".")),D(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank)),D(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];D(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),D(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&D(z(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=_r.runKernelFunc(((e,t)=>{const l=Ws(s),c=Rs(o,n.shape,r,1,a,i,!1,l),d=e.conv2dDerInput(u,n,c);return t([u,n]),d}),h,null,Ue,p);return l?Ns(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ii=zr({conv2dTranspose_:function(e,t,n,r,a,s){const i=Lr(e,"x","conv2dTranspose"),o=Lr(t,"filter","conv2dTranspose");return si(n,i,o,r,a,"NHWC",s)}}),oi=zr({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Lr(e,"x","conv3d"),o=Lr(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ns(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),D(5===o.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+".")),D(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),D(Ps(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),D("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=_r.runKernelFunc(((e,t)=>{const a=Ds(u.shape,o.shape,n,s,r),i=e.conv3d(u,o,a);return t([u,o]),i}),c,null,He,d);return l?Ns(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ui=zr({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Lr(e,"x","depthwiseConv2d"),u=Lr(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),D(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+".")),D(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&D(z(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=_r.runKernelFunc(((e,t)=>{null==s&&(s=[1,1]),D(Ps(n,s),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const a=Rs(l.shape,u.shape,n,s,r,i,!0),o=e.depthwiseConv2D(l,u,a);return t([l,u]),o}),d,null,Je,h);return c?Ns(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),li=zr({floorDiv_:function(e,t){let n=Lr(e,"a","floorDiv"),r=Lr(t,"b","floorDiv");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.floorDiv(n,r);return t([n,r]),a}),a,null,ft)}}),ci=zr({div_:function(e,t){let n=Lr(e,"a","div"),r=Lr(t,"b","div");if([n,r]=Ir(n,r),"int32"===n.dtype&&"int32"===r.dtype)return li(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.realDivide(n,r);return t([n,r]),a}),a,null,at,{})}}),di=zr({elu_:function(e){const t=Lr(e,"x","elu"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.elu(t);return n([r]),r}),n,null,st)}});function hi(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function pi(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function fi(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const mi=zr({equal_:function(e,t){let n=Lr(e,"a","equal"),r=Lr(t,"b","equal");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.equal(n,r)),a,null,ot)}}),gi=zr({exp_:function(e){const t=Lr(e,"x","exp"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.exp(t);return n([r]),r}),n,null,ut)}}),yi=zr({expandDims_:function(e,t=0){const n=Lr(e,"x","expandDims",null);D(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return t<0&&(D(-(n.rank+1)<=t,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),t=n.rank+t+1),r.splice(t,0,1),Ns(n,r)}}),bi=zr({tile_:function(e,t){const n=Lr(e,"x","tile",null);D(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r=[n],a={x:n},s={reps:t};return _r.runKernelFunc(((e,r)=>{const a=e.tile(n,t);return r([n]),a}),a,null,$n,s,r)}}),wi=zr({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=ka([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Ns(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return bi(yi(i,0),[n[0],1,1]);if(2===n.length)return bi(yi(yi(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return bi(yi(yi(yi(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function xi(e,t,n){const r={shape:e,value:t,dtype:n};return _r.runKernelFunc((r=>r.fill(e,t,n)),{},null,dt,r)}const vi=zr({floor_:function(e){const t=Lr(e,"x","floor"),n={x:t};return _r.runKernelFunc((e=>e.floor(t)),n,null,pt)}}),ki=30;function Ii(e){return e<=ki?e:te(e,Math.floor(Math.sqrt(e)))}function Ni(e,t){let n,r=!1;for(e<=ki?(n=e,r=!0):n=te(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=te(e,n+1);return n}function Ci(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Si(e,t,n){const r=e.shape[n],a=[];let s=1,i=1;for(let t=0;t<n;t++)a.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)a.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)a.push(e.shape[t]),i*=e.shape[t];return{batchSize:s,sliceSize:i,dimSize:r,outputShape:a}}const Ei=zr({gather_:function(e,t,n=0){const r=Lr(e,"x","gather"),a=Lr(t,"indices","gather","int32"),s={x:r,indices:a},i={axis:n};return _r.runKernelFunc(((e,t)=>{const s=H(n,r.shape)[0],i=Si(r,a,s),o=e.gather(r,Ns(a,[a.size]),s);return t([r,a]),Ns(o,i.outputShape)}),s,null,gt,i)}}),Ti=zr({greater_:function(e,t){let n=Lr(e,"a","greater"),r=Lr(t,"b","greater");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.greater(n,r)),a,null,bt)}}),Ai=zr({greaterEqual_:function(e,t){let n=Lr(e,"a","greaterEqual"),r=Lr(t,"b","greaterEqual");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.greaterEqual(n,r);return t([n,r]),a}),a,null,wt)}}),_i=zr({maximum_:function(e,t){let n=Lr(e,"a","maximum"),r=Lr(t,"b","maximum");[n,r]=Ir(n,r),"bool"===n.dtype&&(n=Ia(n,"int32"),r=Ia(r,"int32")),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.maximum(n,r);return t([n,r]),a}),a,null,Ft)}}),$i=zr({mul_:function(e,t){let n=Lr(e,"a","mul"),r=Lr(t,"b","mul");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.multiply(n,r);return t([n,r]),a}),a,null,Ut)}}),Ri=zr({leakyRelu_:function(e,t=.2){const n=Lr(e,"x","leakyRelu");return _i($i(hs(t),n),n)}}),Di=zr({log_:function(e){const t=Lr(e,"x","log"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.log(t);return n([t]),r}),n,null,Tt)}}),Fi=zr({max_:function(e,t=null,n=!1){const r=Lr(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return _r.runKernelFunc(((e,a)=>{let s=H(t,r.shape);const i=vs(s,r.rank);let o=r;null!=i&&(o=Cs(r,i),s=Is(s.length,o.rank));const u=e.max(o,s);null!=i&&o.dispose();let l=u;if(n){const e=ws(l.shape,H(t,r.shape));l=Ns(l,e),u.dispose()}return a([r,l]),l}),a,null,Dt,s)}}),Oi=zr({sub_:function(e,t){let n=Lr(e,"a","sub"),r=Lr(t,"b","sub");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.subtract(n,r);return t([n,r]),a}),a,null,En)}}),Mi=zr({sum_:function(e,t=null,n=!1){let r=Lr(e,"x","sum");"bool"===r.dtype&&(r=Ia(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return _r.runKernelFunc(((e,a)=>{a([r]);const s=H(t,r.shape),i=vs(s,r.rank);let o=s,u=r;null!=i&&(u=Cs(r,i),o=Is(o.length,r.rank));let l=e.sum(u,o);if(n){const e=ws(l.shape,s);l=Ns(l,e)}return l}),a,null,vn,s)}}),Li=zr({logSoftmax_:function(e,t=-1){const n=Lr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},a={axis:t};return _r.runKernelFunc(((n,r)=>{const a=Fi(e,t,!0),s=Oi(e,a),i=Oi(Ia(s,"float32"),Di(Mi(gi(s),t,!0)));return r([i]),i}),r,null,Rt,a)}}),Bi=zr({logicalAnd_:function(e,t){const n=Lr(e,"a","logicalAnd","bool"),r=Lr(t,"b","logicalAnd","bool");fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.logicalAnd(n,r)),a,null,_t)}}),zi=zr({maxPool_:function(e,t,n,r,a){const s=Lr(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Ns(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),D(Ps(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&D(z(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=_r.runKernelFunc(((e,s)=>{const o=_s(i.shape,t,n,1,r,a);let u;return u=1===o.filterWidth&&1===o.filterHeight&&B(o.inShape,o.outShape)?i.clone():e.maxPool(i,o),s([i,u]),u}),u,null,Ot,l);return o?Ns(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Pi=zr({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC",i){null==i?i=[1,1,1]:as("dilations is deprecated, this field will be gone in v3.0.0.");const o=Lr(e,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),D("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s)),D(Ps(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=a&&D(z(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:u},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:i},h=_r.runKernelFunc(((e,o)=>{null==i&&(i=[1,1,1]);const l=$s(u.shape,t,n,i,r,a,s),c=e.maxPool3d(u,l);return o([u,c]),c}),c,null,Lt,d);return l?Ns(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});function Wi(e,t="float32"){if("complex64"===t){const t=Wi(e,"float32"),n=Wi(e,"float32");return Pr(t,n)}const n=ie(L(e),t);return _r.makeTensor(n,e,t)}function Vi(e,t="float32"){if("complex64"===t){const t=Vi(e,"float32"),n=Wi(e,"float32");return Pr(t,n)}const n=se(L(e),t);return _r.makeTensor(n,e,t)}const Ui=zr({mean_:function(e,t=null,n=!1){const r=Lr(e,"x","mean"),a=H(t,r.shape),s=L(bs(r.shape,a)[1]),i={x:r},o={axis:t,keepDims:n},u=()=>{const e=hs(s),a=e.dtype===r.dtype?r:Ia(r,e.dtype),i=ci(a,e);return Mi(i,t,n)};return ds((e=>({value:_r.runKernelFunc(u,i,null,zt,o),gradFunc:t=>{const n=e.shape.slice();a.forEach((e=>{n[e]=1}));const r=Ns(t,n);return ci($i(r,Vi(e.shape,"float32")),s)}})))(r)}}),Hi=zr({min_:function(e,t=null,n=!1){const r=Lr(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return _r.runKernelFunc(((e,a)=>{const s=H(t,r.shape);let i=s;const o=vs(i,r.rank);let u=r;null!=o&&(u=Cs(r,o),i=Is(i.length,r.rank));const l=e.min(u,i);null!=o&&u.dispose();let c=l;if(n){const e=ws(c.shape,s);c=Ns(l,e),l.dispose()}return a([r,c]),c}),a,null,Pt,s)}}),Gi=zr({minimum_:function(e,t){let n=Lr(e,"a","minimum"),r=Lr(t,"b","minimum");[n,r]=Ir(n,r),"bool"===n.dtype&&(n=Ia(n,"int32"),r=Ia(r,"int32")),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.minimum(n,r);return t([n,r]),a}),a,null,Wt)}}),ji=zr({square_:function(e){const t=Lr(e,"x","square"),n=[t];return _r.runKernelFunc(((e,n)=>(n([t]),e.square(t))),{x:t},null,"Square",{},n,[])}}),qi=zr({moments_:function(e,t=null,n=!1){const r=H(t,(e=Lr(e,"x","moments")).shape),a=Ui(e,r,n);let s=a.shape;n||(s=ws(a.shape,r));const i=ji(Oi(Ia(e,"float32"),Ns(a,s)));return{mean:a,variance:Ui(i,r,n)}}}),Ki=zr({neg_:function(e){const t=Lr(e,"x","neg"),n={x:t};return _r.runKernelFunc((e=>e.neg(t)),n,null,Ht)}}),Xi=zr({notEqual_:function(e,t){let n=Lr(e,"a","notEqual"),r=Lr(t,"b","notEqual");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.notEqual(n,r)),a,null,Gt)}}),Yi=zr({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a=Lr(e,"indices","oneHot","int32"),s=[...a.shape,t],i={indices:a},o={depth:t,onValue:n,offValue:r};return _r.runKernelFunc(((e,i)=>(i([a]),Ns(e.oneHot(Ns(a,[a.size]),t,n,r),s))),i,null,Yt,o)}}),Zi=zr({imag_:function(e){const t=Lr(e,"input","imag"),n={input:t};return _r.runKernelFunc((e=>e.imag(t)),n,null,kt)}}),Ji=zr({real_:function(e){const t=Lr(e,"input","real"),n={input:t};return _r.runKernelFunc((e=>e.real(t)),n,null,en)}}),Qi=zr({zerosLike_:function(e){const t=Lr(e,"x","zerosLike"),n={x:t};return _r.runKernelFunc((e=>e.zerosLike(t)),n,null,Mn)}}),eo=zr({onesLike_:function(e){const t=Lr(e,"x","onesLike"),n={x:t};return _r.runKernelFunc(((e,n)=>{if("complex64"===t.dtype){const e=eo(Ji(t)),n=Qi(Zi(t));return Pr(e,n)}return e.onesLike(t)}),n,null,Xt)}}),to=zr({pad_:function(e,t,n=0){const r=Lr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return _r.runKernelFunc(((e,a)=>(a([r]),e.pad(r,t,n))),s,null,Zt,a)}}),no=zr({prelu_:function(e,t){const n=Lr(e,"x","prelu"),r=Lr(t,"alpha","prelu"),a={x:n,alpha:r};return _r.runKernelFunc(((e,t)=>{const a=e.prelu(n,r);return t([n,r]),a}),a,null,Qt)}});var ro=n(377);class ao{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=ro.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class so{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ro.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const io=zr({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new ao(t,n,r,!1,a),i=ka(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),oo=zr({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=ka(e,r),i=new so(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function uo(e,t){O(e);const n=Fr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Wr(e,null,n,t)}function lo(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return _r.runKernelFunc((()=>{if(e===t||e<t&&n<0||t<e&&n>1)return Wi([0],r);const a=ie(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return uo(a,r)}),{},null,"Range",a)}const co=zr({relu_:function(e){const t=Lr(e,"x","relu"),n={x:t};return _r.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?Ia(t,"int32"):e.relu(t))),n,null,nn)}}),ho=zr({reverse_:function(e,t){const n=Lr(e,"x","reverse"),r={x:n},a={dims:t};return _r.runKernelFunc((e=>{const r=H(t,n.shape);if(0===n.rank)return Na(n);const a=e.reverse(n,r);return Ns(a,n.shape)}),r,null,un,a)}}),po=zr({selu_:function(e){const t=Lr(e,"x","selu"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.selu(t);return n([t]),r}),n,null,pn)}}),fo=zr({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Lr(e,"x","separableConv2d"),u=Lr(t,"depthwiseFilter","separableConv2d"),l=Lr(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),D(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),D(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),D(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),D(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const h=u.shape[2],p=u.shape[3];D(l.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`));const f=ui(c,u,r,a,i,s),m=ri(f,l,1,"valid",i);return d?Ns(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),mo=zr({sigmoid_:function(e){const t=Lr(e,"x","sigmoid"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.sigmoid(t);return n([r]),r}),n,null,bn)}}),go=zr({slice_:function(e,t,n){const r=Lr(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return _r.runKernelFunc(((e,a)=>{const[s,i]=es(r,t,n);return Pa(r,s,i),a([r]),e.slice(r,s,i)}),a,null,fn,s)}}),yo=zr({slice1d_:function(e,t,n){const r=Lr(e,"x","slice1d");return D(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),go(r,[t],[n])}}),bo=zr({slice2d_:function(e,t,n){const r=Lr(e,"x","slice2d");return D(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),go(r,t,n)}}),wo=zr({slice3d_:function(e,t,n){const r=Lr(e,"x","slice3d");return D(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),go(r,t,n)}}),xo=zr({slice4d_:function(e,t,n){const r=Lr(e,"x","slice4d");return D(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),go(r,t,n)}}),vo=zr({softmax_:function(e,t=-1){const n=Lr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return _r.runKernelFunc(((e,r)=>{const a=e.softmax(n,t);return r([a]),a}),r,null,Nn,a)}}),ko=zr({softplus_:function(e){const t=Lr(e,"x","softplus"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.softplus(t);return n([t]),r}),n,null,wn)}});function Io(e,t,n=0){let r=[];if("number"==typeof t)D(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{D(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}D(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}const No=zr({split_:function(e,t,n=0){const r=Lr(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return _r.runKernelFunc(((e,a)=>{const s=H(n,r.shape)[0],i=Io(r,t,s);return e.split(r,i,s)}),a,null,In,s)}}),Co=zr({sqrt_:function(e){const t=Lr(e,"x","sqrt"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.sqrt(t);return n([t]),r}),n,null,xn)}}),So=zr({squeeze_:function(e,t){const n=Lr(e,"x","squeeze");return Ns(n,G(n.shape,t).newShape)}}),Eo=zr({stack_:function(e,t=0){const n=Br(e,"tensors","stack");if(D(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return yi(n[0],t);const r=n[0].rank,a=n[0].shape,s=n[0].dtype;D(t<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((e=>{F(a,e.shape,"All tensors passed to stack must have matching shapes"),D(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((e=>yi(e,t)));return Js(i,t)}}),To=zr({tanh_:function(e){const t=Lr(e,"x","tanh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.tanh(t);return n([r]),r}),n,null,_n)}});function Ao(e,t,n){if(O(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Fr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Wr(e,t,r,n)}function _o(e,t,n){if(O(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Fr(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Wr(e,t,r,n)}const $o=zr({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new ao(t,n,r,!0,a),i=ka(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Ro=zr({unstack_:function(e,t=0){const n=Lr(e,"x","unstack");D(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),t<0&&(t+=n.shape.length);const r={value:n},a={axis:t};return _r.runKernelFunc((e=>e.unstack(n,t)),r,null,Fn,a)}}),Do=zr({broadcastTo_:function(e,t){let n=Lr(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ns(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Na(n);const i={x:n},o={shape:t,inputShape:a};return _r.runKernelFunc((e=>e.tile(n,s)),i,null,Oe,o)}}),Fo=zr({where_:function(e,t,n){const r=Lr(t,"a","where"),a=Lr(n,"b","where"),s=Lr(e,"condition","where","bool"),i=fi(r.shape,a.shape),o=Do(r,i),u=Do(a,i);1===s.rank&&D(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&F(s.shape,u.shape,"Error in where: ");const l={condition:s,t:o,e:u};return _r.runKernelFunc(((e,t)=>{const n=e.select(s,o,u);return t([s]),n}),l,null,hn)}}),Oo=zr({dropout_:function(e,t,n,r){const a=Lr(e,"x","dropout");if(D("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),D(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof pr?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(B(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=ci(vi(ms(oo(s,0,1,"float32",r),i)),i);return $i(a,o)}}),Mo=zr({fft_:function(e){D("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _r.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=e.as2D(r,n);return t.fft(a).reshape(e.shape)}),t,null,ct)}}),Lo=zr({rfft_:function(e,t){D("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got "+e.dtype));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=go(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Js([e,Wi(r)],e.shape.length-1),n=t}else a=e;const s=Qi(a),i=Ns(Pr(a,s),[r,n]),o=Mo(i),u=Math.floor(n/2)+1,l=Ji(o),c=Zi(o),d=No(l,[u,n-u],l.shape.length-1),h=No(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Ns(Pr(d[0],h[0]),p)}}),Bo=zr({ifft_:function(e){D("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _r.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=Ns(e,[r,n]),s=t.ifft(a);return Ns(s,e.shape)}),t,null,vt)}}),zo=zr({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ns(e,[n,t]);r=Bo(a)}else{const a=[n,2*(t-1)],s=Ns(Ji(e),[n,t]),i=Ns(Zi(e),[n,t]),o=ho(go(s,[0,1],[n,t-2]),1),u=$i(ho(go(i,[0,1],[n,t-2]),1),hs(-1)),l=Js([s,o],1),c=Js([i,u],1),d=Ns(Pr(l,c),[a[0],a[1]]);r=Bo(d)}if(r=Ji(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ns(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Po=zr({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Ns(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(4===o.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+".")),D(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+".")),D(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];D(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),D(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&D(z(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={x:o,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return _r.runKernelFunc((e=>{const t=Ws(s),l=Rs(o.shape,n,r,1,a,i,!1,t);return e.conv2dDerFilter(o,u,l)}),d,null,Ve,h)}}),Wo=zr({relu6_:function(e){const t=Lr(e,"x","relu6"),n={x:t};return _r.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?Ia(t,"int32"):e.relu6(t))),n,null,on)}}),Vo=zr({step_:function(e,t=0){const n=Lr(e,"x","step"),r={x:n},a={alpha:t};return _r.runKernelFunc((e=>e.step(n,t)),r,null,Ln,a)}});function Uo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return $i(e,Vo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ho(e,t){let n=t;const r=pi(e.shape,t.shape);return r.length>0&&(n=Mi(n,r)),Ns(n,e.shape)}function Go(e,t,n){if("linear"===t)return e;if("relu"===t)return co(e);if("elu"===t)return di(e);if("relu6"===t)return Wo(e);if("prelu"===t)return no(e,n);throw new Error(`Unknown fused activation ${t}.`)}const jo=(e,t)=>!(e>0)||"linear"===t,qo=zr({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===jo(_r.state.gradientDepth,u)){let c=ri(e,t,n,r,a,s,i);return null!=o&&(c=ms(c,o)),Go(c,u,l)}const c=Lr(e,"x","conv2d"),d=Lr(t,"filter","conv2d");let h=c,p=!1;3===c.rank&&(p=!0,h=Ns(c,[1,c.shape[0],c.shape[1],c.shape[2]])),D(4===h.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+h.rank+".")),D(4===d.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+d.rank+".")),null!=i&&D(z(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),D(h.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),D(Ps(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),D("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const f=Rs(h.shape,d.shape,n,s,r,i);let m,g;null!=o&&(m=Lr(o,"bias","fused conv2d"),[m]=Ir(m,c),fi(f.outShape,m.shape)),null!=l&&(g=Lr(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,i,o,l]=t,c=Uo(e,o,u);D(zs(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[si(i.shape,c,a,n,r),Po(i,c,a.shape,n,r)];if(null!=l){const e=Ho(l,c);d.push(e)}return d},b=e=>e.fusedConv2d({input:h,filter:d,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),w={x:h,filter:d,bias:m,preluActivationWeights:g},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u};return null==o?ds(((e,t,n)=>{let r=_r.runKernelFunc(b,w,null,Wn,x);return n([t,e,r]),p&&(r=Ns(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(h,d):ds(((e,t,n,r)=>{let a=_r.runKernelFunc(b,w,null,Wn,x);return r([t,e,a,n]),p&&(a=Ns(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(h,d,m)}}),Ko=zr({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Ns(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return _r.runKernelFunc((t=>{const l=Rs(e.shape,n,r,s,a,i,!0);return t.depthwiseConv2DDerFilter(o,u,l)}),l,null,Qe,c)}}),Xo=zr({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=_r.runKernelFunc((t=>{const u=Rs(e,n.shape,r,s,a,i,!0);return t.depthwiseConv2DDerInput(o,n,u)}),l,null,et,c);return u?Ns(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Yo=zr({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===jo(_r.state.gradientDepth,u)){let c=ui(e,t,n,r,a,s,i);return null!=o&&(c=ms(c,o)),Go(c,u,l)}const c=Lr(e,"x","depthwiseConv2d"),d=Lr(t,"filter","depthwiseConv2d");let h=c,p=!1;3===c.rank&&(p=!0,h=Ns(c,[1,c.shape[0],c.shape[1],c.shape[2]])),D(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),D(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),D(h.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),D(Ps(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&D(z(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const f=Rs(h.shape,d.shape,n,s,r,i,!0);let m,g;null!=o&&(m=Lr(o,"bias","fused conv2d"),[m]=Ir(m,c),fi(f.outShape,m.shape)),null!=l&&(g=Lr(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{D(zs(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,d=Uo(e,l,u),h=Xo(o.shape,d,a,n,r,s,i),p=Ko(o,d,a.shape,n,r,s,i);return null!=c?[h,p,Ho(m,d)]:[h,p]},b=e=>e.fusedDepthwiseConv2D({input:h,filter:d,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),w={x:h,filter:d,bias:m,preluActivationWeights:g},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u};return null==o?ds(((e,t,n)=>{let r=_r.runKernelFunc(b,w,null,Vn,x);return n([t,e,r]),p&&(r=Ns(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(h,d):ds(((e,t,n,r)=>{let a=_r.runKernelFunc(b,w,null,Vn,x);return r([t,e,a,n]),p&&(a=Ns(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(h,d,m)}}),Zo=zr({matMul_:function(e,t,n=!1,r=!1){let a=Lr(e,"a","matMul"),s=Lr(t,"b","matMul");[a,s]=Ir(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return _r.runKernelFunc(((e,t)=>{t([a,s]);const i=n?a.shape[a.rank-2]:a.shape[a.rank-1],o=r?s.shape[s.rank-1]:s.shape[s.rank-2],u=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?s.shape[s.rank-2]:s.shape[s.rank-1],c=a.shape.slice(0,-2),d=s.shape.slice(0,-2),h=L(c),p=L(d),f=h===p||1===h||1===p;D(a.rank>=2&&s.rank>=2&&f,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${c}) and (${d}).`)),D(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${n} and transposeB=${r} must match.`));const m=(h>p?c:d).concat([u,l]),g=Ns(a,n?[h,i,u]:[h,u,i]),y=Ns(s,r?[p,l,o]:[p,o,l]),b=e.batchMatMul(g,y,n,r);return Ns(b,m)}),i,null,De,o)}}),Jo=zr({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i}){if(!1===jo(_r.state.gradientDepth,s)){let o=Zo(e,t,n,r);return null!=a&&(o=ms(o,a)),Go(o,s,i)}let o=Lr(e,"a","fused matMul"),u=Lr(t,"b","fused matMul");[o,u]=Ir(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?o.shape[o.rank-1]:o.shape[o.rank-2],h=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=o.shape.slice(0,-2),f=u.shape.slice(0,-2),m=L(p),g=L(f);D(o.rank>=2&&u.rank>=2&&o.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`)),D(B(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and `+u.shape+" must match.")),D(l===c,(()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=o.shape.slice(0,-2).concat([d,h]),b=Ns(o,n?[m,l,d]:[m,d,l]),w=Ns(u,r?[g,h,c]:[g,c,h]);let x,v;null!=a&&(x=Lr(a,"bias","fused matMul"),[x]=Ir(x,o),fi(y,x.shape)),null!=i&&(v=Lr(i,"prelu weights","fused matMul"));const k=(e,t)=>{const[i,o,u,l]=t,c=Uo(Ns(e,u.shape),u,s);let d,h;return n||r?!n&&r?(d=Zo(c,o,!1,!1),h=Zo(c,i,!0,!1)):n&&!r?(d=Zo(o,c,!1,!0),h=Zo(i,c,!1,!1)):(d=Zo(o,c,!0,!0),h=Zo(c,i,!0,!0)):(d=Zo(c,o,!1,!0),h=Zo(i,c,!0,!1)),null!=a?[d,h,Ho(l,c)]:[d,h]},I=e=>e.fusedBatchMatMul({a:b,b:w,transposeA:n,transposeB:r,bias:x,activation:s,preluActivationWeights:v}),N={a:b,b:w,bias:x,preluActivationWeights:v},C={transposeA:n,transposeB:r,activation:s};return null==a?ds(((e,t,n)=>{const r=_r.runKernelFunc(I,N,null,Pn,C);return n([e,t,r]),{value:Ns(r,y),gradFunc:k}}))(b,w):ds(((e,t,n,r)=>{const a=_r.runKernelFunc(I,N,null,Pn,C);return r([e,t,a,n]),{value:Ns(a,y),gradFunc:k}}))(b,w,x)}});function Qo(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return uo(a,"float32")}zr({hammingWindow_:function(e){return Qo(e,.54,.46)}});const eu=zr({hannWindow_:function(e){return Qo(e,.5,.5)}}),tu=zr({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(go(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Js([go(e,s,t-r),xi([r],a)]);i.push(o),s+=n}return 0===i.length?Ao([],[0,t]):Ns(Js(i),[i.length,t])}});zr({stft_:function(e,t,n,r,a=eu){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=tu(e,t,n),o=$i(i,a(t)),u=[];for(let e=0;e<i.shape[0];e++)u.push(Lo(go(o,[e,0],[1,t]),r));return Js(u)}});const nu=zr({cropAndResize_:function(e,t,n,r,a,s){const i=Lr(e,"image","cropAndResize"),o=Lr(t,"boxes","cropAndResize","float32"),u=Lr(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const l=o.shape[0];D(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),D(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),D(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),D(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),D(r[0]>=1&&r[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+r)),D("bilinear"===a||"nearest"===a,(()=>"method must be bilinear or nearest, but was "+a));const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return _r.runKernelFunc((e=>e.cropAndResize(i,o,u,r,a,s)),c,null,Ye,d)}}),ru=zr({flipLeftRight_:function(e){const t=Lr(e,"image","flipLeftRight","float32");D(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return _r.runKernel(ht,n,{})}}),au=zr({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Lr(e,"image","rotateWithOffset","float32");D(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return _r.runKernel(zn,s,i)}});function su(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),D(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),D(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),D(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1])),D(1===t.rank,(()=>"scores must be a 1D tensor")),D(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0])),D(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const iu=zr({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Lr(e,"boxes","nonMaxSuppression"),i=Lr(t,"scores","nonMaxSuppression"),o=su(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return _r.runKernelFunc((e=>e.nonMaxSuppression(s,i,n,r,a)),{boxes:s,scores:i},null,jt,u)}});function ou(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||uu)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function uu(e,t){return e>t?1:e<t?-1:0}function lu(e,t,n,r,a){return hu(e,t,n,r,a,0).selectedIndices}function cu(e,t,n,r,a,s){return hu(e,t,n,r,a,0,!1,s,!0)}function du(e,t,n,r,a,s){return hu(e,t,n,r,a,s,!0)}function hu(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(mu);const c=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=pu(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*fu(r,c,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&ou(l,t,mu))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:uo(d,"int32")};return i&&(m.selectedScores=uo(h,"float32")),u&&(m.validOutputs=hs(p,"int32")),m}function pu(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,h),w=Math.max(y-m,0)*Math.max(b-g,0);return w/(p+f-w)}function fu(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function mu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const gu=zr({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Lr(e,"boxes","nonMaxSuppression"),o=Lr(t,"scores","nonMaxSuppression"),u=su(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=_r.runKernel(Kt,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),yu=zr({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Lr(e,"boxes","nonMaxSuppression"),o=Lr(t,"scores","nonMaxSuppression"),u=su(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=_r.runKernel(qt,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}}),bu=zr({resizeBilinear_:function(e,t,n=!1){const r=Lr(e,"images","resizeBilinear");D(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),D(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."));let a=r,s=!1;3===r.rank&&(s=!0,a=Ns(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=t,u={images:a},l={alignCorners:n,size:t},c=_r.runKernelFunc(((e,t)=>(t([a]),e.resizeBilinear(a,i,o,n))),u,null,sn,l);return s?Ns(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),wu=zr({resizeNearestNeighbor_:function(e,t,n=!1){const r=Lr(e,"images","resizeNearestNeighbor");D(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),D(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+".")),D("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let a=r,s=!1;3===r.rank&&(s=!0,a=Ns(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=t,u={images:a},l={alignCorners:n,size:t},c=_r.runKernelFunc(((e,t)=>(t([a]),e.resizeNearestNeighbor(a,i,o,n))),u,null,an,l);return s?Ns(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xu=zr({lessEqual_:function(e,t){let n=Lr(e,"a","lessEqual"),r=Lr(t,"b","lessEqual");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.lessEqual(n,r);return t([n,r]),a}),a,null,Et)}}),vu=zr({bandPart_:function(e,t,n){D(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),D(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Lr(e,"a","bandPart");D(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Ns(lo(0,s,1,"int32"),[-1,1]),u=lo(0,i,1,"int32"),l=Oi(o,u),c=Bi(xu(l,hs(+t,"int32")),Ai(l,hs(-n,"int32"))),d=Wi([s,i],r.dtype);return Ns(Eo(Ro(Ns(r,[-1,s,i])).map((e=>Fo(c,e,d)))),a)}}),ku=zr({pow_:function(e,t){let n=Lr(e,"base","pow"),r=Lr(t,"exp","pow");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.pow(n,r);return t([n,r,a]),a}),a,null,Jt)}});function Iu(e,t,n=null){if(0===e.rank)return fs(e);if(1!==e.rank&&null===n)return Iu(Ns(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Mi(fs(e),n);if(t===1/0)return Fi(fs(e),n);if(t===-1/0)return Hi(fs(e),n);if("euclidean"===t||2===t)return Co(Mi(ku(fs(e),hs(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return Fi(Mi(fs(e),n[0]),n[1]-1);if(t===1/0)return Fi(Mi(fs(e),n[1]),n[0]);if(t===-1/0)return Hi(Mi(fs(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Co(Mi(ji(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const Nu=zr({norm_:function(e,t="euclidean",n=null,r=!1){const a=Iu(e=Lr(e,"x","norm"),t,n);let s=a.shape;if(r){const t=H(n,e.shape);s=ws(a.shape,t)}return Ns(a,s)}}),Cu=zr({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,D(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)D(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=No(e,e.shape[0],0).map((e=>So(e,[0])));D(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(_r.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=$i(Mi($i(n[r],e)),n[r]);e=Oi(e,t)}return ci(e,Nu(e,"euclidean"))})));return t?Eo(n,0):n}});function Su(e,t=!1){return _r.tidy((()=>{D(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=wi(n),s=Na(e);const i=Ao([[1]],[1,1]);let o=Na(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=_r.tidy((()=>{const t=go(s,[e,e],[n-e,1]),u=Nu(t),l=go(s,[e,e],[1,1]),c=Fo(Ti(l,0),Ao([[-1]]),Ao([[1]])),d=Oi(l,$i(c,u)),h=ci(t,d);o=1===h.shape[0]?Na(i):Js([i,go(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Ki(ci(Zo(c,d),u)),f=go(s,[e,0],[n-e,r]),m=$i(p,o),g=Cs(o);if(0===e)s=Oi(f,Zo(m,Zo(g,f)));else{const t=Oi(f,Zo(m,Zo(g,f)));s=Js([go(s,[0,0],[e,r]),t],0)}const y=Cs(m),b=go(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Oi(b,Zo(Zo(b,o),y));else{const t=Oi(b,Zo(Zo(b,o),y));a=Js([go(a,[0,0],[n,e]),t],1)}return[o,s,a]})),us([t,u,l])}return!t&&n>r&&(a=go(a,[0,0],[n,r]),s=go(s,[0,0],[r,r])),[a,s]}))}const Eu=zr({qr_:function(e,t=!1){if(D(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank)),2===e.rank)return Su(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ro(Ns(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Su(e,t);a.push(n),s.push(r)})),[Ns(Eo(a,0),e.shape),Ns(Eo(s,0),e.shape)]}}});var Tu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Tu||(Tu={}));const Au=zr({computeWeightedLoss_:function(e,t,n=Tu.SUM_BY_NONZERO_WEIGHTS){const r=Lr(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Lr(t,"weights","computeWeightedLoss"));const s=null==a?r:$i(r,a);if(n===Tu.NONE)return s;if(n===Tu.SUM)return Mi(s);if(n===Tu.MEAN){if(null==a)return Ui(s);{const e=r.size/a.size,t=ci(Mi(s),Mi(a));return e>1?ci(t,hs(e)):t}}if(n===Tu.SUM_BY_NONZERO_WEIGHTS){if(null==a)return ci(Mi(s),hs(r.size));{const e=$i(a,Vi(r.shape)),t=Ia(Mi(Xi(e,hs(0))),"float32");return ci(Mi(s),t)}}throw Error("Unknown reduction: "+n)}});zr({absoluteDifference_:function(e,t,n,r=Tu.SUM_BY_NONZERO_WEIGHTS){const a=Lr(e,"labels","absoluteDifference"),s=Lr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Lr(n,"weights","absoluteDifference")),F(a.shape,s.shape,"Error in absoluteDifference: ");const o=fs(Oi(a,s));return Au(o,i,r)}}),zr({cosineDistance_:function(e,t,n,r,a=Tu.SUM_BY_NONZERO_WEIGHTS){const s=Lr(e,"labels","cosineDistance"),i=Lr(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Lr(r,"weights","cosineDistance")),F(s.shape,i.shape,"Error in cosineDistance: ");const u=hs(1),l=Oi(u,Mi($i(s,i),n,!0));return Au(l,o,a)}}),zr({hingeLoss_:function(e,t,n,r=Tu.SUM_BY_NONZERO_WEIGHTS){let a=Lr(e,"labels","hingeLoss");const s=Lr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Lr(n,"weights","hingeLoss")),F(a.shape,s.shape,"Error in hingeLoss: ");const o=hs(1);a=Oi($i(hs(2),a),o);const u=co(Oi(o,$i(a,s)));return Au(u,i,r)}}),zr({huberLoss_:function(e,t,n,r=1,a=Tu.SUM_BY_NONZERO_WEIGHTS){const s=Lr(e,"labels","huberLoss"),i=Lr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Lr(n,"weights","huberLoss")),F(s.shape,i.shape,"Error in huberLoss: ");const u=hs(r),l=fs(Oi(i,s)),c=Gi(l,u),d=Oi(l,c),h=ms($i(hs(.5),ji(c)),$i(u,d));return Au(h,o,a)}}),zr({logLoss_:function(e,t,n,r=1e-7,a=Tu.SUM_BY_NONZERO_WEIGHTS){const s=Lr(e,"labels","logLoss"),i=Lr(t,"predictions","logLoss");let o=null;null!=n&&(o=Lr(n,"weights","logLoss")),F(s.shape,i.shape,"Error in logLoss: ");const u=hs(1),l=hs(r),c=Ki($i(s,Di(ms(i,l)))),d=$i(Oi(u,s),Di(ms(Oi(u,i),l))),h=Oi(c,d);return Au(h,o,a)}});const _u=zr({squaredDifference_:function(e,t){let n=Lr(e,"a","squaredDifference"),r=Lr(t,"b","squaredDifference");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.squaredDifference(n,r);return t([n,r]),a}),a,null,Cn,{})}});zr({meanSquaredError_:function(e,t,n,r=Tu.SUM_BY_NONZERO_WEIGHTS){const a=Lr(e,"labels","meanSquaredError"),s=Lr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Lr(n,"weights","meanSquaredError")),F(a.shape,s.shape,"Error in meanSquaredError: ");const o=_u(a,s);return Au(o,i,r)}});const $u=zr({log1p_:function(e){const t=Lr(e,"x","log1p"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.log1p(t);return n([t]),r}),n,null,At)}});zr({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Tu.SUM_BY_NONZERO_WEIGHTS){let s=Lr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Lr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Lr(n,"weights","sigmoidCrossEntropy")),F(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=hs(r),t=hs(1),n=hs(.5);s=ms($i(s,Oi(t,e)),$i(n,e))}const u=function(e,t){const n=Lr(e,"labels","sigmoidCrossEntropyWithLogits"),r=Lr(t,"logits","sigmoidCrossEntropyWithLogits");F(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=co(r),s=$i(r,n),i=$u(gi(Ki(fs(r))));return ms(Oi(a,s),i)}(s,i);return Au(u,o,a)}});const Ru=zr({logSumExp_:function(e,t=null,n=!1){const r=Lr(e,"x","logSumExp"),a=H(t,r.shape),s=Fi(r,a,!0),i=Oi(r,s),o=gi(i),u=Mi(o,a),l=Di(u),c=ms(Ns(s,l.shape),l);if(n){const e=ws(c.shape,a);return Ns(c,e)}return c}});zr({softmaxCrossEntropy_:function(e,t,n,r=0,a=Tu.SUM_BY_NONZERO_WEIGHTS){let s=Lr(e,"onehotLabels","softmaxCrossEntropy");const i=Lr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Lr(n,"weights","softmaxCrossEntropy")),F(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=hs(r),t=hs(1),n=hs(s.shape[1]);s=ms($i(s,Oi(t,e)),ci(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return ds(((e,t,r)=>{const a=Ru(t,[n],!0),s=Oi(Ia(t,"float32"),a);r([e,s]);const i=Ki($i(s,e));return{value:Mi(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=ws(e.shape,[n]);return[$i(Ns(e,s),Oi(Ia(r,"float32"),gi(a))),$i(Ns(e,s),Oi(gi(a),Ia(r,"float32")))]}}}))(e,t)}(s,i);return Au(u,o,a)}});const Du={flipLeftRight:ru,resizeNearestNeighbor:wu,resizeBilinear:bu,rotateWithOffset:au,cropAndResize:nu,nonMaxSuppression:iu,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Lr(e,"boxes","nonMaxSuppressionAsync"),i=Lr(t,"scores","nonMaxSuppressionAsync"),o=su(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=lu(u[0],u[1],n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),l},nonMaxSuppressionWithScore:gu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Lr(e,"boxes","nonMaxSuppressionAsync"),o=Lr(t,"scores","nonMaxSuppressionAsync"),u=su(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=du(l[0],l[1],n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),c},nonMaxSuppressionPadded:yu,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Lr(e,"boxes","nonMaxSuppressionAsync"),o=Lr(t,"scores","nonMaxSuppressionAsync"),u=su(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),f=cu(h,p,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),f}},Fu={bandPart:vu,gramSchmidt:Cu,qr:Eu};class Ou extends ps{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:os((()=>Qi(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:os((()=>Qi(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;os((()=>{const e=ms($i(s,this.rho),$i(ji(a),1-this.rho)),t=$i(ci(Co(ms(i,this.epsilon)),Co(ms(s,this.epsilon))),a),n=ms($i(i,this.rho),$i(ji(t),1-this.rho));s.assign(e),i.assign(n);const o=ms($i(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(us(this.accumulatedGrads.map((e=>e.variable))),us(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ou.className="Adadelta",rs(Ou);class Mu extends ps{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:os((()=>xi(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;os((()=>{const e=ms(s,ji(a));s.assign(e);const t=ms($i(ci(a,Co(ms(e,_r.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&us(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Mu.className="Adagrad",rs(Mu);class Lu extends ps{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],os((()=>{this.accBeta1=hs(t).variable(),this.accBeta2=hs(n).variable()})),null==r&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);os((()=>{const n=Oi(1,this.accBeta1),r=Oi(1,this.accBeta2);t.forEach(((t,a)=>{const s=_r.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:os((()=>Qi(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:os((()=>Qi(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=ms($i(o,this.beta1),$i(i,1-this.beta1)),c=ms($i(u,this.beta2),$i(ji(i),1-this.beta2)),d=ci(l,n),h=ci(c,r);o.assign(l),u.assign(c);const p=ms($i(ci(d,ms(Co(h),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign($i(this.accBeta1,this.beta1)),this.accBeta2.assign($i(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&us(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&us(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),os((()=>{this.accBeta1.assign(ku(this.beta1,this.iterations_+1)),this.accBeta2.assign(ku(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Lu.className="Adam",rs(Lu);class Bu extends ps{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],os((()=>{this.iteration=hs(0).variable(),this.accBeta1=hs(t).variable()})),null==r&&(this.epsilon=_r.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);os((()=>{const n=Oi(1,this.accBeta1),r=ci(-this.learningRate,ms($i(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=_r.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Qi(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Qi(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=ms($i(o,this.beta1),$i(i,1-this.beta1)),c=$i(u,this.beta2),d=fs(i),h=_i(c,d);o.assign(l),u.assign(h);const p=ms($i(ci(r,n),ci(l,ms(h,this.epsilon))),s);s.assign(p)})),this.iteration.assign(ms(this.iteration,1)),this.accBeta1.assign($i(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&us(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&us(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Bu.className="Adamax",rs(Bu);class zu extends ps{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=_r.registeredVariables[t];os((()=>{const e=ms($i(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ls(hs(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zu.className="SGD",rs(zu);class Pu extends zu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=hs(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:os((()=>Qi(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&os((()=>{let e;const t=ms($i(this.m,a),s);e=this.useNesterov?ms($i(this.c,ms(s,$i(t,this.m))),r):ms($i(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&us(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Pu.className="Momentum",rs(Pu);class Wu extends ps{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=_r.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_r.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:os((()=>Qi(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:os((()=>Qi(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:os((()=>Qi(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;os((()=>{const e=ms($i(i,this.decay),$i(ji(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=ms($i(t,this.decay),$i(s,1-this.decay)),u=ci($i(s,this.learningRate),Co(Oi(e,ms(ji(a),this.epsilon)))),l=ms($i(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Oi(r,l);r.assign(c)}else{const e=ms($i(i,this.decay),$i(ji(s),1-this.decay)),t=ms($i(o,this.momentum),ci($i(s,this.learningRate),Co(ms(e,this.epsilon))));i.assign(e),o.assign(t);const n=Oi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&us(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&us(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&us(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Wu.className="RMSProp",rs(Wu);class Vu{static sgd(e){return new zu(e)}static momentum(e,t,n=!1){return new Pu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Wu(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Lu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ou(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Bu(e,t,n,r,a)}static adagrad(e,t=.1){return new Mu(e,t)}}const Uu={sgd:Vu.sgd,momentum:Vu.momentum,adadelta:Vu.adadelta,adagrad:Vu.adagrad,rmsprop:Vu.rmsprop,adamax:Vu.adamax,adam:Vu.adam},Hu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Gu(){return new Promise((e=>Hu((()=>e()))))}function ju(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function qu(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Ku(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Xu(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Yu(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Zu(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Ju=1.7580993408473768,Qu=1.0507009873554805,el=.3275911,tl=.254829592,nl=-.284496736,rl=1.421413741,al=-1.453152027,sl=1.061405429;function il(...e){pe().getBool("IS_TEST")||console.warn(...e)}function ol(...e){pe().getBool("IS_TEST")||console.log(...e)}function ul(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ll(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function cl(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function dl(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function hl(e,t){return{real:e[2*t],imag:e[2*t+1]}}function pl(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function fl(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ml(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function gl(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Wi(e.shape),r=Ia(e,"float32"),a=n.complex(r,t);return t.dispose(),r.dispose(),a}if(!K(e.dtype,t))return _r.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),a=Ia(r,t);return r.dispose(),a}if("int32"===t)return n.int(e);if("bool"===t){const t=hs(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function yl(e,t){return _r.makeTensorFromDataId(e.dataId,t,e.dtype)}function bl(e,t,n){const r=(t-e)/(n-1),a=ie(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return uo(a,"float32")}function wl(e,t,n){const r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((t=>{const s=[...a];s[n]=t;const i=go(e,r,s);return r[n]+=t,i}))}function xl(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ka(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r.toTensor()}function vl(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=j(n,i*r),l=j("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));const i=t*r,c=u.subarray(i,i+r),d=l.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=s[e].value,d[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[Vr(u,c,n),Vr(l,c,"int32")]}function kl(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ka(e,"int32"),a=ka([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const Il={kernelName:be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,Vo(Ia(n,"float32"),-1))}}},Nl={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ji(Ia(n,"float32")),r=Co(Oi(hs(1),t));return Ki(ci(e,r))}}}},Cl={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(Oi(ji(Ia(n,"float32")),1));return ci(e,t)}}}},Sl={kernelName:ve,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{let t=e;const r=pi(n.shape,a);return r.length>0&&(t=Mi(t,r)),Ns(t,n.shape)},b:()=>{let t=e;const n=pi(r.shape,a);return n.length>0&&(t=Mi(t,n)),Ns(t,r.shape)}}}},El={kernelName:ke,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Tl={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(n)}}},Al={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qi(n)}}},_l={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,Co(Oi(hs(1),ji(Ia(n,"float32")))))}}},$l={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(ms(hs(1),ji(Ia(n,"float32"))));return ci(e,t)}}}},Rl={kernelName:Ae,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{const t=ms(ji(n),ji(r));let s=$i(e,ci(r,t));const i=pi(n.shape,a);return i.length>0&&(s=Mi(s,i)),Ns(s,n.shape)},b:()=>{const t=ms(ji(n),ji(r));let s=Ki($i(e,ci(n,t)));const i=pi(r.shape,a);return i.length>0&&(s=Mi(s,i)),Ns(s,r.shape)}}}},Dl={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,ms(ji(Ia(n,"float32")),1))}}},Fl={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,Oi(hs(1),ji(Ia(n,"float32"))))}}},Ol=zr({avgPool3dBackprop_:function(e,t,n,r,a=[1,1,1],s,i){const o=Lr(e,"dy","avgPool3dBackprop"),u=Lr(t,"input","avgPool3dBackprop");let l=o,c=u,d=!1;4===u.rank&&(d=!0,l=Ns(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Ns(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D(5===l.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+".")),D(5===c.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+".")),D(Ps(r,a),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),null!=i&&D(z(s),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={dy:l,input:c},p={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:i},f=_r.runKernelFunc((e=>{const t=$s(c.shape,n,r,a,s,i);return e.avgPool3dBackprop(l,c,t)}),h,null,"AvgPool3DBackprop",p);return d?Ns(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Ml={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Ol(e,r,a,s,l,o,u)}}},Ll=zr({avgPoolBackprop_:function(e,t,n,r,a){const s=Lr(e,"dy","avgPoolBackprop"),i=Lr(t,"input","avgPoolBackprop");D(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Ns(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Ns(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(4===u.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+".")),D(4===o.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+"."));const c={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=_r.runKernelFunc((e=>{const t=_s(o.shape,n,r,1,a);return e.avgPoolBackprop(u,o,t)}),c,null,$e,d);return l?Ns(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Bl={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Ll(e,r,a,s,i)}}},zl={kernelName:De,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Zo(e,a,!1,!1),b:()=>Zo(e,r,!0,!1)}:s&&!i?{a:()=>Zo(a,e,!1,!0),b:()=>Zo(r,e,!1,!1)}:{a:()=>Zo(a,e,!0,!0),b:()=>Zo(e,r,!0,!0)}:{a:()=>Zo(e,a,!1,!0),b:()=>Zo(r,e,!0,!1)}}},Pl=zr({spaceToBatchND_:function(e,t,n){const r=Lr(e,"x","spaceToBatchND");D(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),D(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),D(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return _r.runKernelFunc((e=>e.spaceToBatchND(r,t,n)),a,null,kn,s)}}),Wl={kernelName:Fe,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Pl(e,r,a)}}},Vl={kernelName:Oe,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Mi(e,o,!0)}}},Ul={kernelName:Me,gradFunc:e=>({x:()=>e.clone()})},Hl={kernelName:Le,gradFunc:e=>({x:()=>Qi(e)})},Gl={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Fo(Bi(Ai(r,a),xu(r,s)),e,Qi(e))}}},jl={kernelName:Pe,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=H(a,t[0].shape)[0],i=r.map((e=>e[s]));return No(e,i,s).map((e=>()=>e))}},ql={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return D(zs(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>si(r.shape,e,a,i,o,u),filter:()=>Po(r,e,a.shape,i,o,u)}}},Kl={kernelName:Ue,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>ri(e,a,s,i,o,1,u),filter:()=>Po(e,r,a.shape,s,i,o,u)}}},Xl=zr({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ns(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+".")),D(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+".")),D(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),D(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),D(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return _r.runKernelFunc((e=>{const t=Ds(s.shape,n,r,1,a);return e.conv3dDerFilter(s,i,t)}),o,null,Ge,u)}}),Yl=zr({conv3DBackpropInput_:function(e,t,n,r,a){D(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ns(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];D(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+".")),D(5===i.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank)),D(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),D(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),D(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=_r.runKernelFunc((e=>{const t=Ds(s,n.shape,r,1,a);return e.conv3dDerInput(i,n,t)}),c,null,je,d);return o?Ns(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Zl={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;D(zs(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Yl(i.shape,e,o,a,s),filter:()=>Xl(i,e,o.shape,a,s)}}},Jl=zr({sin_:function(e){const t=Lr(e,"x","sin"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.sin(t);return n([t]),r}),n,null,mn)}}),Ql={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(Ki(Jl(Ia(n,"float32"))),e)}}},ec=zr({sinh_:function(e){const t=Lr(e,"x","sinh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.sinh(t);return n([t]),r}),n,null,gn)}}),tc={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(ec(Ia(n,"float32")),e)}}},nc=zr({cumsum_:function(e,t=0,n=!1,r=!1){const a=Lr(e,"x","cumsum"),s={x:a},i={axis:t,exclusive:n,reverse:r};return _r.runKernelFunc(((e,s)=>{const i=vs([t],a.rank);let o=a;null!=i&&(o=Cs(a,i));const u=Is(1,a.rank)[0];let l=e.cumsum(o,u,n,r);if(s([a]),null!=i){const e=ks(i);l=Cs(l,e)}return l}),s,null,Xe,i)}}),rc={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=vs([a],r.rank);let n=nc(e,a,s,!i);return null!=t&&(n=Cs(n,t)),n}}}},ac={kernelName:Je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;D(zs(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return D(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),D(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),D(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),D(Ps(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&D(z(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Xo(u.shape,e,l,a,s,r,i),filter:()=>Ko(u,e,l.shape,a,s,r,i)}}},sc={kernelName:tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>_r.runKernel(nt,s,n),filter:()=>_r.runKernel(rt,i,n)}}},ic={kernelName:at,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{const t=ci(e,Ia(r,"float32")),s=pi(n.shape,a);return s.length>0?Ns(Mi(t,s),n.shape):t},b:()=>{let t=$i(e,Ia(n,"float32"));const s=pi(r.shape,a);s.length>0&&(t=Ns(Mi(t,s),r.shape));const i=ji(r);return Ki(ci(t,Ia(i,"float32")))}}}},oc={kernelName:st,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),a={dy:e,y:n};return{x:()=>_r.runKernelFunc(r,a,null,"EluGrad")}}},uc={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$i(gi(Ki(ji(n))),2/Math.sqrt(Math.PI));return{x:()=>$i(e,r)}}},lc={kernelName:ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,n)}}},cc={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,gi(n))}}},dc={kernelName:pt,gradFunc:e=>({x:()=>Qi(e)})},hc={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{const t=ci(e,Ia(r,"float32")),s=pi(n.shape,a);return s.length>0?Ns(Mi(t,s),n.shape):t},b:()=>{let t=$i(e,Ia(n,"float32"));const s=pi(r.shape,a);s.length>0&&(t=Ns(Mi(t,s),r.shape));const i=ji(r);return Ki(ci(t,Ia(i,"float32")))}}}},pc=zr({rsqrt_:function(e){const t=Lr(e,"x","rsqrt"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.rsqrt(t);return n([t]),r}),n,null,cn)}}),fc={kernelName:mt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?hs(1):o,l=pi(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=Oi(a,s),h=$i(e,u),p=pc(ms(i,hs(r))),f=$i($i($i(p,p),p),hs(-.5));return{x:()=>1===s.rank?Ns($i($i(e,bi(Ns(p,[1,1,1,s.shape[0]]),c)),u),a.shape):Ns($i($i(e,p),u),a.shape),mean:()=>{let e=$i($i(p,hs(-1)),h);return 1===s.rank&&(e=Mi(e,l)),Ns(e,s.shape)},variance:()=>{let e=$i($i(f,d),h);return 1===s.rank&&(e=Mi(e,l)),Ns(e,s.shape)},scale:()=>{const t=$i(d,p);let n=$i(e,t);return 1===s.rank&&(n=Mi(n,l)),Ns(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Mi(t,l)),Ns(t,s.shape)}}}},mc=zr({unsortedSegmentSum_:function(e,t,n){const r=Lr(e,"x","unsortedSegmentSum"),a=Lr(t,"segmentIds","unsortedSegmentSum","int32");D(z(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return _r.runKernelFunc(((e,t)=>{const s=e.unsortedSegmentSum(r,a,n);return t([a]),s}),s,null,On,i)}}),gc={kernelName:gt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=H(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=yc(0,u),h=yc(u+1,u+1+c),p=bc([o,[n],l]),f=Ns(e,p),m=Ns(a,[n]),g=bc([[u],d,h]),y=Cs(f,g);let b=mc(y,m,r.shape[i]);const w=ks(g);return b=Cs(b,w),b},indices:()=>a}}};function yc(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function bc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const wc={kernelName:wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Qi(n),b:()=>Qi(r)}}},xc={kernelName:xt,gradFunc:e=>({x:()=>Ia(e,"float32")})},vc={kernelName:It,gradFunc:e=>({x:()=>Qi(e)})},kc={kernelName:Nt,gradFunc:e=>({x:()=>Qi(e)})},Ic={kernelName:Ct,gradFunc:e=>({x:()=>Qi(e)})},Nc={kernelName:At,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,ms(n,1))}}},Cc={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,Ia(n,"float32"))}}},Sc={kernelName:Rt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=gi(r);return Oi(e,$i(Mi(e,a,!0),t))}}}},Ec=zr({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return _r.runKernelFunc((o=>o.LRNGrad(n,e,t,r,a,s,i)),o,null,"LRNBackprop",u)}}),Tc={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Ec(r,a,e,s,i,o,u)}}};function Ac(e,t,n,r){return t.rank<n.rank&&(t=Ns(t,ws(t.shape,r))),e.rank<n.rank&&(e=Ns(e,ws(e.shape,r))),{x:()=>$i(e,Ia(mi(n,t),e.dtype))}}const _c={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Ac(e,t[1],s,H(a,s.shape));return{x:()=>i.x()}}},$c=zr({less_:function(e,t){let n=Lr(e,"a","less"),r=Lr(t,"b","less");[n,r]=Ir(n,r),fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.less(n,r)),a,null,St)}}),Rc={kernelName:Ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$i(e,Ia(Ai(n,r),"float32")),b:()=>$i(e,Ia($c(n,r),"float32"))}}},Dc=zr({maxPool3dBackprop_:function(e,t,n,r,a,s=[1,1,1],i,o){const u=Lr(e,"dy","maxPool3dBackprop"),l=Lr(t,"input","maxPool3dBackprop"),c=Lr(n,"output","maxPool3dBackprop");let d=u,h=l,p=c,f=!1;4===l.rank&&(f=!0,d=Ns(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Ns(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Ns(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D(5===d.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+d.rank+".")),D(5===h.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+h.rank+".")),D(5===p.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+".")),D(Ps(a,s),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`)),null!=o&&D(z(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:d,input:h,output:p},g={filterSize:r,strides:a,dilations:s,pad:i,dimRoundingMode:o},y=_r.runKernelFunc((e=>{const t=$s(h.shape,r,a,s,i,o);return e.maxPool3dBackprop(d,h,p,t)}),m,null,"MaxPool3DBackprop",g);return f?Ns(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Fc={kernelName:Lt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Dc(e,r,a,s,i,c,u,l)}}},Oc=zr({maxPoolBackprop_:function(e,t,n,r,a,s,i){const o=Lr(e,"dy","maxPoolBackprop"),u=Lr(t,"input","maxPoolBackprop"),l=Lr(n,"output","maxPoolBackprop");D(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),D(4===o.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+".")),D(4===u.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+".")),null!=i&&D(z(s),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return _r.runKernelFunc((e=>{const t=_s(u.shape,r,a,1,s,i);return e.maxPoolBackprop(o,u,l,t)}),c,null,Mt,d)}}),Mc={kernelName:Ot,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Oc(e,r,a,s,i,o)}}},Lc={kernelName:Pt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Ac(e,i,s,H(a,s.shape));return{x:()=>o.x()}}},Bc={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$i(e,Ia(xu(n,r),"float32")),b:()=>$i(e,Ia(Ti(n,r),"float32"))}}},zc={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>go(e,s,r.shape)}}},Pc={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{const t=pi(n.shape,a);return t.length>0?Ns(Mi(e,t),n.shape):e},b:()=>{const t=$i(e,Ki(vi(ci(n,r)))),s=pi(r.shape,a);return s.length>0?Ns(Mi(t,s),r.shape):t}}}},Wc={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{const t=$i(e,Ia(r,"float32")),s=pi(n.shape,a);return s.length>0?Ns(Mi(t,s),n.shape):t},b:()=>{const t=$i(e,Ia(n,"float32")),s=pi(r.shape,a);return s.length>0?Ns(Mi(t,s),r.shape):t}}}},Vc={kernelName:Ht,gradFunc:e=>({x:()=>Ki(e)})},Uc={kernelName:Yt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Wi(n.shape,"float32")}}},Hc={kernelName:Xt,gradFunc:e=>({x:()=>Qi(e)})},Gc={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>go(e,s,r.shape)}}},jc={kernelName:Jt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=fi(s.shape,i.shape);return{a:()=>{const t=Ia(i,"float32");let n=$i(e,$i(t,ku(s,Oi(t,hs(1)))));const r=pi(s.shape,o);return r.length>0&&(n=Mi(n,r)),Ns(n,s.shape)},b:()=>{const t=Ti(s,0),n=Fo(t,Di(s),Qi(s));let r=$i(e,$i(a,n));const u=pi(i.shape,o);return u.length>0&&(r=Mi(r,u)),Ns(r,i.shape)}}}},qc={kernelName:Qt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Ti(n,0);return{x:()=>Fo(a,e,$i(e,r)),alpha:()=>{let t=Fo(a,Qi(e),$i(e,n));const s=pi(r.shape,e.shape);return s.length>0&&(t=Mi(t,s)),Ns(t,r.shape)}}}},Kc={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,Ki(ji(n)))}}},Xc={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$i(xu(n,6),Vo(n));return{x:()=>$i(e,Ia(r,"float32"))}}},Yc={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,Ia(Vo(n),"float32"))}}},Zc={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ns(e,n.shape)}}},Jc={kernelName:sn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeBilinearBackprop(e,r,a)},s={images:r};return{images:()=>_r.runKernelFunc(a,s,null,"ResizeBilinearGrad",n)}}},Qc={kernelName:an,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeNearestNeighborBackprop(e,r,a)},s={images:r};return{images:()=>_r.runKernelFunc(a,s,null,"ResizeNearestNeighborGrad",n)}}},ed={kernelName:un,gradFunc:(e,t,n)=>{const{dims:r}=n,a=H(r,e.shape);return{x:()=>ho(e,a)}}},td={kernelName:ln,gradFunc:e=>({x:()=>Qi(e)})},nd={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ki(ci(e,$i(ku(n,1.5),2)))}}},rd=zr({logicalNot_:function(e){const t=Lr(e,"x","logicalNot","bool"),n={x:t};return _r.runKernelFunc((e=>e.logicalNot(t)),n,null,$t)}}),ad={kernelName:hn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ia(Qi(n),"float32"),t:()=>$i(e,Ia(n,e.dtype)),e:()=>$i(e,Ia(rd(n),e.dtype))}}},sd={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ti(n,hs(0)),r=hs(Ju),a=hs(Qu),s=$i(e,a),i=$i($i(e,r),gi(Ia(n,"float32")));return Fo(t,s,i)}}}},id={kernelName:bn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,$i(n,Oi(hs(1),n)))}}},od={kernelName:yn,gradFunc:e=>({x:()=>Qi(e)})},ud=zr({cos_:function(e){const t=Lr(e,"x","cos"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.cos(t);return n([t]),r}),n,null,qe)}}),ld={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(ud(Ia(n,"float32")),e)}}},cd=zr({cosh_:function(e){const t=Lr(e,"x","cosh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.cosh(t);return n([t]),r}),n,null,Ke)}}),dd={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(cd(Ia(n,"float32")),e)}}},hd={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=es(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>to(e,l)}}},pd={kernelName:Nn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=$i(e,r);return{logits:()=>Oi(s,$i(Mi(s,[a],!0),r))}}},fd={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,mo(n))}}},md=zr({batchToSpaceND_:function(e,t,n){const r=Lr(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));D(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),D(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),D(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return _r.runKernelFunc((e=>e.batchToSpaceND(r,t,n)),s,null,Fe,i)}}),gd={kernelName:kn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>md(e,r,a)}}},yd={kernelName:In,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Js(e,r)}}},bd=[Il,Nl,Cl,Sl,El,Tl,Al,_l,$l,Rl,Dl,Fl,Ml,Bl,zl,Wl,Vl,Ul,Hl,Gl,jl,Kl,ql,Zl,Ql,tc,rc,ac,sc,ic,oc,uc,lc,cc,hc,dc,fc,gc,wc,xc,vc,kc,Ic,Nc,Cc,Sc,Tc,_c,_c,Rc,Fc,Mc,Lc,Bc,zc,Pc,Wc,Vc,Uc,Hc,Gc,Gc,jc,qc,Kc,Xc,Yc,Zc,Jc,Qc,ed,td,nd,ad,sd,id,od,ld,dd,hd,pd,fd,gd,gd,yd,yd,{kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,$i(Co(Ia(n,"float32")),2))}}},{kernelName:Cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=hs(2);return{a:()=>$i(e,$i(a,Oi(n,r))),b:()=>$i(e,$i(a,Oi(r,n)))}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(e,$i(Ia(n,"float32"),2))}}},{kernelName:Ln,gradFunc:e=>({x:()=>Qi(e)})},{kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fi(n.shape,r.shape);return{a:()=>{let t=e;const r=pi(n.shape,a);return r.length>0&&(t=Mi(t,r)),Ns(t,n.shape)},b:()=>{let t=e;const n=pi(r.shape,a);return n.length>0&&(t=Mi(t,n)),Ns(Ki(t),r.shape)}}}},{kernelName:vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;H(s,r.shape).forEach((e=>{a[e]=1}));const i=Ns(e,a),o=$i(i,Vi(r.shape,"float32"));return{x:()=>o}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ci(e,ji(ud(n)))}}},{kernelName:_n,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$i(Oi(hs(1),ji(n)),e)}}},{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Qi(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=ms(t,go(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=ms(t,go(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=ms(t,go(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=ms(t,go(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Rn,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=ks(a);return{x:()=>Cs(e,s)}}},{kernelName:Fn,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Eo(e,a)}}},{kernelName:On,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=_i(t,Qi(t)),r=Ei(e,n);let a=Ai(t,hs(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=yi(a,e+1);a=Bi(a,Vi(r.shape,"bool"));const i=Qi(r);return Fo(a,r,i)}(e,n)}}},{kernelName:Mn,gradFunc:e=>({x:()=>Qi(e)})}];for(const e of bd)Xn(e);pr.prototype.abs=function(){return this.throwIfDisposed(),fs(this)};const wd=zr({acos_:function(e){const t=Lr(e,"x","acos"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.acos(t);return n([t]),r}),n,null,we)}});pr.prototype.acos=function(){return this.throwIfDisposed(),wd(this)};const xd=zr({acosh_:function(e){const t=Lr(e,"x","acosh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.acosh(t);return n([t]),r}),n,null,xe)}});pr.prototype.acosh=function(){return this.throwIfDisposed(),xd(this)};const vd=zr({mod_:function(e,t){let n=Lr(e,"a","mod"),r=Lr(t,"b","mod");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.mod(n,r);return t([n,r]),a}),a,null,"Mod")}}),kd=zr({addStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","addStrict"),r=Lr(t,"b","addStrict");return F(n.shape,r.shape,"Error in addStrict: "),ms(n,r)}}),Id=zr({divStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","div"),r=Lr(t,"b","div");return F(n.shape,r.shape,"Error in divideStrict: "),ci(n,r)}}),Nd=zr({maximumStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","maximumStrict"),r=Lr(t,"b","maximumStrict");return F(n.shape,r.shape,"Error in maximumStrict: "),_i(n,r)}}),Cd=zr({minimumStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","minimumStrict"),r=Lr(t,"b","minimumStrict");return F(n.shape,r.shape,"Error in minimumStrict: "),Gi(n,r)}}),Sd=zr({modStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","modStrict"),r=Lr(t,"b","modStrict");return F(n.shape,r.shape,"Error in modStrict: "),vd(n,r)}}),Ed=zr({mulStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","mul"),r=Lr(t,"b","mul");return F(n.shape,r.shape,"Error in multiplyStrict: "),$i(n,r)}}),Td=zr({powStrict_:function(e,t){return as("strict variants of ops have been deprecated and will be removed in future"),F(e.shape,t.shape,"Error in powStrict: "),ku(e,t)}}),Ad=zr({squaredDifferenceStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","squaredDifferenceStrict"),r=Lr(t,"b","squaredDifferenceStrict");return F(n.shape,r.shape,"Error in squaredDifferenceStrict: "),_u(n,r)}}),_d=zr({subStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","subStrict"),r=Lr(t,"b","subStrict");return F(n.shape,r.shape,"Error in subStrict: "),Oi(n,r)}});pr.prototype.addStrict=function(e){return this.throwIfDisposed(),kd(this,e)},pr.prototype.add=function(e){return this.throwIfDisposed(),ms(this,e)},pr.prototype.all=function(e,t){return this.throwIfDisposed(),Ss(this,e,t)},pr.prototype.any=function(e,t){return this.throwIfDisposed(),Es(this,e,t)},pr.prototype.argMax=function(e){return this.throwIfDisposed(),Ts(this,e)};const $d=zr({argMin_:function(e,t=0){let n=Lr(e,"x","argMin");const r={x:n},a={axis:t};return _r.runKernelFunc(((e,r)=>{r([n]),null==t&&(t=0);let a=H(t,n.shape);const s=vs(a,n.rank);return null!=s&&(n=Cs(n,s),a=Is(a.length,n.rank)),e.argMin(n,a[0])}),r,null,Ne,a)}});pr.prototype.argMin=function(e){return this.throwIfDisposed(),$d(this,e)},pr.prototype.asScalar=function(){return this.throwIfDisposed(),D(1===this.size,(()=>"The array must have only 1 element.")),Ns(this,[])},pr.prototype.asType=function(e){return this.throwIfDisposed(),Ia(this,e)},pr.prototype.as1D=function(){return this.throwIfDisposed(),Ns(this,[this.size])},pr.prototype.as2D=function(e,t){return this.throwIfDisposed(),Ns(this,[e,t])},pr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ns(this,[e,t,n])},pr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ns(this,[e,t,n,r])},pr.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ns(this,[e,t,n,r,a])};const Rd=zr({asin_:function(e){const t=Lr(e,"x","asin"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.asin(t);return n([t]),r}),n,null,Ce)}});pr.prototype.asin=function(){return this.throwIfDisposed(),Rd(this)};const Dd=zr({asinh_:function(e){const t=Lr(e,"x","asinh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.asinh(t);return n([t]),r}),n,null,Se)}});pr.prototype.asinh=function(){return this.throwIfDisposed(),Dd(this)};const Fd=zr({atan_:function(e){const t=Lr(e,"x","atan"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.atan(t);return n([t]),r}),n,null,Ee)}});pr.prototype.atan=function(){return this.throwIfDisposed(),Fd(this)};const Od=zr({atan2_:function(e,t){let n=Lr(e,"a","atan2"),r=Lr(t,"b","atan2");[n,r]=Ir(n,r);const a={a:n,b:r};return _r.runKernelFunc(((e,t)=>{const a=e.atan2(n,r);return t([n,r]),a}),a,null,Ae)}});pr.prototype.atan2=function(e){return this.throwIfDisposed(),Od(this,e)};const Md=zr({atanh_:function(e){const t=Lr(e,"x","atanh"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.atanh(t);return n([t]),r}),n,null,Te)}});pr.prototype.atanh=function(){return this.throwIfDisposed(),Md(this)},pr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Vs(this,e,t,n,r)},pr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),md(this,e,t)},pr.prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Gs(this,e,t,n,r,a)},pr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Do(this,e)},pr.prototype.cast=function(e){return this.throwIfDisposed(),Ia(this,e)};const Ld=zr({ceil_:function(e){const t=Lr(e,"x","ceil"),n={x:t};return _r.runKernelFunc((e=>e.ceil(t)),n,null,Le)}});pr.prototype.ceil=function(){return this.throwIfDisposed(),Ld(this)},pr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Xs(this,e,t)},pr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof pr&&(e=[e]),Js([this,...e],t)},pr.prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ai(this,e,t,n,r,a,s)},pr.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),ii(this,e,t,n,r,a)},pr.prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ri(this,e,t,n,r,a,s)},pr.prototype.cos=function(){return this.throwIfDisposed(),ud(this)},pr.prototype.cosh=function(){return this.throwIfDisposed(),cd(this)},pr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),nc(this,e,t,n)};const Bd=zr({depthToSpace_:function(e,t,n="NHWC"){const r=Lr(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];D(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),D(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),D(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return _r.runKernelFunc((e=>e.depthToSpace(r,t,n)),o,null,Ze,u)}});pr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Bd(this,e,t)},pr.prototype.depthwiseConv2D=function(e,t,n,r,a,s){return as("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ui(this,e,t,n,r,a,s)},pr.prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ui(this,e,t,n,r,a,s)};const zd=zr({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Lr(e,"x","dilation2d"),o=Lr(t,"filter","dilation2d");D(3===i.rank||4===i.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+".")),D(3===o.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+".")),D("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s));let u=i,l=!1;3===i.rank&&(u=Ns(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},d={strides:n,pad:r,dilations:a},h=_r.runKernel(tt,c,d);return l?Ns(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});pr.prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),zd(this,e,t,n,r,a)};const Pd=zr({divNoNan_:function(e,t){let n=Lr(e,"a","div"),r=Lr(t,"b","div");[n,r]=Ir(n,r);const a=ci(n,r),s=Qi(a),i=mi(r,s);return Fo(i,s,a)}});pr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Pd(this,e)},pr.prototype.divStrict=function(e){return this.throwIfDisposed(),Id(this,e)},pr.prototype.div=function(e){return this.throwIfDisposed(),ci(this,e)};const Wd=zr({dot_:function(e,t){const n=Lr(e,"t1","dot"),r=Lr(t,"t2","dot");D(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(D(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ns(n,[1,-1]),t=Ns(r,[-1,1]),a=Zo(e,t);return Ns(a,[])}if(1===n.rank&&2===r.rank){const e=Ns(n,[1,-1]),t=Ns(r,[r.shape[0],r.shape[1]]),a=Zo(e,t);return Ns(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ns(r,[-1,1]),t=Zo(n,e);return Ns(t,[t.size])}{const e=Ns(r,[r.shape[0],r.shape[1]]);return Zo(n,e)}}});pr.prototype.dot=function(e){return this.throwIfDisposed(),Wd(this,e)},pr.prototype.elu=function(){return this.throwIfDisposed(),di(this)};const Vd=zr({equalStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","equalStrict"),r=Lr(t,"b","equalStrict");return F(n.shape,r.shape,"Error in equalStrict: "),mi(n,r)}}),Ud=zr({greaterEqualStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","greaterEqualStrict"),r=Lr(t,"b","greaterEqualStrict");return F(n.shape,r.shape,"Error in greaterEqualStrict: "),Ai(n,r)}}),Hd=zr({greaterStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","greaterStrict"),r=Lr(t,"b","greaterStrict");return F(n.shape,r.shape,"Error in greaterStrict: "),Ti(n,r)}}),Gd=zr({lessEqualStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","lessEqualStrict"),r=Lr(t,"b","lessEqualStrict");return F(n.shape,r.shape,"Error in lessEqualStrict: "),xu(n,r)}}),jd=zr({lessStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","lessStrict"),r=Lr(t,"b","lessStrict");return F(n.shape,r.shape,"Error in lessStrict: "),$c(n,r)}}),qd=zr({notEqualStrict_:function(e,t){as("strict variants of ops have been deprecated and will be removed in future");const n=Lr(e,"a","notEqualStrict"),r=Lr(t,"b","notEqualStrict");return F(n.shape,r.shape,"Error in notEqualStrict: "),Xi(n,r)}});pr.prototype.equalStrict=function(e){return this.throwIfDisposed(),Vd(this,e)},pr.prototype.equal=function(e){return this.throwIfDisposed(),mi(this,e)};const Kd=zr({erf_:function(e){let t=Lr(e,"x","erf");D("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ia(t,"float32"));const n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.erf(t);return n([t]),r}),n,null,it)}});pr.prototype.erf=function(){return this.throwIfDisposed(),Kd(this)},pr.prototype.exp=function(){return this.throwIfDisposed(),gi(this)},pr.prototype.expandDims=function(e){return this.throwIfDisposed(),yi(this,e)};const Xd=zr({expm1_:function(e){const t=Lr(e,"x","expm1"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.expm1(t);return n([t]),r}),n,null,lt)}});pr.prototype.expm1=function(){return this.throwIfDisposed(),Xd(this)},pr.prototype.fft=function(){return this.throwIfDisposed(),Mo(this)},pr.prototype.flatten=function(){return this.throwIfDisposed(),Ns(this,[this.size])},pr.prototype.floor=function(){return this.throwIfDisposed(),vi(this)},pr.prototype.floorDiv=function(e){return this.throwIfDisposed(),li(this,e)},pr.prototype.gather=function(e,t){return this.throwIfDisposed(),Ei(this,e,t)},pr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Ud(this,e)},pr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ai(this,e)},pr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Hd(this,e)},pr.prototype.greater=function(e){return this.throwIfDisposed(),Ti(this,e)},pr.prototype.ifft=function(){return this.throwIfDisposed(),Bo(this)},pr.prototype.irfft=function(){return this.throwIfDisposed(),zo(this)};const Yd=zr({isFinite_:function(e){const t=Lr(e,"x","isFinite"),n={x:t};return _r.runKernelFunc((e=>e.isFinite(t)),n,null,It)}});pr.prototype.isFinite=function(){return this.throwIfDisposed(),Yd(this)};const Zd=zr({isInf_:function(e){const t=Lr(e,"x","isInf"),n={x:t};return _r.runKernelFunc((e=>e.isInf(t)),n,null,Nt)}});pr.prototype.isInf=function(){return this.throwIfDisposed(),Zd(this)};const Jd=zr({isNaN_:function(e){const t=Lr(e,"x","isNaN"),n={x:t};return _r.runKernelFunc((e=>e.isNaN(t)),n,null,Ct)}});pr.prototype.isNaN=function(){return this.throwIfDisposed(),Jd(this)},pr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ri(this,e)},pr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Gd(this,e)},pr.prototype.lessEqual=function(e){return this.throwIfDisposed(),xu(this,e)},pr.prototype.lessStrict=function(e){return this.throwIfDisposed(),jd(this,e)},pr.prototype.less=function(e){return this.throwIfDisposed(),$c(this,e)};const Qd=zr({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Lr(e,"x","localResponseNormalization");D(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),D(z(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ns(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=_r.runKernelFunc(((e,s)=>{const o=e.localResponseNormalization4D(i,t,n,r,a);return s([i,o]),o}),u,null,"LRN",l);return o?Ns(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});pr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Qd(this,e,t,n,r)};const eh=zr({logSigmoid_:function(e){const t=Lr(e,"x","logSigmoid");return ds((e=>({value:Ki(ko(Ki(e))),gradFunc:t=>$i(t,mo(Ki(e)))})))(t)}});pr.prototype.logSigmoid=function(){return this.throwIfDisposed(),eh(this)},pr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Li(this,e)},pr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},pr.prototype.log=function(){return this.throwIfDisposed(),Di(this)},pr.prototype.log1p=function(){return this.throwIfDisposed(),$u(this)},pr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Bi(this,e)},pr.prototype.logicalNot=function(){return this.throwIfDisposed(),rd(this)};const th=zr({logicalOr_:function(e,t){const n=Lr(e,"a","logicalOr","bool"),r=Lr(t,"b","logicalOr","bool");fi(n.shape,r.shape);const a={a:n,b:r};return _r.runKernelFunc((e=>e.logicalOr(n,r)),a,null,"LogicalOr")}});pr.prototype.logicalOr=function(e){return this.throwIfDisposed(),th(this,e)};const nh=zr({logicalXor_:function(e,t){const n=Lr(e,"a","logicalXor","bool"),r=Lr(t,"b","logicalXor","bool");return fi(n.shape,r.shape),Bi(th(e,t),rd(Bi(e,t)))}});pr.prototype.logicalXor=function(e){return this.throwIfDisposed(),nh(this,e)},pr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Zo(this,e,t,n)},pr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),zi(this,e,t,n,r)},pr.prototype.max=function(e,t){return this.throwIfDisposed(),Fi(this,e,t)},pr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Nd(this,e)},pr.prototype.maximum=function(e){return this.throwIfDisposed(),_i(this,e)},pr.prototype.mean=function(e,t){return this.throwIfDisposed(),Ui(this,e,t)},pr.prototype.min=function(e,t){return this.throwIfDisposed(),Hi(this,e,t)},pr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Cd(this,e)},pr.prototype.minimum=function(e){return this.throwIfDisposed(),Gi(this,e)};const rh=zr({mirrorPad_:function(e,t,n){D("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Lr(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)D(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),D(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape `+r.shape));const s={paddings:t,mode:n},i={x:r};return _r.runKernel(Vt,i,s)}});pr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},pr.prototype.modStrict=function(e){return this.throwIfDisposed(),Sd(this,e)},pr.prototype.mod=function(e){return this.throwIfDisposed(),vd(this,e)},pr.prototype.mulStrict=function(e){return this.throwIfDisposed(),Ed(this,e)},pr.prototype.mul=function(e){return this.throwIfDisposed(),$i(this,e)},pr.prototype.neg=function(){return this.throwIfDisposed(),Ki(this)},pr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),Nu(this,e,t,n)},pr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),qd(this,e)},pr.prototype.notEqual=function(e){return this.throwIfDisposed(),Xi(this,e)},pr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yi(this,e,t,n)},pr.prototype.onesLike=function(){return this.throwIfDisposed(),eo(this)},pr.prototype.pad=function(e,t){return this.throwIfDisposed(),to(this,e,t)};const ah=zr({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=Lr(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Ns(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Ps(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=_s(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const h=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,d),m=h?r:"valid",g=h?o:Pl(o,c,p),y=("avg"===n?()=>Vs(g,t,s,m):()=>zi(g,t,s,m))(),b=h?y:md(y,c,f);return u?Ns(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});pr.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),ah(this,e,t,n,r,a)},pr.prototype.powStrict=function(e){return this.throwIfDisposed(),Td(this,e)},pr.prototype.pow=function(e){return this.throwIfDisposed(),ku(this,e)},pr.prototype.prelu=function(e){return this.throwIfDisposed(),no(this,e)};const sh=zr({prod_:function(e,t=null,n=!1){let r=Lr(e,"x","prod");"bool"===r.dtype&&(r=Ia(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return _r.runKernelFunc((e=>{const a=H(t,r.shape),s=vs(a,r.rank);let i=a,o=r;null!=s&&(o=Cs(r,s),i=Is(i.length,r.rank));let u=e.prod(o,i);if(n){const e=ws(u.shape,a);u=Ns(u,e)}return u}),a,null,"Prod",s)}});pr.prototype.prod=function(e,t){return this.throwIfDisposed(),sh(this,e,t)};const ih=zr({reciprocal_:function(e){const t=Lr(e,"x","reciprocal"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.reciprocal(t);return n([t]),r}),n,null,tn)}});pr.prototype.reciprocal=function(){return this.throwIfDisposed(),ih(this)},pr.prototype.relu=function(){return this.throwIfDisposed(),co(this)},pr.prototype.relu6=function(){return this.throwIfDisposed(),Wo(this)},pr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ns(this,e.shape)},pr.prototype.reshape=function(e){return this.throwIfDisposed(),Ns(this,e)},pr.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},pr.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),wu(this,e,t)},pr.prototype.reverse=function(e){return this.throwIfDisposed(),ho(this,e)},pr.prototype.rfft=function(){return this.throwIfDisposed(),Lo(this)};const oh=zr({round_:function(e){const t=Lr(e,"x","round"),n={x:t};return _r.runKernelFunc((e=>e.round(t)),n,null,ln)}});pr.prototype.round=function(){return this.throwIfDisposed(),oh(this)},pr.prototype.rsqrt=function(){return this.throwIfDisposed(),pc(this)},pr.prototype.selu=function(){return this.throwIfDisposed(),po(this)},pr.prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),fo(this,e,t,n,r,a,s)},pr.prototype.sigmoid=function(){return this.throwIfDisposed(),mo(this)};const uh=zr({sign_:function(e){const t=Lr(e,"x","sign"),n={x:t};return _r.runKernelFunc((e=>e.sign(t)),n,null,yn)}});pr.prototype.sign=function(){return this.throwIfDisposed(),uh(this)},pr.prototype.sin=function(){return this.throwIfDisposed(),Jl(this)},pr.prototype.sinh=function(){return this.throwIfDisposed(),ec(this)},pr.prototype.slice=function(e,t){return this.throwIfDisposed(),go(this,e,t)},pr.prototype.softmax=function(e){return this.throwIfDisposed(),vo(this,e)},pr.prototype.softplus=function(){return this.throwIfDisposed(),ko(this)},pr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Pl(this,e,t)},pr.prototype.split=function(e,t){return this.throwIfDisposed(),No(this,e,t)},pr.prototype.sqrt=function(){return this.throwIfDisposed(),Co(this)},pr.prototype.square=function(){return this.throwIfDisposed(),ji(this)},pr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),_u(this,e)},pr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Ad(this,e)},pr.prototype.squeeze=function(e){return this.throwIfDisposed(),So(this,e)},pr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof pr?[this,e]:[this,...e];return Eo(n,t)},pr.prototype.step=function(e){return this.throwIfDisposed(),Vo(this,e)};const lh=zr({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){let l=Lr(e,"x","stridedSlice");const c={x:l},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return _r.runKernelFunc((e=>{null==r&&(r=new Array(t.length));const c=Wa(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=l.rank-t.length,h=Wa(o),p=l.shape.slice();h.forEach((e=>{t[e]=0,n[e]=1,p.splice(e,0,1)})),l=Ns(l,p);const{begin:f,end:m,strides:g}=ja(l.shape,c,d,t,n,r,a,s,i);t=f,n=m,r=g;const y=Wa(u);y.forEach((e=>{n[e]=t[e]+1,r[e]=1}));const b=Va(t,n,r),w=b.filter(((e,t)=>-1===y.indexOf(t)));if(r.every((e=>1===e)))return Ns(go(l,t,b),w);const x=e.stridedSlice(l,t,n,r);return Ns(x,w)}),c,null,Tn,d)}});pr.prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),lh(this,e,t,n,r,a,s,i,o)},pr.prototype.subStrict=function(e){return this.throwIfDisposed(),_d(this,e)},pr.prototype.sub=function(e){return this.throwIfDisposed(),Oi(this,e)},pr.prototype.sum=function(e,t){return this.throwIfDisposed(),Mi(this,e,t)};const ch=zr({tan_:function(e){const t=Lr(e,"x","tan"),n={x:t};return _r.runKernelFunc(((e,n)=>{const r=e.tan(t);return n([t]),r}),n,null,An)}});pr.prototype.tan=function(){return this.throwIfDisposed(),ch(this)},pr.prototype.tanh=function(){return this.throwIfDisposed(),To(this)},pr.prototype.tile=function(e){return this.throwIfDisposed(),bi(this,e)},pr.prototype.toBool=function(){return this.throwIfDisposed(),Ia(this,"bool")},pr.prototype.toFloat=function(){return this.throwIfDisposed(),Ia(this,"float32")},pr.prototype.toInt=function(){return this.throwIfDisposed(),Ia(this,"int32")};const dh=zr({topk_:function(e,t=1,n=!0){const r=Lr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const s={x:r},i={k:t,sorted:n},[o,u]=_r.runKernelFunc((e=>e.topk(r,t,n)),s,null,"TopK",i);return{values:o,indices:u}}});pr.prototype.topk=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},pr.prototype.transpose=function(e){return this.throwIfDisposed(),Cs(this,e)};const hh=zr({unique_:function(e,t=0){const n=Lr(e,"x","unique",null);D(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=_r.runKernel(Dn,r,a);return{values:s,indices:i}}});var ph,fh;let mh;pr.prototype.unique=function(e){return this.throwIfDisposed(),hh(this,e)},pr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),mc(this,e,t)},pr.prototype.unstack=function(e){return this.throwIfDisposed(),Ro(this,e)},pr.prototype.where=function(e,t){return this.throwIfDisposed(),Fo(e,this,t)},pr.prototype.zerosLike=function(){return this.throwIfDisposed(),Qi(this)},function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(ph||(ph={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu"}(fh||(fh={}));const gh={kernelName:Pn,backendName:"wasm",setupFunc:function(e){mh=e.wasm.cwrap(Pn,null,["number","array","number","number","array","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c}=r,d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id;let p=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);p=e.id}const f=null==o?0:n.dataIdMap.get(o.dataId).id,m=fh[c];if(null==m)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");const g=u?a.shape[2]:a.shape[1],y=l?s.shape[1]:s.shape[2],b=a.shape[0],w=n.makeOutput([b,g,y],a.dtype),x=n.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return mh(d,v,a.shape.length,h,k,s.shape.length,u,l,m,p,f,x),w}};function yh(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===L(s.shape)||t(a,i),s}}}const bh=yh(be);function wh(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,d=null!=n?n:o.dtype,h=fi(o.shape,u.shape),p=s.makeOutput(h,d);if(0===L(h))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(p.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,ph[o.dtype],g);if(t&&"float32"===o.dtype)return y(),p;const b=hi(o.shape,h),w=hi(u.shape,h),x=b.every(((e,t)=>e===t)),v=w.every(((e,t)=>e===t));if(x&&v)return y(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}const xh=wh(ve,!0);let vh;const kh={kernelName:ke,backendName:"wasm",setupFunc:function(e){vh=e.wasm.cwrap(ke,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===L(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return vh(s,a.length,ph[r.dtype],i),r}};function Ih(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const Nh={kernelName:xt,backendName:"wasm",kernelFunc:Ih};let Ch;function Sh(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=Ih({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return Ch(c,p,u.shape.length,ph[u.dtype],d,h,s.length),l}const Eh={kernelName:Rn,backendName:"wasm",kernelFunc:Sh,setupFunc:function(e){Ch=e.wasm.cwrap(Rn,null,["number","array","number","number","number","array","number"])}};function Th(e,t,n){const r=e.shape,a=e.shape.length,s=H(t,r);let i=s;const o=vs(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Is(i.length,a),u=Sh({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let Ah;const _h={kernelName:Ie,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:d}=Th(s,a,t);if(d){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const h=u.shape.slice(0,-1),p=t.makeOutput(h,"int32"),f=t.dataIdMap.get(p.dataId).id,m=L(p.shape),g=u.shape[c[0]];return Ah(o,ph[u.dtype],m,g,f),d&&t.disposeData(l.dataId),p},setupFunc:function(e){Ah=e.wasm.cwrap(Ie,null,["number","number","number","number","number"])}};let $h;const Rh={kernelName:_e,backendName:"wasm",setupFunc:function(e){$h=e.wasm.cwrap(_e,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=_s(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,w=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const x=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return $h(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,w,v),x}};function Dh(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=L(r.shape),i=U(a,s);return D(s===L(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),{dataId:r.dataId,shape:i,dtype:r.dtype}}const Fh={kernelName:rn,backendName:"wasm",kernelFunc:Dh};let Oh;const Mh={kernelName:De,backendName:"wasm",setupFunc:function(e){Oh=e.wasm.cwrap(De,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=L(f),y=L(m);D(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);D(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,d]:[y,d,p],x=Dh({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=Dh({inputs:{x:s},backend:n,attrs:{shape:w}}),k=n.dataIdMap.get(x.dataId).id,I=n.dataIdMap.get(v.dataId).id,N=i?x.shape[2]:x.shape[1],C=o?v.shape[1]:v.shape[2],S=Math.max(g,y),E=n.makeOutput([S,N,C],x.dtype),T=n.dataIdMap.get(E.dataId).id,A=new Uint8Array(new Int32Array(x.shape).buffer),_=new Uint8Array(new Int32Array(v.shape).buffer);return Oh(k,A,x.shape.length,I,_,v.shape.length,i,o,T),E.shape=b,E}};function Lh(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const Bh={kernelName:Me,backendName:"wasm",kernelFunc:Lh};let zh;const Ph={kernelName:Be,backendName:"wasm",setupFunc:function(e){zh=e.wasm.cwrap(Be,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return zh(o,s,i,l),u}},Wh={kernelName:Pe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=H(e.attrs.axis,t[0].shape)[0],a=Zs(t.map((e=>e.shape)),r),s=n.makeOutput(a,t[0].dtype);if(0===L(a))return s;const i=t.filter((e=>L(e.shape)>0));if(1===i.length)return i[0];Ys(i.map((e=>e.shape)),r);const o=L(i[0].shape.slice(0,r));let u=0;const l=i.map((e=>{const t=L(e.shape.slice(r));return u+=t,t})),c=i.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(s);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const r=l[n],a=e*r,s=c[n].subarray(a,a+r);d.set(s,t),t+=r}}return s}};let Vh;const Uh={kernelName:We,backendName:"wasm",setupFunc:function(e){Vh=e.wasm.cwrap(We,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:h}=n,p=Ws(h),f=Rs(a.shape,s.shape,u,l,c,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,w=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,C=f.inChannels,S=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+f.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(f.outShape,"float32"),A=r.dataIdMap.get(T.dataId).id;return Vh(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,w,x,E,v,k,I,N,C,S,A),T}};let Hh;const Gh={kernelName:Ue,backendName:"wasm",setupFunc:function(e){Hh=e.wasm.cwrap(Ue,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,d=Ws(u),h=Rs(c,s.shape,i,1,o,l,!1,d),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:w,outHeight:x,outWidth:v,strideHeight:k,strideWidth:I}=h,N=f-1-h.padInfo.top,C=m-1-h.padInfo.left,S="channelsLast"===h.dataFormat,E=ne(h.inShape),T=ne(a.shape),[A,_,$]=ne(s.shape),R=E[0],D=S?E[1]:E[2],F=S?E[2]:1,O=S?1:E[1],M=T[0],L=S?T[1]:T[2],B=S?T[2]:1,z=S?1:T[1],P=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(P.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return Hh(V,U,p,f,m,y,b,g,x,v,w,k,I,N,C,A,_,$,R,D,F,O,M,L,B,z,W),P}},jh=yh(qe);var qh;let Kh,Xh,Yh,Zh,Jh,Qh,ep,tp,np,rp,ap,sp,ip,op,up,lp,cp,dp,hp,pp,fp,mp,gp,yp,bp,wp,xp,vp,kp;function Ip(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}function Np(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=es(t,n,r),o=Ja(t.shape,s,i),u=a.typedArrayFromHeap(t),l=a.makeOutput(i,t.dtype),c=a.typedArrayFromHeap(l),d=ne(t.shape);if(o){const e=Qa(s,d);return c.set(u.subarray(e,e+L(i))),l}const h=t.shape.length;return 2===h?function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,d[0],c,s,i):3===h?function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,d[0],d[1],c,s,i):4===h?function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<h;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,d[0],d[1],d[2],c,s,i):function(e,t,n,r,a){const s=ka(a,t.dtype,n),i=ka(t.shape,t.dtype,e);for(let e=0;e<s.size;++e){const t=s.indexToLoc(e).map(((e,t)=>e+r[t]));n[e]=i.get(...t)}}(u,t,c,s,i),l}!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(qh||(qh={}));const Cp=[bh,xh,kh,_h,Rh,Mh,Bh,Ph,Wh,Uh,Gh,jh,{kernelName:Ye,backendName:"wasm",setupFunc:function(e){Kh=e.wasm.cwrap(Ye,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=Lh({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,w=t.makeOutput(p,"float32"),x=t.dataIdMap.get(w.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return Kh(g,y,b,c,v,d,h,qh[a],s,x),null!=f&&t.disposeData(f.dataId),w}},{kernelName:Xe,backendName:"wasm",setupFunc:function(e){Xh=e.wasm.cwrap(Xe,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;D("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=vs([s],u);let c=a;null!==l&&(c=Sh({inputs:{x:a},attrs:{perm:l},backend:n}));const d=Is(1,u)[0];xs("cumsum",[d],u);const h=n.makeOutput(c.shape,c.dtype),p=c.shape[d],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(h.dataId).id;Xh(f,i?1:0,o?1:0,p,m,ph[a.dtype]);let g=h;return null!==l&&(g=Sh({inputs:{x:h},attrs:{perm:ks(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(h.dataId)),g}},{kernelName:Ze,backendName:"wasm",setupFunc:function(e){Yh=e.wasm.cwrap(Ze,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;D(s>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+s));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],d=u*s,h=l*s,p=c/(s*s),f="NHWC"===i?[o,d,h,p]:[o,p,d,h],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(ne(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(ne(f)).buffer),x=t.dataIdMap.get(m.dataId).id;return Yh(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,w,f.length,x),m}},{kernelName:Je,backendName:"wasm",setupFunc:function(e){Zh=e.wasm.cwrap(Je,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,h=null==l?[1,1]:l,p=Rs(a.shape,s.shape,u,h,c,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,w=p.padInfo.left,x=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,N=p.inChannels,C=p.outChannels,S="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+p.dataFormat+"'. Please use 'channelsLast'.");const E=r.makeOutput(p.outShape,"float32"),T=r.dataIdMap.get(E.dataId).id;return Zh(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,w,S,x,v,k,I,N,C,T),E}},wh(at,!0),wh(ot,!1,"bool"),yh(ut),{kernelName:dt,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}},{kernelName:ht,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return Jh(s,o,u,l,c,i),a},setupFunc:function(e){Jh=e.wasm.cwrap(ht,null,["number","number","number","number","number","number"])}},wh(ft,!1),gh,{kernelName:mt,backendName:"wasm",setupFunc:function(e){Qh=e.wasm.cwrap(mt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===L(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return Qh(c,d,h,p,f,a,g),m}},{kernelName:Wn,backendName:"wasm",setupFunc:function(e){ep=e.wasm.cwrap(Wn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p}=n,f=Rs(a.shape,s.shape,u,c,l,h),m=fh[p];if(null==m)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");const g=r.dataIdMap.get(a.dataId).id,y=r.dataIdMap.get(s.dataId).id,b=f.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const x=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,N=f.padInfo.bottom,C=f.padInfo.left,S=f.dilationHeight,E=f.dilationWidth,T=f.strideHeight,A=f.strideWidth,_=f.inChannels,$="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+d+"'. Please use 'NHWC'.");const O=r.makeOutput(f.outShape,"float32"),M=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return ep(g,R,D,F,y,x,v,w,k,I,N,C,$,S,E,T,A,_,b,m,L,M),O}},{kernelName:Vn,backendName:"wasm",setupFunc:function(e){tp=e.wasm.cwrap(Vn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p}=n,f=Rs(a.shape,s.shape,u,c,l,h,!0),m=fh[p];if(null==m)throw new Error(p+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const g=r.dataIdMap.get(a.dataId).id,y=r.dataIdMap.get(s.dataId).id,b=f.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);w=e.id}const x=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,N=f.padInfo.bottom,C=f.padInfo.left,S=f.dilationHeight,E=f.dilationWidth,T=f.strideHeight,A=f.strideWidth,_=f.inChannels,$="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+d+"'. Please use 'NHWC'.");const O=r.makeOutput(f.outShape,"float32"),M=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return tp(g,R,D,F,y,x,v,w,k,I,N,C,$,S,E,T,A,_,b,m,L,M),O}},{kernelName:yt,backendName:"wasm",setupFunc:function(e){np=e.wasm.cwrap(yt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=Ma(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,d=c[c.length-1],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return np(h,ph[r.dtype],p,i,d,o,f,m),l}},{kernelName:gt,backendName:"wasm",setupFunc:function(e){rp=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i}=r,o=a.shape.slice();o[i]=L(s.shape);const u=a.shape.length-1,l=t.makeOutput(o,a.dtype);if(0===L(a.shape))return l;const c=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=new Uint8Array(new Int32Array(ne(a.shape)).buffer),f=new Uint8Array(new Int32Array(ne(o)).buffer);rp(c,ph[a.dtype],p,u,d,i,f,h);const m=Si(a,s,H(i,a.shape)[0]);return l.shape=m.outputShape,l}},wh(bt,!1,"bool"),wh(wt,!1,"bool"),Nh,wh(St,!1,"bool"),wh(Et,!1,"bool"),yh(Tt),wh(_t,!1,"bool"),{kernelName:Dt,backendName:"wasm",setupFunc:function(e){ap=e.wasm.cwrap(Dt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=Th(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id),xs("max",c,u.shape.length);const[p,f]=bs(u.shape,c),m=L(f),g=t.makeOutput(p,i.dtype);if(0!==L(u.shape)){const e=t.dataIdMap.get(g.dataId).id;ap(o,m,e)}if(h&&t.disposeData(l.dataId),s){const e=ws(g.shape,d);g.shape=e}return g}},wh(Ft,!1),{kernelName:Ot,backendName:"wasm",setupFunc:function(e){sp=e.wasm.cwrap(Ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=_s(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,x=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");const I=r.makeOutput(c.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return sp(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,w,x,v,k,N),I}},{kernelName:Pt,backendName:"wasm",setupFunc:function(e){ip=e.wasm.cwrap(Pt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=Th(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}xs("min",d,l.shape.length);const[f,m]=bs(l.shape,d),g=L(m),y=t.makeOutput(f,l.dtype);if(0!==L(l.shape)){const e=t.dataIdMap.get(y.dataId).id;ip(u,g,e)}if(p&&t.disposeData(c.dataId),s){const e=ws(y.shape,h);y.shape=e}return y}},wh(Wt,!1),wh(Ut,!0),yh(Ht),{kernelName:jt,backendName:"wasm",setupFunc:function(e){op=e.wasm.cwrap(jt,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=op(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=Ip(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}},{kernelName:qt,backendName:"wasm",setupFunc:function(e){up=e.wasm.cwrap(qt,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=up(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ip(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}},{kernelName:Kt,backendName:"wasm",setupFunc:function(e){lp=e.wasm.cwrap(Kt,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=lp(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ip(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},wh(Gt,!1,"bool"),{kernelName:Yt,backendName:"wasm",setupFunc:function(e){cp=e.wasm.cwrap(Yt,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return cp(c,s,i,o,l),u}},{kernelName:Xt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:Zt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),d=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return dp(i,l,t.shape.length,ph[t.dtype],h,p,a,u),o},setupFunc:function(e){dp=e.wasm.cwrap(Zt,null,["number","array","number","number","array","array","number","number"])}},wh(Jt,!1),{kernelName:Qt,backendName:"wasm",setupFunc:function(e){hp=e.wasm.cwrap(Qt,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return hp(s,i,u),o}},yh(nn),yh(on),Fh,{kernelName:sn,backendName:"wasm",setupFunc:function(e){pp=e.wasm.cwrap(sn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,size:i}=r,[o,u]=i,[l,c,d,h]=a.shape,p=[l,o,u,h];let f,m=t.dataIdMap.get(a.dataId);"float32"!==m.dtype&&(f=Lh({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.makeOutput(p,"float32");if(0===L(a.shape))return y;const b=t.dataIdMap.get(y.dataId).id;return pp(g,l,c,d,h,o,u,s?1:0,b),null!=f&&t.disposeData(f.dataId),y}},{kernelName:un,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=H(s,a.shape);if(0===a.shape.length)return Ih({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);return fp(u,c,i.length,d,a.shape.length,l),Dh({inputs:{x:o},attrs:{shape:a.shape},backend:n})},setupFunc:function(e){fp=e.wasm.cwrap(un,null,["number","array","number","array","number","number"])}},{kernelName:zn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=a.shape,[m,g]=ju(o,h,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return mp(l,d,h,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){mp=e.wasm.cwrap(zn,null,["number","number","number","number","number","number","number","number","array","number","number"])}},yh(cn),{kernelName:dn,backendName:"wasm",setupFunc:function(e){gp=e.wasm.cwrap(dn,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===L(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=za(0,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return gp(p,f,ph[s.dtype],u,l,c,m,h,g),o}},{kernelName:hn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,d=r.shape.length,h=a.shape.length,p=0===d||d>1||1===h?1:L(a.shape.slice(1));return yp(i,o,u,p,c),l},setupFunc:function(e){yp=e.wasm.cwrap(hn,null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){bp=e.wasm.cwrap(bn,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===L(a.shape)||bp(r,s),a}},yh(mn),{kernelName:fn,backendName:"wasm",kernelFunc:Np},{kernelName:Nn,backendName:"wasm",setupFunc:function(e){wp=e.wasm.cwrap(Nn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=L(n.shape)/o;return 0===L(s.shape)||wp(a,i,o,u),s}},{kernelName:In,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=H(i,a.shape)[0],u=Io(a,s,i),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=Np({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},yh(xn),yh(Sn),wh(Cn,!0),{kernelName:Tn,backendName:"wasm",setupFunc:function(e){xp=e.wasm.cwrap(Tn,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));const{beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,p=Wa(c);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==d)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=a.shape.length-s.length,m=Wa(d),g=a.shape.slice();m.forEach((e=>{s[e]=0,i[e]=1,g.splice(e,0,1)}));const y=Dh({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:w,strides:x}=ja(y.shape,p,f,s,i,o,u,l,c);s=b,i=w,o=x;const v=Wa(h);v.forEach((e=>{i[e]=s[e]+1,o[e]=1}));const k=Va(s,i,o),I=k.filter(((e,t)=>-1===v.indexOf(t)));if(o.every((e=>1===e)))return Dh({inputs:{x:Np({inputs:{x:a},attrs:{begin:s,size:k},backend:t})},attrs:{shape:I},backend:t});const N=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){const e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(ne(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),u=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(I).buffer),c=new Uint8Array(new Int32Array(ne(I)).buffer),d=t.dataIdMap.get(N.dataId).id;xp(e,n,y.shape.length,r,a,u,l,c,I.length,d)}return Dh({inputs:{x:N},attrs:{shape:I},backend:t})}},wh(En,!0),{kernelName:vn,backendName:"wasm",setupFunc:function(e){vp=e.wasm.cwrap(vn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=Th(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Is(f.length,l.shape.length))}xs("sum",f,l.shape.length);const[m,g]=bs(l.shape,f),y=L(g),b=t.makeOutput(m,l.dtype);if(0!==L(l.shape)){const e=t.dataIdMap.get(b.dataId).id;vp(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=ws(b.shape,h);b.shape=e}return b}},yh(_n),{kernelName:$n,backendName:"wasm",setupFunc:function(e){kp=e.wasm.cwrap($n,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return kp(s,u,a.shape.length,l,o.length,ph[c.dtype],d),c}},Eh,{kernelName:Fn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r,i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=Np({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:Mn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of Cp)Kn(e);const Sp=pe();Sp.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Sp.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Sp.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Ep=n(349),Tp=n.n(Ep);var Ap=n(234),_p=n.n(Ap);class $p extends T{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new E(this,ss())}write(e,t,n){const r={};return this.move(r,e,t,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ir();return e(),{kernelMs:ir()-t}}move(e,t,n,r){const a=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:a,stringBytes:s,shape:n,dtype:r,memoryOffset:null})}const s=L(n),i=s*Y(r),o=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:o,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(a,s,o),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),o)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+L(r)*Y(n)).buffer,n)}disposeData(e){const t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{r={};const a=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t});const s=L(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=L(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Unknown dtype "+t)}}}function Rp(e,t,n){if(null!=Op)return Op;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Lp&&null!=Lp[r]?Lp[r]:n+r}cs("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([pe().getAsync("WASM_HAS_SIMD_SUPPORT"),pe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;let i;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Rp(e,t,null!=Mp?Mp:r):r+n},zp&&(a.instantiateWasm=(s=Rp(e,t,null!=Mp?Mp:""),(e,t)=>(function(e,t){return pe().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance)}))}))})),{}))),t&&e&&null==Op?(i=Tp()(a),i.mainScriptUrlOrBlob=new Blob(["var _scriptDir = undefined; var WasmBackendModuleThreadedSimd = "+Tp().toString()],{type:"text/javascript"})):i=_p()(a);i.tfjs={init:i.cwrap("init",null,[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",null,["number"]),dispose:i.cwrap("dispose",null,[])};let o=!1;i.onRuntimeInitialized=()=>{o=!0,Bp=!1,n({wasm:i})},i.onAbort=()=>{o||Bp||(Bp=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}}))}();return new $p(e)}),2);const Dp=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Fp,Op=null,Mp=null,Lp={},Bp=!1,zp=!1;function Pp(){return null==Fp&&(Fp=_r.backend.epsilon()),Fp}class Wp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wp.prototype)}}class Vp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vp.prototype)}}class Up extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Up.prototype)}}class Hp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hp.prototype)}}class Gp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gp.prototype)}}function jp(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function qp(e,t){if(!e)throw new Gp(t)}function Kp(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Xp(e){return 1===e.length?e[0]:e}function Yp(e){return Array.isArray(e)?e:[e]}function Zp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Jp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Qp={};function ef(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function tf(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>tf(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?tf(t):e[n]=t.value)}}}function nf(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Qp)s=Qp[a];else if(s=t[a],null==s)throw new Up(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Up(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Qp?[o,u]=Qp.className:i in t&&([o,u]=t[i]),null==o)throw new Up(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Qp))e[t]=Qp[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Qp);for(const e of Object.keys(n))Qp[e]=n[e];tf(s.config);const r=u(o,s.config,n,a);return Qp=Object.assign({},t),r}{const e=Object.assign({},Qp);for(const e of Object.keys(n))Qp[e]=n[e];const t=new o(s.config);return Qp=Object.assign({},e),t}}}function rf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function af(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function sf(e){if(null==e)throw new Up("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function of(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Up(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function uf(e,t,n=0,r=1/0){return qp(n>=0),qp(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function lf(e,t){Array.isArray(e)?(D(e.length>0,(()=>t+" is unexpectedly an empty array.")),e.forEach(((e,n)=>lf(e,`element ${n+1} of ${t}`)))):D(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got `+cf(e)+"."))}function cf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>cf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function df(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function hf(e,t){return os((()=>Co(Mi($i(e,e),t,!0))))}class pf extends ts{getConfig(){return{}}}class ff extends pf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return os((()=>{const t=hf(e,this.axis),n=Xs(t,0,this.maxValue);return $i(e,ci(n,ms(Pp(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ff.className="MaxNorm",rs(ff);class mf extends pf{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return os((()=>ci(e,ms(Pp(),hf(e,this.axis)))))}getConfig(){return{axis:this.axis}}}mf.className="UnitNorm",rs(mf);class gf extends pf{apply(e){return co(e)}}gf.className="NonNeg",rs(gf);class yf extends pf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return os((()=>{const t=hf(e,this.axis),n=ms($i(this.rate,Xs(t,this.minValue,this.maxValue)),$i(1-this.rate,t));return $i(e,ci(n,ms(Pp(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}yf.className="MinMaxNorm",rs(yf);const bf={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function wf(e){return ef(e)}function xf(e,t={}){return nf(e,ns.getMap().classNameMap,t,"constraint")}function vf(e){return null==e?null:"string"==typeof e?xf({className:e in bf?bf[e]:e,config:{}}):e instanceof pf?e:xf(e)}const kf=["channelsFirst","channelsLast"],If=["valid","same","causal"],Nf=["max","avg"],Cf=["sum","mul","concat","ave"],Sf=new Map;function Ef(e){of(kf,"DataFormat",e)}function Tf(e){of(If,"PaddingMode",e)}function Af(e){of(Nf,"PoolMode",e)}const _f=[];function $f(e,t){_f.push(e);try{const e=t();return _f.pop(),e}catch(e){throw _f.pop(),e}}function Rf(e){if(!Of(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===_f.length?"":_f.join("/")+"/")+e}function Df(e){if(!Of(e))throw new Error("Not a valid tensor name: '"+e+"'");Sf.has(e)||Sf.set(e,0);const t=Sf.get(e);if(Sf.set(e,Sf.get(e)+1),t>0){const n=`${e}_${t}`;return Sf.set(n,1),n}return e}const Ff=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Of(e){return!!e.match(Ff)}function Mf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Lf(e){return uo(e=Array.isArray(e)?new Float32Array(e):e)}function Bf(e){return Hi(Lf(e)).dataSync()[0]}function zf(e){return Fi(Lf(e)).dataSync()[0]}function Pf(e,t){if(t<e)throw new Up(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Wf(e,t){return e.asType(t)}function Vf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Uf(e,t,n){return os((()=>{switch(e.rank){case 1:return yo(e,t,n);case 2:return bo(e,[t,0],[n,e.shape[1]]);case 3:return wo(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return xo(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return go(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return go(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Up("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}))}function Hf(e,t,n){return os((()=>{switch(e.rank){case 1:return yo(e,t,n);case 2:return bo(e,[0,t],[e.shape[0],n]);case 3:return wo(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return xo(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Up("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function Gf(e,t,n,r){return os((()=>{switch(e.rank){case 1:return yo(e,t,n);case 2:switch(r){case 1:return Uf(e,t,n);case 2:return Hf(e,t,n);default:throw new Up("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Uf(e,t,n);case 2:return wo(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Hf(e,t,n);default:throw new Up("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Uf(e,t,n);case 2:return xo(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return xo(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Hf(e,t,n);default:throw new Up("The axis is not within the rank of the tensor "+r)}default:throw new Up("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function jf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Js(e,t)}function qf(e,t){switch(e.rank){case 1:return Qs([e,t]);case 2:return ei([e,t],0);case 3:return ti([e,t],0);case 4:return ni([e,t],0);default:throw new Up("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Kf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Up(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return bi(e,t)}function Xf(e,t=0,n=1,r,a){return io(e,t,n,r,a)}function Yf(e,t,n,r){if(e.rank<2||t.rank<2)throw new Hp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Hp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape);if(2===e.rank&&2===t.rank)return Jo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Qf(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([u,-1]);const d=[...a,...l];return Jo({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Qf(e.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function Zf(e,t,n){return os((()=>(t=Array.isArray(t)?uo(t,"int32"):t.toInt(),Ei(e,t,n))))}function Jf(e){return $i(e,e)}function Qf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Up("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Up("Unsupported input rank by biasAdd: "+t.rank)}function em(e,t,n){return os((()=>(null==n&&(n="channelsLast"),Ef(n),e.add(Qf(e.rank,t,n)))))}function tm(e,t,n,r){return os((()=>Oo(e,t,n,r)))}function nm(e,t,n=!1){return n?e():t()}const rm=["fanIn","fanOut","fanAvg"],am=["normal","uniform","truncatedNormal"];class sm extends ts{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class im extends sm{apply(e,t){return Wi(e,t)}}im.className="Zeros",rs(im);class om extends sm{apply(e,t){return Vi(e,t)}}om.className="Ones",rs(om);class um extends sm{constructor(e){if(super(),"object"!=typeof e)throw new Up("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new Up("config must have value set but got "+e);this.value=e.value}apply(e,t){return os((()=>$i(hs(this.value),Vi(e,t))))}getConfig(){return{value:this.value}}}um.className="Constant",rs(um);class lm extends sm{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return oo(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}lm.className="RandomUniform",rs(lm);class cm extends sm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hp(`randomNormal does not support dType ${t}.`);return Xf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}cm.className="RandomNormal",rs(cm);class dm extends sm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hp(`truncatedNormal does not support dType ${t}.`);return $o(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dm.className="TruncatedNormal",rs(dm);class hm extends sm{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return os((()=>{if(2!==e.length||e[0]!==e[1])throw new Up("Identity matrix initializer can only be used for 2D square matrices.");return $i(this.gain,wi(e[0]))}))}getConfig(){return{gain:this.gain}}}hm.className="Identity",rs(hm);class pm extends sm{constructor(e){if(super(),e.scale<0)throw new Up("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,of(rm,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){of(am,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Ef(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Mf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Mf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Mf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Hp(`${this.getClassName()} does not support dType ${t}.`);return $o(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return oo(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}pm.className="VarianceScaling",rs(pm);class fm extends pm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return pm.className}}fm.className="GlorotUniform",rs(fm);class mm extends pm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return pm.className}}mm.className="GlorotNormal",rs(mm);class gm extends pm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return pm.className}}gm.className="HeNormal",rs(gm);class ym extends pm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return pm.className}}ym.className="HeUniform",rs(ym);class bm extends pm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return pm.className}}bm.className="LeCunNormal",rs(bm);class wm extends pm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return pm.className}}wm.className="LeCunNormal",rs(wm);class xm extends sm{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Hp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return os((()=>{if(e.length<2)throw new Hp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Xf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Fu.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),$i(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}xm.className="Orthogonal",rs(xm);const vm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function km(e,t={}){return nf(e,ns.getMap().classNameMap,t,"initializer")}function Im(e){return ef(e)}function Nm(e){if("string"==typeof e){const t=e in vm?vm[e]:e;if("GlorotNormal"===t)return new mm;if("GlorotUniform"===t)return new fm;if("HeNormal"===t)return new gm;if("HeUniform"===t)return new ym;if("LeCunNormal"===t)return new bm;if("LeCunUniform"===t)return new wm;{const e={};return e.className=t,e.config={},km(e)}}return e instanceof sm?e:km(e)}let Cm=0;function Sm(){return Cm++}const Em={};function Tm(e=""){return e in Em||(Em[e]=0),Em[e]+=1,e+Em[e].toString()}function Am(e){return Array.isArray(e)&&Array.isArray(e[0])}function _m(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function $m(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Up("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function Rm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Up("Expected exactly 1 Shape; got "+e.length)}return e}function Dm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Fm{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Sm(),n=null==n?"Variable":n,this.originalName=Rf(n),this.name=Df(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return _r.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Om(e){return e.map((e=>e.read()))}function Mm(e){e.forEach((e=>{e[0].write(e[1])}))}class Lm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Bm{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Sm(),null!=s&&(this.originalName=Rf(s),this.name=Df(this.originalName)),this.rank=t.length}}let zm=0;class Pm{constructor(e,t){this.callArgs=t,this.id=zm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Wm=0;class Vm extends ts{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Wm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Zp(e)+"_"+Tm(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Vp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Up(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Xp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Xp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Wp("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Wp("Layer "+this.name+" is not connected, no input to return.");return Xp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Wp("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Wp("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Xp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Yp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Yp(this.inputSpec);if(e.length!==t.length)throw new Up(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Up(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Up(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Up(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Up(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Up(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Up(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Yp(e);let r=!0;for(const e of n)if(!(e instanceof Bm)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Bm){a=!1;break}if(r===a)throw new Up("Arguments to apply() must be all SymbolicTensors or all Tensors");return $f(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Yp(e))t.push(n.shape);this.build(Xp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Yp(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Xp(s),null!=this.activityRegularizer)throw new Hp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Yp(e);const t=[];for(const n of e)t.push(n.shape);return Xp(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Bm(s,n,this,Yp(e),t,this.name,r))):new Bm(s,r,this,Yp(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Hp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Wp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Wp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Vp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Dm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Om(e?this.trainableWeights:this.weights)}setWeights(e){os((()=>{const t=this.weights;if(t.length!==e.length)throw new Up(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Om(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!B(s.shape,o.shape))throw new Up(`Layer weight shape ${s.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Mm(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Up(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Nm("zeros"));const o=r.apply(t,n),u=new Fm(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Yp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Yp(e);t=Yp(t),n=Yp(n),r=Yp(r),a=_m(a),s=_m(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Pm({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Um(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Um(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hm extends Vm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Tm("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Up("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Up("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Up("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Bm(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Up("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Gm(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];us(r)}}function jm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var qm;Hm.className="InputLayer",rs(Hm),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(qm||(qm={}));class Km{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Xm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ym extends Km{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=os((()=>ms(this.totals[e],$i(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:os((()=>{const n=$i(ci(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ls(t[e])})))}}class Zm extends Km{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Jm extends Km{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");J(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ir();return(...a)=>{const s=ir();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Gm(n),r.push(this.yield(e,t,n))),r.push(Gu()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Gm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Gm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Gu()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Gm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Gm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Gu()):J(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Gm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Gm(e),await this.trainEnd(e))}}function Qm(e,t){return null==e&&(e={}),e instanceof Km?[e]:Array.isArray(e)&&e[0]instanceof Km?e:Yp(e).map((e=>new Jm(e,t)))}class eg{constructor(){}static registerCallbackConstructor(e,t){D(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, but got "+e)),eg.checkForDuplicate(t),null==eg.constructors[e]&&(eg.constructors[e]=[]),eg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in eg.constructors)eg.constructors[+t].forEach((t=>{if(t===e)throw new Up("Duplicate callback constructor.")}))}static clear(){eg.constructors={}}static createCallbacks(e){const t=[];for(const n in eg.constructors){const r=+n;e>=r&&t.push(...eg.constructors[r])}return t.map((e=>new e))}}function tg(e,t,n,r,a,s,i,o,u){const l=new Zm,c=[new Ym,...eg.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new Xm(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function ng(e,t={},n=!1){return nf(e,ns.getMap().classNameMap,t,"layer",n)}function rg(e,t){return os((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Mi(Jf(e),t,!0),r=xi(n.shape,Pp()),a=Co(_i(n,r));return ci(e,a)}))}function ag(e,t){return os((()=>Ui(Jf(Oi(t,e)),-1)))}function sg(e,t){return os((()=>Ui(fs(Oi(t,e)),-1)))}function ig(e,t){return os((()=>{const n=Oi(e,t),r=Xs(fs(e),Pp(),Number.MAX_VALUE),a=fs(ci(n,r));return $i(100,Ui(a,-1))}))}function og(e,t,n=!1){return os((()=>{if(n)t=vo(t);else{const e=Mi(t,t.shape.length-1,!0);t=ci(t,e)}return t=Xs(t,Pp(),1-Pp()),Ki(Mi($i(e.toFloat(),Di(t)),t.shape.length-1))}))}function ug(e,t,n=!1){return os((()=>{const r=vi(function(e){const t=[Mf(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=Xs(t,Pp(),1-Pp())).shape;return og(Yi(r,a[a.length-1]).reshape(a),t,n)}))}function lg(e,t){return os((()=>{let n;return n=Xs(t,Pp(),1-Pp()),n=Di(ci(n,Oi(1,n))),Ui(function(e,t){if(!B(e.shape,t.shape))throw new Up(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return os((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function cg(e,t){return os((()=>{const n=rg(e,-1),r=rg(t,-1),a=$i(n,r);return Ki(Mi(a,-1))}))}eg.constructors={};const dg={meanSquaredError:ag,meanAbsoluteError:sg,meanAbsolutePercentageError:ig,meanSquaredLogarithmicError:function(e,t){return os((()=>{const n=Xs(t,Pp(),Number.MAX_VALUE),r=Di(ms(1,n)),a=Xs(e,Pp(),Number.MAX_VALUE),s=Di(ms(1,a));return Ui(Jf(Oi(r,s)),-1)}))},squaredHinge:function(e,t){return os((()=>{const n=_i(0,Oi(1,$i(e,t)));return Ui(Jf(n),-1)}))},hinge:function(e,t){return os((()=>{const n=_i(0,Oi(1,$i(e,t)));return Ui(n,-1)}))},categoricalHinge:function(e,t){return os((()=>{const n=Mi($i(e,t),-1),r=Fi($i(Oi(1,e),t),-1);return _i(0,ms(1,Oi(r,n)))}))},logcosh:function(e,t){return os((()=>{const n=Math.log(2),r=Oi(t,e),a=Oi(ms(r,ko($i(-2,r))),n);return Ui(a,-1)}))},categoricalCrossentropy:og,sparseCategoricalCrossentropy:ug,binaryCrossentropy:lg,kullbackLeiblerDivergence:function(e,t){return os((()=>{const n=Xs(e,Pp(),1),r=Xs(t,Pp(),1);return Mi($i(e,Di(ci(n,r))),-1)}))},poisson:function(e,t){return os((()=>{const n=Di(ms(Pp(),t));return Ui(Oi(t,$i(e,n)),-1)}))},cosineProximity:cg};function hg(e){if("string"==typeof e){if(e in dg)return dg[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Up(t)}return e}function pg(e,t){return os((()=>{const n=$i(.5,eo(t)),r=Wf(Ti(t,n),e.dtype);return Ui(mi(e,r),-1)}))}function fg(e,t){return os((()=>Wf(mi(Ts(e,-1),Ts(t,-1)),"float32")))}function mg(e,t){return lg(e,t)}function gg(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),mi(e,t).asType("float32")}const yg=og,bg=ug,wg={binaryAccuracy:pg,categoricalAccuracy:fg,precision:function(e,t){return os((()=>{const n=function(e,t){return os((()=>Bi(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return os((()=>Bi(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return Fo(Ti(a,0),n.div(a),0).cast("float32")}))},categoricalCrossentropy:yg,sparseCategoricalCrossentropy:bg,mse:ag,MSE:ag,mae:sg,MAE:sg,mape:ig,MAPE:ig,cosine:cg};function xg(e){if("string"==typeof e&&e in wg)return wg[e];if("string"!=typeof e&&null!=e)return e;throw new Up("Unknown metric "+e)}function vg(e){if(qp(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(dg))if(dg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(wg))if(wg[n]===e){t=n;break}return void 0!==t?t:e.name}}function kg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ig(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ig(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Ig(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ig(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ng(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Cg(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ng([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Sg(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Ng([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)Ng(["","","",s[e]],t,r)}function Eg(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Tg(e,t){if(null===e)return null;if("string"==typeof e)return Jp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Eg(t,a,r)?n.push(r):n.push(Tg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Jp(n);t[e]=Tg(r,e)}}return t}}function Ag(e,t){if(null==e)return null;if("string"==typeof e)return Zp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Eg(t,a,r)?n.push(r):n.push(Ag(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Zp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ag(r,n):r}return t}}class _g{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof _g)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Up(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ia(t,e.dtype)}catch(n){throw new Up(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Bm){if(null==this.id2Value[e.id])throw new Up("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Up("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof Bm){if(null==this.id2Value[e.id])throw new Up("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Up("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&us(this.id2Mask)}}const $g={},Rg={};function Dg(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let d,h;if(null==$g[c]){const e=function(e,t){D(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Og(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Og(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Fg(r)}}(i,t);d=e.sorted,h=e.recipientCounts,$g[c]=d,Rg[c]=h}d=$g[c],h={},a||Object.assign(h,Rg[c]);const p=new _g(t);for(let e=0;e<d.length;++e){if(null!=r){const e=is().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof Hm)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Yp(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Mg(s),w=Array.isArray(b)?b:[b];for(let e=0;e<w.length;++e){p.hasKey(w[e])||p.add(w[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(w[e].name);-1!==t&&(u[t]=g[e])}a||us(f)}return p.disposeMasks(),s?u:u[0]}function Fg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Og(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Mg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Lg extends Vm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Tm(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],af(this.inputs).length!==this.inputs.length)throw new Up("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((e=>e.name)));af(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((e=>e.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;qp(0===n,"input layer has >1 nodes"),qp(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Hm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Vp(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Lg.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(rf);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Lg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(rf);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Vp("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+m);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Vp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Up("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Up("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Up("Provided weight data has no target variable: "+r);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Up(`${e.length} of ${r} weights are not set: `+e)}Mm(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.7.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ag(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return os((()=>{e=Yp(e);const n=new _g;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Dg(this.outputs,n,t)}))}computeMask(e,t){return os((()=>{let n;return e=Yp(e),n=null==t?jp(null,e.length):Yp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=_m(e);if(t.length!==this.inputLayers.length)throw new Up(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(rf);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=_m(t.computeOutputShape(Xp(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];qp(t in n),a.push(n[t])}return Xp(a)}runInternalGraph(e,t){null==t&&(t=jp(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(rf);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Yp(t.call(e,l)),u=Yp(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Yp(t.call(r,l)),u=Yp(t.computeMask(r,i));if(t.activityRegularizer)throw new Hp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){qp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Lg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Lg.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Up(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Up("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Up("No such layer: "+e)}calculateLosses(){return os((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Lg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Lg.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Lg.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Lg.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Lg.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply(Xp(n),r)}function u(e){const n=e.name,s=ng(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Up("Corrupted configuration, expected array for nodeData: "+e);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!sf(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];qp(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];qp(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new Up("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){os((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Bg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function zg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=os((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());us(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),uo(a,"float32")}return null}function Pg(e,t){return $i(e,t)}function Wg(e,t){let n,r;const a=t;n=a.xs,r=a.ys,D(null!=n&&null!=r,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t));const s=Vg("input",e.inputNames,n),i=Vg("output",e.outputNames,r),o=s[0].shape[0];D(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")")),D(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")"));for(let t=0;t<s.length;t++)D(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)D(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Vg(e,t,n){if(n instanceof pr)return[n];if(Array.isArray(n))return D(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Up(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Ug(e){return"function"==typeof e.iterator}function Hg(e){D(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got "+e))}function Gg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Uf(e,t,n-t))):Uf(e,t,n-t)}function jg(e,t){return os((()=>null==e?null:Array.isArray(e)?e.map((e=>jg(e,t))):Zf(e,"int32"===t.dtype?t:t.toInt())))}function qg(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Kg(e){const t=[];e instanceof pr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Vf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Xg(e,t){if(null==e)return;const n=[];if(t instanceof pr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof pr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Yg(e){return Array.isArray(e)}function Zg(e){return!function(e){return e instanceof pr}(e)&&!Yg(e)}function Jg(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Yg(e)&&e.length>0)t=!0;else if(Zg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Up(`Error when checking model ${a} expected no data, but got `+e)}return[]}if(null==e)return t.map((e=>null));let s;if(Zg(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Up(`No data provided for "${n}". Need data for each key in: `+t);s.push(e[n])}}else if(Yg(e)){if((e=e).length!==t.length)throw new Up(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);s=e}else{if(e=e,t.length>1)throw new Up(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);s=[e]}if(s=Kg(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Up(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape `+i.shape);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new Up(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Qg(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Up(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Up(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Up(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Up(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ey extends Lg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Up("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ng(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Cg(o[e],n,r):Sg(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Dm(e.collectedTrainableWeights):Dm(e.trainableWeights),t}(e),l=Dm(e.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Uu.adagrad(.01),Adadelta:()=>Uu.adadelta(1,.95,Pp()),Adam:()=>Uu.adam(.001,.9,.999,Pp()),Adamax:()=>Uu.adamax(.002,.9,.999,Pp(),0),RMSProp:()=>Uu.rmsprop(.001,.9,0,Pp()),SGD:()=>Uu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Up("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ps))throw new Up("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Up(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>hg(e)))}else{const n=hg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Up(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(hg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],$f("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};$f("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===lg?-1!==["accuracy","acc"].indexOf(i)?r=pg:-1!==["crossentropy","ce"].indexOf(i)&&(r=mg):this.lossFunctions[e]===ug?-1!==["accuracy","acc"].indexOf(i)?r=gg:-1!==["crossentropy","ce"].indexOf(i)&&(r=bg):-1!==["accuracy","acc"].indexOf(i)?r=fg:-1!==["crossentropy","ce"].indexOf(i)&&(r=yg),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=xg(i);s=e,n=""+vg(i)}let t;$f(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Hg(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Xp(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Xg(a[0],e),Xg(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Hp("Verbose mode is not implemented yet.");D(!r||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=os((()=>{if(t.value){const{xs:n,ys:r}=Wg(e,t.value),i=n.concat(r),l=os((()=>a(i)));if(us(i),0===u)for(let e=0;e<l.length;++e)s.push(hs(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=os((()=>ms(s[e],$i(c,t)))),u>0&&us(n)}us(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=ci(s[e],o),us(t)}return Xp(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Up(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new Up("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Up("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new _g;if(e instanceof pr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Up(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Up("No value is provided for the model's input "+t.name);s.add(t,n)}const i=Dg(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=jp(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Up("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return os((()=>{const r=this.checkNumSamples(e);if(n)throw new Hp("Verbose predictLoop() is not implemented yet.");const a=qg(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)os((()=>{const n=a[t][0],r=a[t][1],s=Gg(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new _g(i);return Dg(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Xp(s.map((e=>Js(e,0))))}))}predict(e,t={}){const n=Kg(e);Qg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Hg(r),this.predictLoop(n,r)}finally{Xg(n,e)}}predictOnBatch(e){Qg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Vp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ug?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=af(e.map((e=>e.shape[0])));r.sort();const a=af(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Up("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((e=>e.shape))));if(a.length>1)throw new Up("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((e=>e.shape))));if(r.length>0&&a.length>0&&!B(r,a))throw new Up(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Jg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Jg(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[ag,lg,og];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===og&&1===s.shape[s.shape.length-1])throw new Up(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Up(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Up(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Bg(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await zg(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return os((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Hp("Verbose mode is not implemented yet.");if(null!=a)throw new Hp("steps mode in testLoop() is not implemented yet");{const r=qg(s,n),a=uo(Pf(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Uf(a,s,o-s),l=jg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(hs(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ms(i[e],$i(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=ci(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Kp(e,r)>1&&(a+="_"+Kp(e.slice(0,n),r)),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new _g(e),o=Dg(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Pg(n,a[e]));const s=Ui(n);t.push(s),u=0===e?n:ms(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Ui(t(r[a],o[a]))}ls(n),s.push(n)}return u=Ui(u),this.calculateLosses().forEach((e=>{u=ms(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>os((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new _g(s),o=Dg(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Ui(r(a[e],o[e]));n=0===e?s:ms(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Ui(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Hg(d);const h=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,d);a=p[0],s=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Hp("validationData including sample weights is not supported yet."):new Up("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Gg(a,e,t),a=Gg(a,0,e),l=Gg(s,e,t),s=Gg(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let w,x;m?(e.makeTestFunction(),w=e.testFunction,x=b.slice().concat(b.map((e=>"val_"+e)))):(w=null,f=[],x=b.slice());const v=Qm(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,c,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=Pf(0,g)),null==i&&(i=1);const{callbackList:b,history:w}=tg(o,i,s,h,g,p,a,m,d);b.setModel(e),e.history=w,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new Hp("batch shuffling is not implemneted yet");c&&_(y);const i=uo(y),o=qg(g,a);for(let c=0;c<o.length;++c){const d={};if(await b.onBatchBegin(c,d),os((()=>{const h=o[c][0],p=o[c][1],f=Uf(i,h,p-h);d.batch=c,d.size=p-h;const g=jg(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];d[t]=n,ls(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];ls(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,d),jm(d),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,d,r.epochs,r.verbose,v,w,f,r.shuffle,x,r.initialEpoch,null)}finally{e.isTraining=!1,Xg(a,t),Xg(s,n),Xg(u,i),Xg(l,o),null!=c&&us(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(D(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),D(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),D(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),D(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),D(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Ug(n.validationData))D(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const e=function(e){if(3===e.length)throw new Hp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Qm(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=tg(c,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Wg(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=Bg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await zg(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);us(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,ls(n)}await h.onBatchEnd(d,s),jm(s),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Ug(n.validationData)?Yp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Yp(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return us(s),Xp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=is().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-is().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Zp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Zp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Zp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Zp(vg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Zp(vg(e))));{const e={};for(const t in this.metrics)e[t]=Zp(vg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ng(Tg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Jp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Jp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Jp(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Jp(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Jp(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Jr(e);if(0===t.length)throw new Up(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Up(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Up("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Hr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Hr(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Kr([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;kg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){kg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ey.className="Model",rs(ey);class ty extends ey{}ty.className="Functional",rs(ty);class ny extends ey{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Tm("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Up("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof ny||e instanceof ey;let n;if(t){if(n=e,1!==n.outputs.length)throw new Up("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Up("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Up("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Up("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Up(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Up("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Um(this.outputs[0])}this.inboundNodes=[],new Pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:jp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Rm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ey({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Vp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Vp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Vp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Vp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Up("Legacy serialization format not supported yet.");a=t}else D(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof ny))throw new Hp("Sequential.fromConfig called on non-Sequential input: "+i);for(const e of a){const t=ng(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Up("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Up("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}ny.className="Sequential",rs(ny);class ry extends ts{getConfig(){return{}}}class ay extends ry{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Hp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return di(e)}(e,t)}}ay.className="elu",rs(ay);class sy extends ry{apply(e){return po(e)}}sy.className="selu",rs(sy);class iy extends ry{apply(e){return co(e)}}iy.className="relu",rs(iy);class oy extends ry{apply(e){return os((()=>Gi(6,co(e))))}}oy.className="relu6",rs(oy);class uy extends ry{apply(e){return e}}uy.className="linear",rs(uy);class ly extends ry{apply(e){return mo(e)}}ly.className="sigmoid",rs(ly);class cy extends ry{apply(e){return function(e){return os((()=>{const t=ms(.5,$i(.2,e));return Xs(t,0,1)}))}(e)}}cy.className="hardSigmoid",rs(cy);class dy extends ry{apply(e){return ko(e)}}dy.className="softplus",rs(dy);class hy extends ry{apply(e){return function(e){return os((()=>ci(e,fs(e).add(1))))}(e)}}hy.className="softsign",rs(hy);class py extends ry{apply(e){return To(e)}}py.className="tanh",rs(py);class fy extends ry{apply(e,t=-1){return vo(e,t)}}fy.className="softmax",rs(fy);class my extends ry{apply(e,t=-1){return Li(e,t)}}my.className="logSoftmax",rs(my);class gy extends ry{apply(e,t=1){return os((()=>mo(e.mul(t)).mul(e)))}}function yy(e){return e.getClassName()}function by(e,t={}){return nf(e,ns.getMap().classNameMap,t,"activation")}function wy(e){if(null==e){return by({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},by(t)}return e instanceof ry?e:by(e)}gy.className="swish",rs(gy);class xy extends ts{}class vy extends xy{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return os((()=>{let t=Wi([1]);return this.hasL1&&(t=ms(t,Mi($i(this.l1,fs(e))))),this.hasL2&&(t=ms(t,Mi($i(this.l2,Jf(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}vy.className="L1L2",rs(vy);const ky={l1l2:"L1L2"};function Iy(e){return ef(e)}function Ny(e,t={}){return nf(e,ns.getMap().classNameMap,t,"regularizer")}function Cy(e){return null==e?null:"string"==typeof e?Ny({className:e in ky?ky[e]:e,config:{}}):e instanceof xy?e:Ny(e)}class Sy extends Vm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=$m(e);let n=co(e);return null!=this.maxValue&&(n=Xs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="ReLU",rs(Sy);class Ey extends Vm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$m(e);return Ri(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ey.className="LeakyReLU",rs(Ey);class Ty extends Vm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Nm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Cy(e.alphaRegularizer),this.alphaConstraint=vf(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Up("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Rm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Lm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=$m(e),no(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Im(this.alphaInitializer),alphaRegularizer:Iy(this.alphaRegularizer),alphaConstraint:wf(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ty.className="PReLU",rs(Ty);class Ay extends Vm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Hp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=$m(e);return di(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ay.className="ELU",rs(Ay);class _y extends Vm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=$m(e);return n.mul(Wf(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}_y.className="ThresholdedReLU",rs(_y);class $y extends Vm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new fy).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=$m(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ry(e,t,n){if("number"==typeof e)return jp(e,t);if(e.length!==t)throw new Up(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Up(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+s)}return e;var r}function Dy(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Fy(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+zf([n-t,0]);else{if("same"!==r)throw new Up(`Unsupport padding mode: ${r}.`);e*=t}return e}function Oy(e,t){return os((()=>(Ef(t),"channelsFirst"===t?Cs(e,[0,2,3,1]):e)))}function My(e,t){return os((()=>(Ef(t),"channelsFirst"===t?Cs(e,[0,2,3,4,1]):e)))}function Ly(e,t,n,r=[1,1],a="valid",s,i,o=null){return os((()=>{if(null==s&&(s="channelsLast"),Ef(s),3!==e.rank&&4!==e.rank)throw new Up(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Up(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Oy(e,s);if("causal"===a)throw new Hp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=qo({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Cs(u,[0,3,1,2])),u}))}$y.className="Softmax",rs($y);class By extends Vm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",By.verifyArgs(t),this.rank=e,lf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Hp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ry(t.kernelSize,e,"kernelSize"),this.strides=Ry(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Tf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ef(this.dataFormat),this.activation=wy(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Nm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=vf(t.biasConstraint),this.biasRegularizer=Cy(t.biasRegularizer),this.activityRegularizer=Cy(t.activityRegularizer),this.dilationRate=Ry(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Up("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Up("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Up("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(qp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!uf(e.kernelSize,"number",1,3))throw new Up(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:yy(this.activation),useBias:this.useBias,biasInitializer:Im(this.biasInitializer),biasRegularizer:Iy(this.biasRegularizer),activityRegularizer:Iy(this.activityRegularizer),biasConstraint:wf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class zy extends By{constructor(e,t){super(e,t),this.kernel=null,zy.verifyArgs(t),this.filters=t.filters,lf(this.filters,"filters"),this.kernelInitializer=Nm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=vf(t.kernelConstraint),this.kernelRegularizer=Cy(t.kernelRegularizer)}build(e){e=Rm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Up("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return os((()=>{let t;e=$m(e);const n=null==this.bias?null:this.bias.read(),r=df(this.activation.getClassName());if(null!=r&&2===this.rank)t=Ly(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return os((()=>{if(null==s&&(s="channelsLast"),Ef(s),3!==e.shape.length)throw new Up("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new Up("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new Up("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===s&&(e=Cs(e,[0,2,1])),"causal"===a)throw new Hp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ai(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=em(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Ly(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Hp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return os((()=>{if(null==s&&(s="channelsLast"),Ef(s),4!==e.rank&&5!==e.rank)throw new Up("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new Up("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=My(e,s);if("causal"===a)throw new Hp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=oi(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=em(o,n)),"channelsFirst"===s&&(o=Cs(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Rm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Dy(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Im(this.kernelInitializer),kernelRegularizer:Iy(this.kernelRegularizer),kernelConstraint:wf(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Up("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class Py extends zy{constructor(e){super(2,e),Py.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!uf(e.kernelSize,"number",1,2))throw new Up(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Py.className="Conv2D",rs(Py);class Wy extends zy{constructor(e){super(3,e),Wy.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Up(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Wy.className="Conv3D",rs(Wy);class Vy extends Py{constructor(e){if(super(e),this.inputSpec=[new Lm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Up("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=Rm(e)).length)throw new Up("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Up("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return os((()=>{let t=$m(e);if(4!==t.shape.length)throw new Up("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=[r,Fy(i,c,u,this.padding),Fy(o,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Cs(t,[0,2,3,1]));let p=ii(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Cs(p,[0,3,1,2])),null!=this.bias&&(p=em(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Rm(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Fy(t[r],o,s,this.padding),t[a]=Fy(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Vy.className="Conv2DTranspose",rs(Vy);class Uy extends zy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Up("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Up("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Up(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Nm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Cy(t.depthwiseRegularizer),this.depthwiseConstraint=vf(t.depthwiseConstraint),this.pointwiseInitializer=Nm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Cy(t.pointwiseRegularizer),this.pointwiseConstraint=vf(t.pointwiseConstraint)}build(e){if((e=Rm(e)).length<this.rank+2)throw new Up(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Up("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Lm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return os((()=>{let t;if(e=$m(e),1===this.rank)throw new Hp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Cs(e,[0,2,3,1])),t=fo(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=em(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Cs(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Im(this.depthwiseInitializer),e.pointwiseInitializer=Im(this.pointwiseInitializer),e.depthwiseRegularizer=Iy(this.depthwiseRegularizer),e.pointwiseRegularizer=Iy(this.pointwiseRegularizer),e.depthwiseConstraint=wf(this.depthwiseConstraint),e.pointwiseConstraint=wf(this.pointwiseConstraint),e}}Uy.className="SeparableConv";class Hy extends Uy{constructor(e){super(2,e)}}Hy.className="SeparableConv2D",rs(Hy);class Gy extends zy{constructor(e){super(1,e),Gy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!uf(e.kernelSize,"number",1,1))throw new Up(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Gy.className="Conv1D",rs(Gy);class jy extends Vm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return os((()=>{if(e=$m(e),"channelsLast"===this.dataFormat){const t=Gf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Gf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Gf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Gf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}jy.className="Cropping2D",rs(jy);class qy extends Vm{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return os((()=>{let t=$m(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Cs(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a=t.resizeNearestNeighbor([e,r]);return Cs(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return t.resizeNearestNeighbor([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}qy.className="UpSampling2D",rs(qy);class Ky extends By{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Nm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=vf(e.depthwiseConstraint),this.depthwiseRegularizer=Cy(e.depthwiseRegularizer)}build(e){if((e=Rm(e)).length<4)throw new Up(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Up(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return os((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return os((()=>{null==a&&(a="channelsLast"),Ef(a);let i=Oy(e,a);if(4!==e.rank)throw new Up("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new Up("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=ui(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Cs(i,[0,3,1,2])),i}))}(e=$m(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=em(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Rm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Dy(t,this.kernelSize[0],this.padding,this.strides[0]),s=Dy(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Im(this.depthwiseInitializer),e.depthwiseRegularizer=Iy(this.depthwiseRegularizer),e.depthwiseConstraint=wf(this.depthwiseRegularizer),e}}function Xy(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Up("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Yy(e,t,n,r=!1,a,s,i=!1,o=!1){return os((()=>{const u=t.shape.length;if(u<3)throw new Up(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Pf(2,u));if(t=Cs(t,l),null!=s)throw new Hp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=yi(a,-1)),a=Cs(a,l)),r&&(t=ho(t,0),null!=a&&(a=ho(a,0)));const c=[];let d,h=n;const p=t.shape[0],f=Ro(t);let m,g;null!=a&&(m=Ro(a));for(let t=0;t<p;++t){const n=f[t],r=os((()=>e(n,h)));if(null==a)d=r[0],h=r[1];else{const e=os((()=>{const e=m[t],n=eo(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));d=e.output,h=e.newStates}o&&c.push(d)}return o&&(g=Eo(c,1)),[d,g,h]}))}Ky.className="DepthwiseConv2D",rs(Ky);class Zy extends Vm{constructor(e){let t;if(super(e),null==e.cell)throw new Up("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new sb({cells:e.cell}):e.cell,null==t.stateSize)throw new Up("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Lm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Pf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Am(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return os((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Hp("Constants support is not implemented in RNN yet.");Am(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Lm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!B(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Up(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map((e=>new Lm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){os((()=>{if(!this.stateful)throw new Wp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Up("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wi([n,e]))):this.states_=[Wi([n,this.cell.stateSize])];else if(null==e)us(this.states_),null!=this.keptStates&&(us(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wi([n,e]))):this.states_[0]=Wi([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Up(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):us(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!B(r.shape,s))throw new Up(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ls(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Xy(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Lm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Bm){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return os((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=$m(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Up(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Yy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d}))}getInitialState(e){return os((()=>{let t=Wi(e.shape);return t=Mi(t,[1,2]),t=Vf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Kf(t,[1,e]):t)):this.cell.stateSize>1?[Kf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Zy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=ng(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Zy.className="RNN",rs(Zy);class Jy extends Vm{}class Qy extends Jy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,lf(this.units,"units"),this.activation=wy(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Nm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cy(e.kernelRegularizer),this.recurrentRegularizer=Cy(e.recurrentRegularizer),this.biasRegularizer=Cy(e.biasRegularizer),this.kernelConstraint=vf(e.kernelConstraint),this.recurrentConstraint=vf(e.recurrentConstraint),this.biasConstraint=vf(e.biasConstraint),this.dropout=Bf([1,zf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bf([1,zf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Rm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return os((()=>{if(2!==(e=e).length)throw new Up(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>eo(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>eo(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Yf(null!=s?$i(e,s):e,this.kernel.read()),null!=this.bias&&(a=em(a,this.bias.read())),null!=i&&(n=$i(n,i));let o=ms(a,Yf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:yy(this.activation),useBias:this.useBias,kernelInitializer:Im(this.kernelInitializer),recurrentInitializer:Im(this.recurrentInitializer),biasInitializer:Im(this.biasInitializer),kernelRegularizer:Iy(this.kernelRegularizer),recurrentRegularizer:Iy(this.recurrentRegularizer),biasRegularizer:Iy(this.biasRegularizer),activityRegularizer:Iy(this.activityRegularizer),kernelConstraint:wf(this.kernelConstraint),recurrentConstraint:wf(this.recurrentConstraint),biasConstraint:wf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Qy.className="SimpleRNNCell",rs(Qy);class eb extends Zy{constructor(e){e.cell=new Qy(e),super(e)}call(e,t){return os((()=>{null!=this.cell.dropoutMask&&(us(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(us(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}eb.className="SimpleRNN",rs(eb);class tb extends Jy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Up("GRUCell does not support reset_after parameter set to true.");this.units=e.units,lf(this.units,"units"),this.activation=wy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Nm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cy(e.kernelRegularizer),this.recurrentRegularizer=Cy(e.recurrentRegularizer),this.biasRegularizer=Cy(e.biasRegularizer),this.kernelConstraint=vf(e.kernelConstraint),this.recurrentConstraint=vf(e.recurrentConstraint),this.biasConstraint=vf(e.biasConstraint),this.dropout=Bf([1,zf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bf([1,zf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Rm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return os((()=>{if(2!==(e=e).length)throw new Up("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>eo(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>eo(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=$i(e,a[0]));let l=Yf(e,this.kernel.read());this.useBias&&(l=em(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$i(r,s[0]));const c=this.recurrentKernel.read(),[d,h]=No(c,[2*this.units,this.units],c.rank-1),p=Yf(r,d),[f,m,g]=No(l,3,l.rank-1),[y,b]=No(p,2,p.rank-1);i=this.recurrentActivation.apply(ms(f,y)),o=this.recurrentActivation.apply(ms(m,b));const w=Yf($i(o,r),h);u=this.activation.apply(ms(g,w));const x=ms($i(i,r),$i(ms(1,Ki(i)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:yy(this.activation),recurrentActivation:yy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Im(this.kernelInitializer),recurrentInitializer:Im(this.recurrentInitializer),biasInitializer:Im(this.biasInitializer),kernelRegularizer:Iy(this.kernelRegularizer),recurrentRegularizer:Iy(this.recurrentRegularizer),biasRegularizer:Iy(this.biasRegularizer),activityRegularizer:Iy(this.activityRegularizer),kernelConstraint:wf(this.kernelConstraint),recurrentConstraint:wf(this.recurrentConstraint),biasConstraint:wf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}tb.className="GRUCell",rs(tb);class nb extends Zy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tb(e),super(e)}call(e,t){return os((()=>{null!=this.cell.dropoutMask&&(us(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(us(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}nb.className="GRU",rs(nb);class rb extends Jy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,lf(this.units,"units"),this.activation=wy(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wy(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Nm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Nm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Nm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Cy(e.kernelRegularizer),this.recurrentRegularizer=Cy(e.recurrentRegularizer),this.biasRegularizer=Cy(e.biasRegularizer),this.kernelConstraint=vf(e.kernelConstraint),this.recurrentConstraint=vf(e.recurrentConstraint),this.biasConstraint=vf(e.biasConstraint),this.dropout=Bf([1,zf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bf([1,zf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Rm(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends sm{apply(t,r){const a=e.apply([n]),s=(new om).apply([n]),i=e.apply([2*n]);return qf(qf(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return os((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Up("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>eo(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>eo(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=$i(e,s[0]));let d=Yf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$i(r,i[0])),d=ms(d,Yf(r,this.recurrentKernel.read())),this.useBias&&(d=em(d,this.bias.read()));const[h,p,f,m]=No(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),l=ms($i(u,a),$i(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=$i(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:yy(this.activation),recurrentActivation:yy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Im(this.kernelInitializer),recurrentInitializer:Im(this.recurrentInitializer),biasInitializer:Im(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Iy(this.kernelRegularizer),recurrentRegularizer:Iy(this.recurrentRegularizer),biasRegularizer:Iy(this.biasRegularizer),activityRegularizer:Iy(this.activityRegularizer),kernelConstraint:wf(this.kernelConstraint),recurrentConstraint:wf(this.recurrentConstraint),biasConstraint:wf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}rb.className="LSTMCell",rs(rb);class ab extends Zy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rb(e),super(e)}call(e,t){return os((()=>{null!=this.cell.dropoutMask&&(us(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(us(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ab.className="LSTM",rs(ab);class sb extends Jy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return os((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Am(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{$f("RNNCell_"+r,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(ng(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Om(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Mm(t)}}function ib(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>tm(t(),n),i=()=>nm(s,t,r);return!a||a<=1?ls(i().clone()):Array(a).fill(void 0).map(i).map((e=>ls(e.clone())))}sb.className="StackedRNNCells",rs(sb);var ob,ub;class lb extends Zy{constructor(e){if(e.unroll)throw new Hp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Hp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Lm({ndim:5})]}call(e,t){return os((()=>{if(null!=this.cell.dropoutMask&&(us(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(us(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Up("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return os((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Wi([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){os((()=>{if(!this.stateful)throw new Wp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Up("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wi(a))):this.states_=[Wi(a)];else if(null==e)us(this.states_),null!=this.keptStates&&(us(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wi(a))):this.states_[0]=Wi(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Up(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):us(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!B(n.shape,r))throw new Up(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ls(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Dy(u,r[0],a,s[0],i[0]),d=Dy(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}lb.className="ConvRNN2D";class cb extends rb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,lf(this.filters,"filters"),this.kernelSize=Ry(n,2,"kernelSize"),this.kernelSize.forEach((e=>lf(e,"kernelSize"))),this.strides=Ry(r||1,2,"strides"),this.strides.forEach((e=>lf(e,"strides"))),this.padding=a||"valid",Tf(this.padding),this.dataFormat=s||"channelsLast",Ef(this.dataFormat),this.dilationRate=Ry(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>lf(e,"dilationRate")))}build(e){var t;e=Rm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Up("The channel dimension of the input should be defined. Found "+e[n]);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends sm{apply(e,t){return jf([n.apply([r]),Vi([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return os((()=>{if(3!==e.length)throw new Up("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>eo(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?$i(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>eo(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3);const[y,b,w,x]=No(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?No(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,w,I,this.padding),d=this.inputConv(d,x,N,this.padding);const[C,S,E,T]=No(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,S),m=this.recurrentConv(m,E),g=this.recurrentConv(g,T);const A=this.recurrentActivation.apply(ms(u,p)),_=this.recurrentActivation.apply(ms(l,f)),$=ms($i(_,s),$i(A,this.activation.apply(ms(c,m)))),R=$i(this.recurrentActivation.apply(ms(d,g)),this.activation.apply($));return[R,R,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=ri(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?em(a,n,this.dataFormat):a}recurrentConv(e,t){return ri(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}cb.className="ConvLSTM2DCell",rs(cb);class db extends lb{constructor(e){const t=new cb(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}db.className="ConvLSTM2D",rs(db);class hb extends Vm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return nm((()=>tm(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}hb.className="Dropout",rs(hb);class pb extends hb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}pb.className="SpatialDropout1D",rs(pb);class fb extends Vm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,lf(this.units,"units"),this.activation=wy(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Nm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Nm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=vf(e.kernelConstraint),this.biasConstraint=vf(e.biasConstraint),this.kernelRegularizer=Cy(e.kernelRegularizer),this.biasRegularizer=Cy(e.biasRegularizer),this.activityRegularizer=Cy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Rm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Rm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e),r=df(this.activation.getClassName());let a;return null!=r?a=Yf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Yf(n,this.kernel.read()),null!=this.bias&&(a=em(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:yy(this.activation),useBias:this.useBias,kernelInitializer:Im(this.kernelInitializer),biasInitializer:Im(this.biasInitializer),kernelRegularizer:Iy(this.kernelRegularizer),biasRegularizer:Iy(this.biasRegularizer),activityRegularizer:Iy(this.activityRegularizer),kernelConstraint:wf(this.kernelConstraint),biasConstraint:wf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fb.className="Dense",rs(fb);class mb extends Vm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Rm(e);for(const t of e.slice(1))if(null==t)throw new Up(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Mf(e,1)]}call(e,t){return os((()=>{this.invokeCallHook(e,t);let n=$m(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Up(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Mf(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}mb.className="Flatten",rs(mb);class gb extends Vm{constructor(e){super(e),this.supportsMasking=!0,this.activation=wy(e.activation)}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e);return this.activation.apply(n)}))}getConfig(){const e={activation:yy(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}gb.className="Activation",rs(gb);class yb extends Vm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return os((()=>{return e=$m(e),t=e,n=this.n,os((()=>{if(2!==t.shape.length)throw new Up(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Kf(Vf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}yb.className="RepeatVector",rs(yb);class bb extends Vm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Up("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Mf(e);if(null!==s){if(0===a||i%a!=0)throw new Up(n);r[s]=i/a}else if(i!==a)throw new Up(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}bb.className="Reshape",rs(bb);class wb extends Vm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=Pf(1,e.dims.length+1);if(!B(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Lm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Rm(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Cs($m(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}wb.className="Permute",rs(wb);class xb extends Vm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=$m(e);return Es(Xi(n,this.maskValue),-1)}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e),r=Es(Xi(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}xb.className="Masking",rs(xb);class vb extends Vm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Yp(e.inputLength))}this.inputDim=e.inputDim,lf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,lf(this.outputDim,"outputDim"),this.embeddingsInitializer=Nm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Cy(e.embeddingsRegularizer),this.activityRegularizer=Cy(e.activityRegularizer),this.embeddingsConstraint=vf(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return os((()=>this.maskZero?(e=$m(e),Xi(e,Qi(e))):null))}computeOutputShape(e){if(e=Rm(e),null==this.inputLength)return[...e,this.outputDim];const t=Yp(this.inputLength);if(t.length!==e.length-1)throw new Up(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Up(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return os((()=>{this.invokeCallHook(e,t);let n=$m(e);return"int32"!==n.dtype&&(n=Wf(n,"int32")),Zf(this.embeddings.read(),n.as1D()).reshape(Rm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Im(this.embeddingsInitializer),embeddingsRegularizer:Iy(this.embeddingsRegularizer),activityRegularizer:Iy(this.activityRegularizer),embeddingsConstraint:wf(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}vb.className="Embedding",rs(vb);class kb extends Vm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Hp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Up("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Rm(e)]),(e=e).length<2)throw new Up(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=af(t),t.length>1)throw new Up(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===af(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return os((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=zf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Vf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=r.reshape([a].concat(Mf(e.slice(1))));i=Cs(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const a=Pf(1,e).concat([0]);t.push(Cs(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Cs(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(Pf(0,a-1));r=Cs(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=af(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return os((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Up("`mask` should be an Array");if(!Array.isArray(e))throw new Up("`inputs` should be an Array");if(t.length!==e.length)throw new Up(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:yi(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Bi(n,t[e]);return n}))}}class Ib extends kb{constructor(e){super(e)}mergeFunction(e){return os((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ms(t,e[n]);return t}))}}Ib.className="Add",rs(Ib);class Nb extends kb{constructor(e){super(e)}mergeFunction(e){return os((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$i(t,e[n]);return t}))}}Nb.className="Multiply",rs(Nb);class Cb extends kb{constructor(e){super(e)}mergeFunction(e){return os((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ms(t,e[n]);return $i(1/e.length,t)}))}}Cb.className="Average",rs(Cb);class Sb extends kb{constructor(e){super(e)}mergeFunction(e){return os((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=_i(t,e[n]);return t}))}}Sb.className="Maximum",rs(Sb);class Eb extends kb{constructor(e){super(e)}mergeFunction(e){return os((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Gi(t,e[n]);return t}))}}Eb.className="Minimum",rs(Eb);class Tb extends kb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Up("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(B(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Up("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return os((()=>jf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Up("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Up("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Up("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Up(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return os((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(eo(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(yi(t[n],-1)):r.push(t[n]);const a=Js(r,this.axis);return Ss(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ab(e,t){for(;e<0;)e+=t;return e}Tb.className="Concatenate",rs(Tb);class _b extends kb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){D(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Hp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Up(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Up(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ab(t,e[n].shape.length))):[Ab(this.axes,n.shape.length),Ab(this.axes,r.shape.length)],this.normalize&&(n=rg(n,t[0]),r=rg(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Hp("batchDot is not implemented for tensors of 4D or higher rank yet");if(D(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length)),D(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Hp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return os((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ab(this.axes,e.length),Ab(this.axes,t.length)],n}computeOutputShape(e){D(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Hp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}_b.className="Dot",rs(_b);class $b extends Vm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e);return nm((()=>Xf(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}$b.className="GaussianNoise",rs($b);class Rb extends Vm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return os((()=>{this.invokeCallHook(e,t);const n=$m(e);return this.rate>0&&this.rate<1?nm((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Xf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Rb.className="GaussianDropout",rs(Rb);class Db extends Vm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||$m(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return os((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return nm((()=>{const t=$m(e),r=-1.7580993408473766;let a=Ai(oo(n),this.rate);a=Wf(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>$m(e)),t.training||!1)}return e}))}}function Fb(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=js(e,t,n,r,a,s);else if(3===e.rank)i=qs(e,t,n,r,a,s);else{if(4!==e.rank)throw new Hp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ks(e,t,n,r,a,s)}return i}Db.className="AlphaDropout",rs(Db);class Ob extends Vm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Nm(e.betaInitializer||"zeros"),this.gammaInitializer=Nm(e.gammaInitializer||"ones"),this.movingMeanInitializer=Nm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Nm(e.movingVarianceInitializer||"ones"),this.betaConstraint=vf(e.betaConstraint),this.gammaConstraint=vf(e.gammaConstraint),this.betaRegularizer=Cy(e.betaRegularizer),this.gammaRegularizer=Cy(e.gammaRegularizer)}build(e){e=Rm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Up(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new Lm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return os((()=>{const n=null!=t.training&&t.training,r=$m(e),a=r.shape,s=a.length,i=Pf(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=jp(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!B(l,Pf(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return Fb(r,e,t,n,a,this.epsilon)}return Fb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=function(e,t,n,r,a=.001){return B(r.slice().sort(),Pf(0,e.rank-1))?function(e,t,n,r,a=.001){return os((()=>{const s=qi(e,r),i=s.mean,o=s.variance;return[Fb(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return os((()=>{const s=qi(e,r),i=s.mean,o=s.variance,u=[];for(const t of Pf(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),d=null==t?null:t.reshape(u),h=null==n?null:n.reshape(u);return[Fb(e,l,c,h,d,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{os((()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Im(this.betaInitializer),gammaInitializer:Im(this.gammaInitializer),movingMeanInitializer:Im(this.movingMeanInitializer),movingVarianceInitializer:Im(this.movingVarianceInitializer),betaRegularizer:Iy(this.betaRegularizer),gammaRegularizer:Iy(this.gammaRegularizer),betaConstraint:wf(this.betaConstraint),gammaConstraint:wf(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ob.className="BatchNormalization",rs(Ob);class Mb extends Vm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Nm(e.betaInitializer||"zeros"),this.gammaInitializer=Nm(e.gammaInitializer||"ones"),this.betaRegularizer=Cy(e.betaRegularizer),this.gammaRegularizer=Cy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Rm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error("Invalid axis: "+e);if(this.axis.length!==af(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=$m(e),r=n.shape,a=r.length;return os((()=>{let{mean:e,variance:t}=qi(n,this.axis,!0);const s=jp(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),Fb(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Im(this.betaInitializer),gammaInitializer:Im(this.gammaInitializer),betaRegularizer:Iy(this.betaRegularizer),gammaRegularizer:Iy(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Mb.className="LayerNormalization",rs(Mb);class Lb extends Vm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Up(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Up(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Up(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Lm({ndim:4})]}computeOutputShape(e){let t,n;return e=Rm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return os((()=>{return t=$m(e),n=this.padding,r=this.dataFormat,os((()=>{if(4!==t.rank)throw new Up("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Up("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Up(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],to(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Bb(e,t,n,r,a,s){return os((()=>{let i;Ef(a),Af(s),Tf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Oy(e,a);const o="same"===r?"same":"valid";return i="max"===s?zi(e,t,n,o):Vs(e,t,n,o),"channelsFirst"===a&&(i=Cs(i,[0,3,1,2])),i}))}function zb(e,t,n,r,a,s){return os((()=>{let i;Ef(a),Af(s),Tf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=My(e,a);const o="same"===r?"same":"valid";return i="max"===s?Pi(e,t,n,o):Us(e,t,n,o),"channelsFirst"===a&&(i=Cs(i,[0,4,1,2,3])),i}))}Lb.className="ZeroPadding2D",rs(Lb);class Pb extends Vm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Up("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(lf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Up("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}lf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Tf(this.padding),this.inputSpec=[new Lm({ndim:3})]}computeOutputShape(e){const t=Dy((e=Rm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return os((()=>{this.invokeCallHook(e,t),e=Vf($m(e),2);const n=this.poolingFunction($m(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return So(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Wb extends Pb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),Bb(e,t,n,r,a,"max")}}Wb.className="MaxPooling1D",rs(Wb);class Vb extends Pb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),Bb(e,t,n,r,a,"avg")}}Vb.className="AveragePooling1D",rs(Vb);class Ub extends Vm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Up("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];lf(this.poolSize,"poolSize"),lf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ef(this.dataFormat),Tf(this.padding),this.inputSpec=[new Lm({ndim:4})]}computeOutputShape(e){e=Rm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Dy(t,this.poolSize[0],this.padding,this.strides[0]),n=Dy(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return os((()=>(this.invokeCallHook(e,t),this.poolingFunction($m(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Hb extends Ub{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),Bb(e,t,n,r,a,"max")}}Hb.className="MaxPooling2D",rs(Hb);class Gb extends Ub{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),Bb(e,t,n,r,a,"avg")}}Gb.className="AveragePooling2D",rs(Gb);class jb extends Vm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Up("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];lf(this.poolSize,"poolSize"),lf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ef(this.dataFormat),Tf(this.padding),this.inputSpec=[new Lm({ndim:5})]}computeOutputShape(e){e=Rm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Dy(t,this.poolSize[0],this.padding,this.strides[0]),n=Dy(n,this.poolSize[1],this.padding,this.strides[1]),r=Dy(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return os((()=>(this.invokeCallHook(e,t),this.poolingFunction($m(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qb extends jb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),zb(e,t,n,r,a,"max")}}qb.className="MaxPooling3D",rs(qb);class Kb extends jb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ef(a),Tf(r),zb(e,t,n,r,a,"avg")}}Kb.className="AveragePooling3D",rs(Kb);class Xb extends Vm{constructor(e){super(e),this.inputSpec=[new Lm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Hp}}class Yb extends Xb{constructor(e){super(e||{})}call(e,t){return os((()=>{const t=$m(e);return Ui(t,1)}))}}Yb.className="GlobalAveragePooling1D",rs(Yb);class Zb extends Xb{constructor(e){super(e||{})}call(e,t){return os((()=>{const t=$m(e);return Fi(t,1)}))}}Zb.className="GlobalMaxPooling1D",rs(Zb);class Jb extends Vm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ef(this.dataFormat),this.inputSpec=[new Lm({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Hp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Qb extends Jb{call(e,t){return os((()=>{const t=$m(e);return"channelsLast"===this.dataFormat?Ui(t,[1,2]):Ui(t,[2,3])}))}}Qb.className="GlobalAveragePooling2D",rs(Qb);class ew extends Jb{call(e,t){return os((()=>{const t=$m(e);return"channelsLast"===this.dataFormat?Fi(t,[1,2]):Fi(t,[2,3])}))}}ew.className="GlobalMaxPooling2D",rs(ew);class tw extends Vm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=ng(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class nw extends tw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Rm(e)).length<3)throw new Up("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Rm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return os((()=>Yy(((e,n)=>[$m(this.layer.call(e,t)),[]]),e=$m(e),[],!1,null,null,!1,!0)[1]))}}nw.className="TimeDistributed",rs(nw);class rw extends tw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ng(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ng(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,of(Cf,"BidirectionalMergeMode",a),e.weights)throw new Hp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Xp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Xy(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Up("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Lm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Hp("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Bm;for(const e of s)if(e instanceof Bm!==o)throw new Up("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return os((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ho(a,1)),"concat"===this.mergeMode?i=jf([r,a]):"sum"===this.mergeMode?i=ms(r,a):"ave"===this.mergeMode?i=$i(.5,ms(r,a)):"mul"===this.mergeMode?i=$i(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){$f(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),$f(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ng(t.layer);if(delete t.layer,null!=t.numConstants)throw new Hp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}rw.className="Bidirectional",rs(rw),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(ob||(ob={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ub||(ub={}));const aw={};function sw(e){return aw[e]}function iw(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return ow(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>ow(e,n,r,a)));const o=ow(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:ae(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function ow(e,t,n,r){const[a,s]=cw(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[lw(a,e)]));return void 0!==i?t[lw(a,i)][s]:void 0}function uw(e,t){const[n,r]=cw(e);return[lw(n,t&&t.currentContextId),r]}function lw(e,t){return t?`${e}-${t}`:e}function cw(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function dw(e,t,n){let r=iw("pad",e,t,n);if("explicit"===r){r=iw("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function hw(e){return e.kept?e:Na(e)}const pw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mw=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],gw=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],yw=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],bw=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ww=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],xw=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],vw=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],kw=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Iw=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Nw=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Cw=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Sw=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ew=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Tw=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Aw=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class _w{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,s,i,o,u,l,c,f,p,d,m,g,y,b,w,x,h].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=uw(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=uw(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=uw(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=sw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=Rw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Rw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Vw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Fw(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Fw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Ww(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ww(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Dw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Dw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Hw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Pw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Pw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Uw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Lw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Lw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Bw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Bw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Mw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Mw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=uw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ow(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=uw(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=uw(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function $w(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=pe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Rw(e,t,n,r=!1){const a=e[t];return null!=a?$w(a.s,r):n}function Dw(e,t,n){const r=e[t];return r?r.b:n}function Fw(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Ow(e){switch("string"==typeof e&&(e=ob[e]),e){case ob.DT_FLOAT:return"float32";case ob.DT_INT32:case ob.DT_INT64:case ob.DT_INT8:case ob.DT_UINT8:return"int32";case ob.DT_BOOL:return"bool";case ob.DT_DOUBLE:return"float32";case ob.DT_STRING:return"string";default:return null}}function Mw(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Lw(e,t,n){const r=e[t];return r&&r.type?Ow(r.type):n}function Bw(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Ow(e))):n}function zw(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Pw(e,t,n){const r=e[t];return r&&r.shape?zw(r.shape):n}function Ww(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Vw(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>$w(e,r))):n}function Uw(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>zw(e))):n}function Hw(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Gw{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ow(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ow(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Fw(this.node.rawAttrs,e,t);if(null!=n.s)return Rw(this.node.rawAttrs,e,t);if(null!=n.b)return Dw(this.node.rawAttrs,e,t);if(null!=n.shape)return Pw(this.node.rawAttrs,e,t);if(null!=n.type)return Lw(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ww(this.node.rawAttrs,e,t);if(null!=n.list.s)return Vw(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Uw(this.node.rawAttrs,e,t);if(null!=n.list.b)return Hw(this.node.rawAttrs,e,t);if(null!=n.list.type)return Bw(this.node.rawAttrs,e,t)}return t}}const jw=zr({addN_:function(e){D(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),D(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+e.length));const t=e.map(((e,t)=>Lr(e,"tensors"+t,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!B(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return _r.runKernelFunc(((e,n)=>{const r=e.addN(t);return n(t),r}),r,null,ke)}});function qw(e,t,n=""){D(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class Kw{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=hs(0),ls(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),qw(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ls(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Vr([],[0].concat(this.elementShape));const n=this.readMany(e);return qw(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Eo(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Vr([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return qw(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Js(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Ro(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];os((()=>{t=Ns(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ns(go(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Xw{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);qw(t,e.shape,"TensorList shape mismatch: "),ls(e)})),this.idTensor=hs(0),this.maxNumElements=r,ls(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Xw([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return qw(e,this.elementShape,"TensorList shape mismatch: "),os((()=>{const t=this.tensors.map((t=>Ns(t,e)));return Eo(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return qw(n.shape,e,"TensorList shape mismatch: "),Ns(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(qw(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ls(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return qw(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);qw(this.elementShape,t.shape,"TensorList shape mismatch: "),ls(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return qw(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Vr([],[0].concat(this.elementShape)):os((()=>{const t=e.map((e=>Ns(this.tensors[e],n)));return Eo(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return qw(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Vr([],[0].concat(this.elementShape)):os((()=>{const e=this.tensors.map((e=>Ns(e,t)));return Js(e,0)}))}}const Yw=zr({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Lr(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=_r.runKernel(Bt,s,i);return{result:o[0],indexes:o[1]}}});function Zw(e,t,n){const[r,a]=iw("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=iw("numArgs",e,t,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=iw("strides",e,t,n),c=dw(e,t,n),d=iw("dataFormat",e,t,n).toUpperCase(),h=iw("dilations",e,t,n),[p,f]=iw("args",e,t,n);return{stride:l,pad:c,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:a}}function Jw(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return _r.runKernelFunc((r=>r.linspace(e,t,n)),{},null,"LinSpace",r)}const Qw=zr({multinomial_:function(e,t,n,r=!1){const a=Lr(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?Ns(a,[1,-1]):a,u=_r.runKernelFunc((e=>e.multinomial(o,r,t,n)),{logits2D:o});return 1===i?Ns(u,[u.size]):u}}),ex=async function(e){const t=Lr(e,"condition","whereAsync","bool"),n=await t.data(),r=kl(t.shape,n);return e!==t&&t.dispose(),r};function tx(e,t,n){return{boxes:iw("boxes",e,t,n),scores:iw("scores",e,t,n),maxOutputSize:iw("maxOutputSize",e,t,n),iouThreshold:iw("iouThreshold",e,t,n),scoreThreshold:iw("scoreThreshold",e,t,n),softNmsSigma:iw("softNmsSigma",e,t,n)}}class nx{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=hs(0),this.tensorMap=new Map,ls(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),os((()=>{const e=Ro(t),r=n.length,a=e.length;D(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];ls(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return os((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Eo(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}const rx=zr({sparseToDense_:function(e,t,n,r=0){const a=Lr(e,"sparseIndices","sparseToDense","int32"),s=Lr(t,"sparseValues","sparseToDense"),i=Lr(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return _r.runKernelFunc((e=>e.sparseToDense(a,s,n,i)),o,null,"SparseToDense",u)}}),ax=zr({scatterND_:function(e,t,n){const r=Lr(e,"indices","scatterND","int32"),a=Lr(t,"updates","scatterND");Ba(a,r,n);const s={indices:r,updates:a},i={shape:n};return _r.runKernelFunc((e=>e.scatterND(r,a,n)),s,null,dn,i)}}),sx=zr({gatherND_:function(e,t){const n=Lr(t,"indices","gatherND","int32"),r=Lr(e,"x","gatherND"),a={params:r,indices:n};return _r.runKernelFunc((e=>e.gatherND(r,n)),a,null,yt)}});function ix(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return os((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ms(iw("a",e,t,n),iw("b",e,t,n))];case"AddN":return[jw(iw("tensors",e,t,n))];case"FloorMod":case"Mod":return[vd(iw("a",e,t,n),iw("b",e,t,n))];case"Mul":return[$i(iw("a",e,t,n),iw("b",e,t,n))];case"RealDiv":case"Div":return[ci(iw("a",e,t,n),iw("b",e,t,n))];case"DivNoNan":return[Pd(iw("a",e,t,n),iw("b",e,t,n))];case"FloorDiv":return[li(iw("a",e,t,n),iw("b",e,t,n))];case"Sub":return[Oi(iw("a",e,t,n),iw("b",e,t,n))];case"Minimum":return[Gi(iw("a",e,t,n),iw("b",e,t,n))];case"Maximum":return[_i(iw("a",e,t,n),iw("b",e,t,n))];case"Pow":return[ku(iw("a",e,t,n),iw("b",e,t,n))];case"SquaredDifference":return[_u(iw("a",e,t,n),iw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return os((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[fs(iw("x",e,t,n))];case"Acos":return[wd(iw("x",e,t,n))];case"Acosh":return[xd(iw("x",e,t,n))];case"Asin":return[Rd(iw("x",e,t,n))];case"Asinh":return[Dd(iw("x",e,t,n))];case"Atan":return[Fd(iw("x",e,t,n))];case"Atan2":return[Od(iw("x",e,t,n),iw("y",e,t,n))];case"Atanh":return[Md(iw("x",e,t,n))];case"Ceil":return[Ld(iw("x",e,t,n))];case"Complex":return[Pr(iw("real",e,t,n),iw("imag",e,t,n))];case"Cos":return[ud(iw("x",e,t,n))];case"Cosh":return[cd(iw("x",e,t,n))];case"Elu":return[di(iw("x",e,t,n))];case"Erf":return[Kd(iw("x",e,t,n))];case"Exp":return[gi(iw("x",e,t,n))];case"Expm1":return[Xd(iw("x",e,t,n))];case"Floor":return[vi(iw("x",e,t,n))];case"Log":return[Di(iw("x",e,t,n))];case"Log1p":return[$u(iw("x",e,t,n))];case"Imag":return[Zi(iw("x",e,t,n))];case"Neg":return[Ki(iw("x",e,t,n))];case"Reciprocal":return[ih(iw("x",e,t,n))];case"Real":return[Ji(iw("x",e,t,n))];case"Relu":return[co(iw("x",e,t,n))];case"Round":return[oh(iw("x",e,t,n))];case"Selu":return[po(iw("x",e,t,n))];case"Sigmoid":return[mo(iw("x",e,t,n))];case"Sin":return[Jl(iw("x",e,t,n))];case"Sign":return[uh(iw("x",e,t,n))];case"Sinh":return[ec(iw("x",e,t,n))];case"Softplus":return[ko(iw("x",e,t,n))];case"Sqrt":return[Co(iw("x",e,t,n))];case"Square":return[ji(iw("x",e,t,n))];case"Tanh":return[To(iw("x",e,t,n))];case"Tan":return[ch(iw("x",e,t,n))];case"Relu6":case"ClipByValue":return[Xs(iw("x",e,t,n),iw("clipValueMin",e,t,n),iw("clipValueMax",e,t,n))];case"Rsqrt":return[pc(ow(e.inputNames[0],t,n))];case"Prod":return[sh(iw("x",e,t,n),iw("axes",e,t,n))];case"LeakyRelu":return[Ri(iw("x",e,t,n),iw("alpha",e,t,n))];case"Prelu":return[no(iw("x",e,t,n),iw("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=iw("thenBranch",e,t,n),a=iw("elseBranch",e,t,n),s=iw("cond",e,t,n),i=iw("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=iw("body",e,t,n),a=iw("cond",e,t,n),s=iw("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[hw(iw("pred",e,t,n))];case"Switch":{const r=iw("pred",e,t,n);let a=iw("data",e,t,n);return a.kept||(a=hw(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==ow(e,t,n)));return r?[hw(ow(r,t,n))]:void 0}case"Enter":{const r=iw("frameName",e,t,n),a=iw("tensor",e,t,n);return n.enterFrame(r),[hw(a)]}case"Exit":{const r=iw("tensor",e,t,n);return n.exitFrame(),[hw(r)]}case"NextIteration":{const r=iw("tensor",e,t,n);return n.nextIteration(),[hw(r)]}case"TensorArrayV3":{const r=iw("size",e,t,n),a=iw("dtype",e,t,n),s=iw("elementShape",e,t,n),i=iw("dynamicSize",e,t,n),o=iw("clearAfterRead",e,t,n),u=iw("identicalElementShapes",e,t,n),l=iw("name",e,t,n),c=new Kw(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,hs(1)]}case"TensorArrayWriteV3":{const r=iw("tensorArrayId",e,t,n),a=iw("index",e,t,n),s=iw("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=iw("tensorArrayId",e,t,n),a=iw("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=iw("tensorArrayId",e,t,n),a=iw("indices",e,t,n),s=iw("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=iw("tensorArrayId",e,t,n),a=iw("indices",e,t,n),s=iw("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=iw("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=iw("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=iw("tensorArrayId",e,t,n),a=iw("tensor",e,t,n),s=iw("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=iw("tensorArrayId",e,t,n);return[hs(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=iw("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=iw("tensorListId",e,t,n),a=iw("index",e,t,n),s=iw("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=iw("tensorListId",e,t,n),a=iw("index",e,t,n),s=iw("elementShape",e,t,n),i=iw("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=iw("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Xw([],n,e.dtype,r),i=Ro(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(iw("tensor",e,t,n),r,iw("elementShape",e,t,n),iw("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const i=(r=iw("elementShape",e,t,n),a=iw("elementDType",e,t,n),s=iw("numElements",e,t,n),new Xw([],r,a,s));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=iw("tensorListId",e,t,n),a=iw("indices",e,t,n),s=iw("elementShape",e,t,n),i=iw("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=iw("tensorListId",e,t,n),a=iw("elementShape",e,t,n),s=iw("elementDType",e,t,n),i=iw("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);qw(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Ro(e);return new Xw(a,t,r)}(iw("tensor",e,t,n),iw("elementShape",e,t,n),iw("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=iw("tensorListId",e,t,n),a=n.getTensorList(r.id),s=iw("dtype",e,t,n),i=iw("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=iw("tensorListId",e,t,n),a=iw("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=iw("tensorListId",e,t,n),a=iw("elementShape",e,t,n),s=iw("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=iw("tensor",e,t,n),a=iw("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=0===r?0:e.size/r,i=os((()=>{const i=[];e=Ns(e,[1,r,s]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],s];i[r]=Ns(go(e,o,u),n)}return e.dispose(),i})),o=new Xw([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(r,iw("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}var r,a,s})(e,t,n);case"convolution":return os((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=iw("stride",e,t,n),a=iw("pad",e,t,n),s=iw("dataFormat",e,t,n).toUpperCase(),i=iw("dilation",e,t,n);return[ai(iw("x",e,t,n),iw("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=iw("strides",e,t,n),a=dw(e,t,n),s=iw("dataFormat",e,t,n).toUpperCase(),i=iw("dilations",e,t,n);return[ri(iw("x",e,t,n),iw("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=Zw(e,t,n);return[qo({x:iw("x",e,t,n),filter:iw("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=Zw(e,t,n);return[Yo({x:iw("x",e,t,n),filter:iw("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=iw("outputShape",e,t,n),a=iw("strides",e,t,n),s=dw(e,t,n);return[ii(iw("x",e,t,n),iw("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=iw("strides",e,t,n),a=dw(e,t,n),s=iw("dilations",e,t,n),i=iw("dataFormat",e,t,n).toUpperCase();return[ui(iw("input",e,t,n),iw("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("dataFormat",e,t,n).toUpperCase(),i=iw("dilations",e,t,n);return[oi(iw("x",e,t,n),iw("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("kernelSize",e,t,n);return[Vs(iw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("kernelSize",e,t,n);return[zi(iw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("kernelSize",e,t,n),i=iw("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Yw(iw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("kernelSize",e,t,n);return[Us(iw("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("kernelSize",e,t,n);return[Pi(iw("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=iw("strides",e,t,n),a=iw("pad",e,t,n),s=iw("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[zd(iw("x",e,t,n),iw("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return os((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=iw("shape",e,t,n),a=iw("dtype",e,t,n);return[xi(r,iw("value",e,t,n),a)]}case"LinSpace":return[Jw(iw("start",e,t,n),iw("stop",e,t,n),iw("num",e,t,n))];case"Multinomial":{const r=iw("logits",e,t,n),a=iw("numSamples",e,t,n),s=iw("seed",e,t,n);return[Qw(r,a,s)]}case"OneHot":{const r=iw("indices",e,t,n),a=iw("depth",e,t,n),s=iw("onValue",e,t,n),i=iw("offValue",e,t,n);return[Yi(r,a,s,i)]}case"Ones":return[Vi(iw("shape",e,t,n),iw("dtype",e,t,n))];case"OnesLike":return[eo(iw("x",e,t,n))];case"RandomUniform":return[oo(iw("shape",e,t,n),iw("minval",e,t,n),iw("maxval",e,t,n),iw("dtype",e,t,n))];case"Range":return[lo(iw("start",e,t,n),iw("stop",e,t,n),iw("step",e,t,n),iw("dtype",e,t,n))];case"TruncatedNormal":{const r=iw("shape",e,t,n),a=iw("mean",e,t,n),s=iw("stdDev",e,t,n),i=iw("seed",e,t,n);return[$o(r,a,s,iw("dtype",e,t,n),i)]}case"Zeros":return[Wi(iw("shape",e,t,n),iw("dtype",e,t,n))];case"ZerosLike":return[Qi(iw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=tx(e,t,n),l=await Du.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=tx(e,t,n),u=iw("padToMaxOutputSize",e,t,n),l=await Du.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=tx(e,t,n);return[await Du.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ia(iw("condition",e,t,n),"bool"),a=[await ex(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=Lr(e,"x","setdiff1d"),r=Lr(t,"y","setdiff1d");D(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),D(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),D(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new lr([o],n.dtype),l=new lr([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}(iw("x",e,t,n),iw("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return os((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=iw("x",e,t,n),a=iw("k",e,t,n),s=iw("sorted",e,t,n),i=dh(r,a,s);return[i.values,i.indices]}case"Unique":{const r=iw("x",e,t,n),a=hh(r);return[a.values,a.indices]}case"UniqueV2":{const r=iw("x",e,t,n),a=iw("axis",e,t,n),s=hh(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return os((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=iw("images",e,t,n),a=iw("size",e,t,n),s=iw("alignCorners",e,t,n);return[Du.resizeBilinear(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=iw("images",e,t,n),a=iw("size",e,t,n),s=iw("alignCorners",e,t,n);return[Du.resizeNearestNeighbor(r,[a[0],a[1]],s)]}case"CropAndResize":{const r=iw("image",e,t,n),a=iw("boxes",e,t,n),s=iw("boxInd",e,t,n),i=iw("cropSize",e,t,n),o=iw("method",e,t,n),u=iw("extrapolationValue",e,t,n);return[Du.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return os((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=iw("default",e,t,n);return[ow(e.name,t,n)||r];case"Placeholder":return[ow(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[hw(iw("x",e,t,n))];case"IdentityN":return iw("x",e,t,n).map((e=>hw(e)));case"Snapshot":return[hw(iw("x",e,t,n))];case"Shape":return[uo(iw("x",e,t,n).shape,"int32")];case"ShapeN":return iw("x",e,t,n).map((e=>uo(e.shape)));case"Size":return[hs(iw("x",e,t,n).size,"int32")];case"Rank":return[hs(iw("x",e,t,n).rank,"int32")];case"NoOp":return[hs(1)];case"Print":const a=iw("x",e,t,n),s=iw("data",e,t,n),i=iw("message",e,t,n),o=iw("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return os((()=>((e,t,n)=>{switch(e.op){case"Equal":return[mi(iw("a",e,t,n),iw("b",e,t,n))];case"NotEqual":return[Xi(iw("a",e,t,n),iw("b",e,t,n))];case"Greater":return[Ti(iw("a",e,t,n),iw("b",e,t,n))];case"GreaterEqual":return[Ai(iw("a",e,t,n),iw("b",e,t,n))];case"Less":return[$c(iw("a",e,t,n),iw("b",e,t,n))];case"LessEqual":return[xu(iw("a",e,t,n),iw("b",e,t,n))];case"LogicalAnd":return[Bi(iw("a",e,t,n),iw("b",e,t,n))];case"LogicalNot":return[rd(iw("a",e,t,n))];case"LogicalOr":return[th(iw("a",e,t,n),iw("b",e,t,n))];case"Select":case"SelectV2":return[Fo(iw("condition",e,t,n),iw("a",e,t,n),iw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return os((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Zo(iw("a",e,t,n),iw("b",e,t,n),iw("transposeA",e,t,n),iw("transposeB",e,t,n))];case"Transpose":return[Cs(iw("x",e,t,n),iw("perm",e,t,n))];case"_FusedMatMul":const[r,a]=iw("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=iw("numArgs",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=iw("args",e,t,n);return[Jo({a:iw("a",e,t,n),b:iw("b",e,t,n),transposeA:iw("transposeA",e,t,n),transposeB:iw("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return os((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Gs(iw("x",e,t,n),iw("mean",e,t,n),iw("variance",e,t,n),iw("offset",e,t,n),iw("scale",e,t,n),iw("epsilon",e,t,n))];case"LRN":return[Qd(iw("x",e,t,n),iw("radius",e,t,n),iw("bias",e,t,n),iw("alpha",e,t,n),iw("beta",e,t,n))];case"Softmax":return[vo(iw("x",e,t,n))];case"LogSoftmax":return[Li(iw("x",e,t,n))];case"SparseToDense":return[rx(iw("sparseIndices",e,t,n),iw("outputShape",e,t,n),iw("sparseValues",e,t,n),iw("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return os((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Fi(iw("x",e,t,n),r,a)]}case"Mean":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Ui(iw("x",e,t,n),r,a)]}case"Min":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Hi(iw("x",e,t,n),r,a)]}case"Sum":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Mi(iw("x",e,t,n),r,a)]}case"All":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Ss(iw("x",e,t,n),r,a)]}case"Any":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[Es(iw("x",e,t,n),r,a)]}case"ArgMax":{const r=iw("axis",e,t,n);return[Ts(iw("x",e,t,n),r)]}case"ArgMin":{const r=iw("axis",e,t,n);return[$d(iw("x",e,t,n),r)]}case"Prod":{const r=iw("axis",e,t,n),a=iw("keepDims",e,t,n);return[sh(iw("x",e,t,n),r,a)]}case"Cumsum":{const r=iw("axis",e,t,n),a=iw("exclusive",e,t,n),s=iw("reverse",e,t,n);return[nc(iw("x",e,t,n),r,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return os((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=iw("n",e,t,n),a=iw("axis",e,t,n);let s=iw("tensors",e,t,n);return s=s.slice(0,r),[Js(s,a)]}case"GatherV2":case"Gather":{const r=iw("axis",e,t,n),a=iw("x",e,t,n),s=iw("indices",e,t,n);return[Ei(a,Ia(s,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=iw("axis",e,t,n),a=iw("x",e,t,n);return[ho(a,r)]}case"Slice":{const r=iw("begin",e,t,n),a=iw("size",e,t,n);return[go(iw("x",e,t,n),r,a)]}case"StridedSlice":{const r=iw("begin",e,t,n),a=iw("end",e,t,n),s=iw("strides",e,t,n),i=iw("beginMask",e,t,n),o=iw("endMask",e,t,n),u=iw("ellipsisMask",e,t,n),l=iw("newAxisMask",e,t,n),c=iw("shrinkAxisMask",e,t,n),d=iw("x",e,t,n);return[lh(d,r,a,s,i,o,u,l,c)]}case"Pack":return os((()=>{const r=iw("axis",e,t,n),a=iw("tensors",e,t,n),s=a[0].shape,i=So(a[0]).shape,o=a.map((e=>{const t=B(e.shape,s);if(!t&&!B(So(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ns(e,s)}));return[Eo(o,r)]}));case"Unpack":{const r=iw("axis",e,t,n),a=iw("tensor",e,t,n);return Ro(a,r)}case"Tile":{const r=iw("reps",e,t,n);return[bi(iw("x",e,t,n),r)]}case"Split":case"SplitV":{const r=iw("axis",e,t,n),a=iw("numOrSizeSplits",e,t,n),s=iw("x",e,t,n);return No(s,a,r)}case"ScatterNd":{const r=iw("indices",e,t,n),a=iw("values",e,t,n),s=iw("shape",e,t,n);return[ax(r,a,s)]}case"GatherNd":{const r=iw("x",e,t,n),a=iw("indices",e,t,n);return[sx(r,a)]}case"SparseToDense":{const r=iw("sparseIndices",e,t,n),a=iw("outputShape",e,t,n),s=iw("sparseValues",e,t,n),i=iw("defaultValue",e,t,n);return[rx(r,s,a,s.dtype===i.dtype?i:Ia(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return os((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Mo(iw("x",e,t,n))];case"IFFT":return[Bo(iw("x",e,t,n))];case"RFFT":return[Lo(iw("x",e,t,n))];case"IRFFT":return[zo(iw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return os((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ia(iw("x",e,t,n),iw("dtype",e,t,n))];case"ExpandDims":{const r=iw("axis",e,t,n);return[yi(iw("x",e,t,n),r)]}case"Squeeze":{const r=iw("axis",e,t,n);return[So(iw("x",e,t,n),r)]}case"Reshape":return[Ns(iw("x",e,t,n),iw("shape",e,t,n))];case"MirrorPad":return[rh(iw("x",e,t,n),iw("padding",e,t,n),iw("mode",e,t,n))];case"PadV2":case"Pad":return[to(iw("x",e,t,n),iw("padding",e,t,n),iw("constantValue",e,t,n))];case"SpaceToBatchND":{const r=iw("blockShape",e,t,n),a=iw("paddings",e,t,n);return[Pl(iw("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=iw("blockShape",e,t,n),a=iw("crops",e,t,n);return[md(iw("x",e,t,n),r,a)]}case"DepthToSpace":{const r=iw("blockSize",e,t,n),a=iw("dataFormat",e,t,n).toUpperCase();return[Bd(iw("x",e,t,n),r,a)]}case"BroadcastTo":return[Do(iw("x",e,t,n),iw("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=iw("keyDType",e,t,n),s=iw("valueDType",e,t,n),i=new nx(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=iw("tableHandle",e,t,n,r),s=iw("keys",e,t,n),i=iw("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=iw("tableHandle",e,t,n,r),s=iw("keys",e,t,n),i=iw("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=sw(e.op);if(a&&a.customExecutor)return a.customExecutor(new Gw(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return de(a)?a.then((e=>[].concat(e))):[].concat(a)}class ox{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ux(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>cw(e)[0]));let c=[];null!=r&&(c=r.map((e=>cw(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(hx(e)||px(e)||fx(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const lx=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],cx=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],dx=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function hx(e){return lx.indexOf(e.op)>=0}function px(e){return cx.indexOf(e.op)>=0}function fx(e){return dx.indexOf(e.op)>=0}class mx{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new mx(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=ux(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>cw(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[cw(e)[0]])),a=t.map((e=>cw(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return os((()=>{const n=new ox(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=cw(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=ix(t,r,n,this._resourceManager);if(de(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>ow(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[lw(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new ox(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>ow(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[cw(e)[0]])),i=n.map((e=>cw(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=ux(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=cw(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;h.length>0;){const e=this.processStack(s,h,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!hx(e)&&!ow(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&iw("isConstant",e.node,r,n)&&([c]=uw(e.node.name,n)),null==r[e.node.name]){const d=ix(e.node,r,n,this._resourceManager);c||([c]=uw(e.node.name,n));const h=n.currentContext;de(d)?l.push(d.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=uw(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ow(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ow(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=cw(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;D(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&D(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=cw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=cw(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class gx{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class yx{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new gx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Da(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,Zr.getLoadHandlers(t,n));if(0===r.length)r.push(Da(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=L(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ur[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Yr()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=L(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Ur[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Vr(e,o,"float32"),i=Vr(r,o,"float32");n[t]=Pr(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Vr(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new mx(_w.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer){const t=_w.Instance.transformGraph(e.modelInitializer);this.initializer=new mx(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Jr(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof pr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}function bx(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(kx(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=bx(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function wx(e,t=vx){return xx(e,t)}function xx(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(kx(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=xx(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function vx(e){return null===e?null:kx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function kx(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof pr))}function Ix(e){return bx(e,Nx)}function Nx(e){return e instanceof pr?{value:e.clone(),recurse:!1}:kx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Cx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Sx extends Cx{constructor(){super(Sx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Sx.INITIAL_CAPACITY=32;class Ex{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Mx(this,e)}filter(e){return new Fx(this,e)}map(e){return new Ox(this,e)}mapAsync(e){return new Lx(this,e)}serialMapAsync(e){return new Lx(this,e).serial()}flatmap(e){return new zx(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Dx(this,e,t)}columnMajorBatch(e,t=!0,n=vx){return this.rowMajorBatch(e,t).map((e=>wx(e,n)))}concatenate(e,t){return new Px(new Tx([this,e]),t)}take(e){return e<0||null==e?this:new Rx(this,e)}skip(e){return e<0||null==e?this:new $x(this,e)}prefetch(e){return new Ux(this,e)}shuffle(e,t){return new Hx(this,e,t)}serial(){return new _x(this)}}class Tx extends Ex{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ix(e),done:!1}}}class Ax extends Ex{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class _x extends Ex{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class $x extends Ex{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;us(e.value)}return this.upstream.next()}}class Rx extends Ex{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Dx extends Ex{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Fx extends Ex{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;us(e.value)}}}class Ox extends Ex{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cr(e.value),n=this.transform(e.value),r=Cr(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Mx extends Ex{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Lx extends Ex{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cr(e.value),n=await this.transform(e.value),r=Cr(n);for(const e of t)Nr(e,r)||e.dispose();return{value:n,done:!1}}}class Bx extends Ex{constructor(){super(),this.outputQueue=new Sx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class zx extends Bx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Cr(e.value),n=this.transform(e.value),r=Cr(n);this.outputQueue.pushAll(n);for(const e of t)Nr(e,r)||e.dispose();return!0}}class Px extends Ex{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Wx,Vx;(Vx=Wx||(Wx={}))[Vx.FAIL=0]="FAIL",Vx[Vx.SHORTEST=1]="SHORTEST",Vx[Vx.LONGEST=2]="LONGEST";class Ux extends Ex{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Cx(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Hx extends Ux{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ro.alea(n||ir().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Gx{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return D(e>0,(()=>"batchSize needs to be positive, but it is\n      "+e)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),jx((async()=>(await n.iterator()).columnMajorBatch(e,t,qx)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,jx((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,jx((async()=>(await t.iterator()).filter((t=>os((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return jx((async()=>(await t.iterator()).map((t=>os((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return jx((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return jx((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,jx((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Ax(a)).take(e),new Px(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,jx((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=ro.alea(t||ir().toString());return jx((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,jx((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function jx(e,t=null){return new class extends Gx{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function qx(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof pr||X(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof pr?Eo(e):Vr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Kx(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&D("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the CPU backend."))}))}Gx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Xx=lu,Yx=wl,Zx=xl,Jx=vl,Qx=kl;class ev extends T{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new E(this,ss())}write(e,t,n){this.firstUse&&(this.firstUse=!1,pe().get("IS_NODE")&&il("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Z(n[0])){const a=n.map((e=>or(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?ul(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ur(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ka(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return ss().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=ir();return e(),{kernelMs:ir()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(e,t,n,r){Kx(e,"stridedSlice");const a=Va(t,n,r);if(a.some((e=>0===e)))return Vr([],a);const s=ka(a,e.dtype),i=this.bufferSync(e);for(let e=0;e<s.size;e++){const n=s.indexToLoc(e),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[e]*r[e]+t[e];s.set(i.get(...a),...n)}return s.toTensor()}diag(e){const t=this.readSync(e.dataId),n=ka([e.size,e.size],e.dtype),r=n.values;for(let n=0;n<t.length;n++)r[n*e.size+n]=t[n];return n.toTensor()}unstack(e,t){const n=e.shape[t],r=new Array(e.rank-1);let a=0;for(let n=0;n<e.rank;n++)n!==t&&(r[a++]=e.shape[n]);const s=new Array(e.rank).fill(0),i=e.shape.slice();i[t]=1;const o=new Array(n);for(let n=0;n<o.length;n++)s[t]=n,o[n]=go(e,s,i).reshape(r);return o}reverse(e,t){Kx(e,"reverse");const n=ka(e.shape,e.dtype),r=this.bufferSync(e);for(let a=0;a<n.size;a++){const s=n.indexToLoc(a),i=s.slice();t.forEach((t=>i[t]=e.shape[t]-1-i[t])),n.set(r.get(...i),...s)}return n.toTensor()}neg(e){return Kx(e,"neg"),$i(hs(-1),e)}addN(e){Kx(e,"addN");const t=e.map((e=>this.readSync(e.dataId))),n=ka(e[0].shape,e[0].dtype),r=n.values;for(let n=0;n<e.length;n++){const e=t[n];for(let t=0;t<r.length;t++)r[t]+=e[t]}return n.toTensor()}softmax(e,t){const n=H([t],e.shape),r=Fi(e,n),a=ws(r.shape,n),s=Oi(e,r.reshape(a)),i=gi(s),o=this.sum(i,n).reshape(a);return ci(i,o)}pow(e,t){return Kx([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.pow(e,t)))}floorDiv(e,t){return Kx([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",((e,t)=>Math.floor(e/t)))}sum(e,t){Kx(e,"sum"),xs("sum",t,e.rank);const[n,r]=bs(e.shape,t),a=Wi(n,vr(e.dtype,"int32")),s=L(r),i=this.readSync(a.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*s;let n=0;for(let e=0;e<s;++e)n+=o[t+e];i[e]=n}return a}prod(e,t){Kx(e,"sum");const[n,r]=bs(e.shape,t),a=Wi(n,vr(e.dtype,"int32")),s=L(r),i=this.readSync(a.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*s;let n=1;for(let e=0;e<s;++e)n*=o[t+e];i[e]=n}return a}unsortedSegmentSum(e,t,n){Kx(e,"unsortedSegmentSum");const r=[],a=e.rank-t.rank;for(let e=0;e<a;++e)t=t.expandDims(e+1);for(let a=0;a<n;++a){const n=hs(a,"int32"),s=mi(n,t).asType("float32").mul(e).sum(0);r.push(s)}return Eo(r)}argMin(e,t){Kx(e,"argMin");const n=[t];xs("argMin",n,e.rank);const[r,a]=bs(e.shape,n),s=Wi(r,"int32"),i=L(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId);for(let e=0;e<o.length;++e){const t=e*i;let n=u[t],r=0;for(let e=0;e<i;++e){const a=u[t+e];a<n&&(n=a,r=e)}o[e]=r}return s}argMax(e,t){Kx(e,"argMax");const n=[t];xs("argMax",n,e.rank);const[r,a]=bs(e.shape,n),s=Wi(r,"int32"),i=L(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId);for(let e=0;e<o.length;++e){const t=e*i;let n=u[t],r=0;for(let e=0;e<i;++e){const a=u[t+e];a>n&&(n=a,r=e)}o[e]=r}return s}cumsum(e,t,n,r){if(Kx(e,"cumsum"),t!==e.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${e.rank-1} but got axis=`+t);const a=vr(e.dtype,"int32"),s=Wi(e.shape,a),i=this.readSync(s.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?(e,t)=>e+u-t-1:(e,t)=>e+t;for(let e=0;e<o.length;e+=u)for(let t=0;t<u;t++){const r=l(e,t);if(0===t)i[r]=n?0:o[r];else{const a=l(e,t-1);i[r]=n?o[a]+i[a]:o[r]+i[a]}}return s}equal(e,t){return Kx([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e===t?1:0))}notEqual(e,t){return Kx([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e!==t?1:0))}less(e,t){return Kx([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<t?1:0))}lessEqual(e,t){return Kx([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<=t?1:0))}greater(e,t){return Kx([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>t?1:0))}greaterEqual(e,t){return Kx([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>=t?1:0))}logicalAnd(e,t){return Kx([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e&&t))}logicalOr(e,t){return Kx([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e||t))}select(e,t,n){Kx([e,t,n],"select");const r=this.readSync(e.dataId),a=this.readSync(t.dataId),s=this.readSync(n.dataId),i=Wi(t.shape,vr(t.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===e.rank||e.rank>1||1===t.rank?1:L(t.shape.slice(1));for(let e=0;e<r.length;e++)for(let t=0;t<l;t++)1===r[e]?o[u++]=a[e]:o[u++]=s[e];return i}where(e){Kx([e],"where");const t=this.readSync(e.dataId);return Qx(e.shape,t)}topk(e,t,n){Kx(e,"topk");const r=this.readSync(e.dataId);return Jx(r,e.shape,e.dtype,t,n)}min(e,t){Kx(e,"min"),xs("min",t,e.rank);const[n,r]=bs(e.shape,t),a=Wi(n,e.dtype),s=L(r),i=this.readSync(a.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*s;let n=o[t];for(let e=0;e<s;++e){const r=o[t+e];r<n&&(n=r)}i[e]=n}return a}minimum(e,t){return Kx([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.min(e,t)))}mod(e,t){return Kx([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))}maximum(e,t){return Kx([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.max(e,t)))}all(e,t){Kx(e,"all"),xs("all",t,e.rank);const[n,r]=bs(e.shape,t),a=Wi(n,e.dtype),s=L(r),i=this.readSync(a.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*s;let n=o[t];for(let e=0;e<s;++e){const r=o[t+e];n=n&&r}i[e]=n}return a}any(e,t){Kx(e,"any"),xs("any",t,e.rank);const[n,r]=bs(e.shape,t),a=Wi(n,e.dtype),s=L(r),i=this.readSync(a.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*s;let n=o[t];for(let e=0;e<s;++e){const r=o[t+e];n=n||r}i[e]=n}return a}squaredDifference(e,t){return Kx([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e-t;return n*n}))}eluDer(e,t){Kx([e,t],"eluDer");const n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId);for(let e=0;e<r.length;++e){const t=r[e];n[e]=t>=1?a[e]:a[e]*(t+1)}return this.makeOutput(n,t.shape,"float32")}atan2(e,t){return Kx([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.atan2(e,t)))}tile(e,t){return Kx(e,"tile"),Zx(this.bufferSync(e),t)}gather(e,t,n){Kx([e,t],"gather");const r=e.shape.slice(),a=this.readSync(t.dataId);r[n]=a.length;const s=ka(r,e.dtype),i=this.bufferSync(e);for(let e=0;e<s.size;++e){const t=s.indexToLoc(e),r=t.slice();r[n]=a[t[n]];const o=i.locToIndex(r);s.values[e]=i.values[o]}return s.toTensor()}batchToSpaceND(e,t,n){Kx([e],"batchToSpaceND");const r=t.reduce(((e,t)=>e*t)),a=qu(e.shape,t,r),s=Ku(a.length,t.length),i=Xu(e.shape,t,r),o=Yu(n,t.length),u=Zu(i,n,t.length);return Cs(e.reshape(a),s).reshape(i).slice(o,u)}pool3d(e,t,n){Kx(e,"pool3d");const r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),y=ka(t.outShape,e.dtype),b=y.values,w=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],x=t.outShape[2]*t.outShape[3]*t.outShape[4],v=t.outShape[3]*t.outShape[4],k=t.outShape[4];for(let y=0;y<t.batchSize;++y){const I=y*w,N=y*e.strides[0];for(let y=0;y<t.inChannels;++y)for(let w=0;w<t.outDepth;++w){const C=w*r-h;let S=C;for(;S<0;)S+=i;const E=Math.min(t.inDepth,l+C),T=I+w*x;for(let r=0;r<t.outHeight;++r){const l=r*a-p;let h=l;for(;h<0;)h+=o;const w=Math.min(t.inHeight,c+l),x=T+r*v;for(let r=0;r<t.outWidth;++r){const a=r*s-f;let l=a;for(;l<0;)l+=u;const c=Math.min(t.inWidth,d+a),p=x+r*k;let v=m,I=0,C=0;for(let t=S;t<E;t+=i){const r=N+t*e.strides[1];for(let t=h;t<w;t+=o){const a=r+t*e.strides[2];for(let t=l;t<c;t+=u){const r=g[a+t*e.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&(I+=r,C++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[p+y]="avg"===n?I/C:v}}}}return y.toTensor()}avgPool3d(e,t){return Kx(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()}avgPool3dBackprop(e,t,n){Kx([e,t],"avgPool3dBackprop");const r=n.strideDepth,a=n.strideHeight,s=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,d=n.dilationWidth,h=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=h-1-n.padInfo.front,g=f-1-n.padInfo.left,y=p-1-n.padInfo.top,b=ka(t.shape,"float32"),w=1/(i*o*u),x=this.bufferSync(e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const v=i-m,k=o-y,I=u-g;let N=0;for(let i=0;i<h;i+=l){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<p;r+=c){const i=(k+r)/a;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=d){const a=(I+r)/s;a<0||a>=n.outWidth||Math.floor(a)!==a||(N+=x.get(e,o,i,a,t))}}}b.set(N*w,e,i,o,u,t)}return b.toTensor()}maxPool3d(e,t){return Kx(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()}maxPool3dPositions(e,t){const n=ka(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e);for(let e=0;e<t.batchSize;++e)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let w=b;for(;w<0;)w+=i;const x=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let h=l;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,d+p);let N=Number.NEGATIVE_INFINITY,C=-1;for(let t=w;t<x;t+=i){const n=t-b;for(let r=h;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=m.get(e,t,r,s,g);o>=N&&(N=o,C=n*c*d+a*c+i)}}}n.set(C,e,y,r,a,g)}}}return n.toTensor()}maxPool3dBackprop(e,t,n,r){Kx([t,n],"maxPool3dBackprop");const a=this.maxPool3dPositions(t,r),s=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=d-1-r.padInfo.front,m=p-1-r.padInfo.left,g=h-1-r.padInfo.top,y=ka(t.shape,"float32"),b=this.bufferSync(a),w=this.bufferSync(e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.inDepth;++n)for(let a=0;a<r.inHeight;++a)for(let x=0;x<r.inWidth;++x){const v=n-f,k=a-g,I=x-m;let N=0;for(let n=0;n<d;n+=u){const a=(v+n)/s;if(!(a<0||a>=r.outDepth||Math.floor(a)!==a))for(let s=0;s<h;s+=l){const u=(k+s)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<p;i+=c){const l=(I+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=d*h*p-1-b.get(e,a,u,l,t)===n*h*p+s*p+i?1:0;0!==c&&(N+=w.get(e,a,u,l,t)*c)}}}y.set(N,e,n,a,x,t)}return y.toTensor()}resizeBilinear(e,t,n,r){Kx(e,"resizeBilinear");const[a,s,i,o]=e.shape,u=this.readSync(e.dataId),l=new Float32Array(L([a,t,n,o])),c=[r&&t>1?s-1:s,r&&n>1?i-1:i],d=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h=0;const p=c[0]/d[0],f=c[1]/d[1];for(let r=0;r<a;r++)for(let a=0;a<t;a++){const t=p*a,c=Math.floor(t),d=t-c,m=Math.min(s-1,Math.ceil(t)),g=r*e.strides[0]+c*e.strides[1],y=r*e.strides[0]+m*e.strides[1];for(let t=0;t<n;t++){const n=f*t,r=Math.floor(n),a=n-r,s=Math.min(i-1,Math.ceil(n)),c=g+r*e.strides[2],p=y+r*e.strides[2],m=g+s*e.strides[2],b=y+s*e.strides[2];for(let e=0;e<o;e++){const t=u[c+e],n=u[p+e],r=t+(u[m+e]-t)*a,s=r+(n+(u[b+e]-n)*a-r)*d;l[h++]=s}}}return Vr(l,[a,t,n,o])}resizeBilinearBackprop(e,t,n){Kx([e,t],"resizeBilinearBackprop");const[r,a,s,i]=t.shape,[,o,u]=e.shape,l=new Float32Array(r*a*s*i),c=[n&&o>1?a-1:a,n&&u>1?s-1:s],d=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=c[0]/d[0],p=c[1]/d[1],f=this.readSync(e.dataId);let m=0;for(let e=0;e<r;e++){const n=e*t.strides[0];for(let e=0;e<o;e++){const r=e*h,o=Math.floor(r),c=Math.min(Math.ceil(r),a-1),d=n+o*t.strides[1],g=n+c*t.strides[1],y=r-o,b=1-y;for(let e=0;e<u;e++){const n=e*p,r=Math.floor(n),a=Math.min(Math.ceil(n),s-1),o=n-r,u=1-o,c=d+r*t.strides[2],h=d+a*t.strides[2],w=g+r*t.strides[2],x=g+a*t.strides[2],v=b*u,k=b*o,I=y*u,N=y*o;for(let e=0;e<i;e++){const t=f[m++];l[c+e]+=t*v,l[h+e]+=t*k,l[w+e]+=t*I,l[x+e]+=t*N}}}}return _o(l,[r,s,a,i],t.dtype)}resizeNearestNeighbor(e,t,n,r){Kx(e,"resizeNearestNeighbor");const[a,s,i,o]=e.shape,u=this.readSync(e.dataId),l=new Float32Array(a*t*n*o),c=[r&&t>1?s-1:s,r&&n>1?i-1:i],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=c[0]/d[0],p=c[1]/d[1];let f=0;for(let c=0;c<a;c++){const a=c*e.strides[0];for(let c=0;c<t;c++){const t=h*c,d=a+Math.min(s-1,r?Math.round(t):Math.floor(t))*e.strides[1];for(let t=0;t<n;t++){const n=p*t,a=d+Math.min(i-1,r?Math.round(n):Math.floor(n))*e.strides[2];for(let e=0;e<o;e++){const t=u[a+e];l[f++]=t}}}}return Vr(l,[a,t,n,o],e.dtype)}resizeNearestNeighborBackprop(e,t,n){Kx([e,t],"resizeNearestNeighborBackprop");const[r,a,s,i]=t.shape,[,o,u]=e.shape,l=new Float32Array(r*a*s*i),c=this.readSync(e.dataId),d=[n&&o>1?a-1:a,n&&u>1?s-1:s],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=d[0]/h[0],f=d[1]/h[1],m=1/p,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let d=0;d<r;d++){const r=d*t.strides[0];for(let d=0;d<a;d++){const h=r+d*t.strides[1],w=Math.floor(d*m),x=Math.floor(w-y/2);for(let m=0;m<s;m++){const w=h+m*t.strides[2],v=Math.floor(m*g),k=Math.floor(v-b/2);for(let t=0;t<i;t++){let i=0;for(let l=0;l<y;l++){const h=l+x;if(h<0||h>=o)continue;const g=r+h*e.strides[1],y=h*p;if(d===Math.min(a-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const a=r+k;if(a<0||a>=u)continue;const o=g+a*e.strides[2],l=a*f;m===Math.min(s-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+t])}}l[w+t]=i}}}}return _o(l,t.shape,t.dtype)}localResponseNormalization4D(e,t,n,r,a){Kx(e,"localResponseNormalization4D");const s=e.shape[3],i=s-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){const n=e%s;let r=e-n+Math.max(0,n-t);const a=e-n+Math.min(n+t,i);let u=0;for(;r<=a;r++){const e=o[r];u+=e*e}return u}for(let e=0;e<u;e++){const t=c(e),s=o[e]*Math.pow(n+r*t,-a);l[e]=s}return _o(l,e.shape)}LRNGrad(e,t,n,r,a,s,i){Kx(e,"LRNGrad");const o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),d=new Float32Array(e.size),h=e.size;for(let e=0;e<h;e++){const t=e%o,n=e-t+Math.max(0,t-r),h=e-t+Math.min(o,t+r+1);let p=0;for(let e=n;e<h;e++)p+=Math.pow(l[e],2);p=s*p+a;for(let t=n;t<h;t++){let n=-2*s*i*l[t]*c[e]/p;e===t&&(n+=Math.pow(p,-i)),n*=u[e],d[t]+=n}}return _o(d,e.shape)}multinomial(e,t,n,r){Kx(e,"multinomial");const a=t?e:vo(e),s=a.shape[0],i=a.shape[1],o=Wi([s,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(a.dataId);for(let e=0;e<s;++e){const t=e*i,a=new Float32Array(i-1);a[0]=l[t];for(let e=1;e<a.length;++e)a[e]=a[e-1]+l[t+e];const s=ro.alea(r.toString()),o=e*n;for(let e=0;e<n;++e){const t=s();u[o+e]=a.length;for(let n=0;n<a.length;n++)if(t<a[n]){u[o+e]=n;break}}}return o}oneHot(e,t,n,r){Kx(e,"oneHot");const a=new Float32Array(e.size*t);a.fill(r);const s=this.readSync(e.dataId);for(let r=0;r<e.size;++r)s[r]>=0&&s[r]<t&&(a[r*t+s[r]]=n);return Ao(a,[e.size,t],"int32")}nonMaxSuppression(e,t,n,r,a){Kx(e,"nonMaxSuppression");const s=this.readSync(e.dataId),i=this.readSync(t.dataId);return Xx(s,i,n,r,a)}depthToSpace(e,t,n){D("NHWC"===n,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n)),D(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+t));const r=e.shape[0],a=e.shape[1],s=e.shape[2],i=e.shape[3],o=a*t,u=s*t,l=i/(t*t),c=this.readSync(e.dataId),d=new Float32Array(r*o*u*l);let h=0;for(let e=0;e<r;++e)for(let n=0;n<o;++n){const r=Math.floor(n/t),o=n%t;for(let n=0;n<u;++n){const u=Math.floor(n/t),p=(o*t+n%t)*l;for(let t=0;t<l;++t){const n=t+p+i*(u+s*(r+a*e));d[h++]=c[n]}}}return _o(d,[r,o,u,l])}broadcastedBinaryOp(e,t,n,r){const a=fi(e.shape,t.shape),s=ka(a,n),i=this.readSync(e.dataId),o=this.readSync(t.dataId),u=hi(e.shape,a),l=hi(t.shape,a),c=s.values;if(u.length+l.length===0)for(let e=0;e<c.length;++e)c[e]=r(i[e%i.length],o[e%o.length]);else{const n=this.bufferSync(e),a=this.bufferSync(t);for(let d=0;d<c.length;++d){const h=s.indexToLoc(d),p=h.slice(-e.rank);u.forEach((e=>p[e]=0));const f=n.locToIndex(p),m=h.slice(-t.rank);l.forEach((e=>m[e]=0));const g=a.locToIndex(m);c[d]=r(i[f],o[g])}}return s.toTensor()}split(e,t,n){return Yx(e,t,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(e,t,n,r,a,s){const[i,o,u,l]=e.shape,c=t.shape[0],[d,h]=r,p=ka([c,d,h,l],"float32"),f=this.readSync(t.dataId),m=this.readSync(n.dataId),g=this.readSync(e.dataId),y=e.strides,b=p.strides;for(let e=0;e<c;e++){const t=4*e,n=f[t],r=f[t+1],c=f[t+2],w=f[t+3],x=m[e];if(x>=i)continue;const v=d>1?(c-n)*(o-1)/(d-1):0,k=h>1?(w-r)*(u-1)/(h-1):0;for(let t=0;t<d;t++){const i=d>1?n*(o-1)+t*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<h;n++)for(let r=0;r<l;r++){const a=r+n*b[2]+t*b[1]+e*b[0];p.values[a]=s}else if("bilinear"===a){const n=Math.floor(i),a=Math.ceil(i),o=i-n;for(let i=0;i<h;i++){const c=h>1?r*(u-1)+i*k:.5*(r+w)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+t*b[1]+e*b[0];p.values[r]=s}continue}const d=Math.floor(c),f=Math.ceil(c),m=c-d;for(let r=0;r<l;r++){let s=r+d*y[2]+n*y[1]+x*y[0];const u=g[s];s=r+f*y[2]+n*y[1]+x*y[0];const l=g[s];s=r+d*y[2]+a*y[1]+x*y[0];const c=g[s];s=r+f*y[2]+a*y[1]+x*y[0];const h=u+(l-u)*m,w=c+(g[s]-c)*m;s=r+i*b[2]+t*b[1]+e*b[0],p.values[s]=h+(w-h)*o}}}else for(let n=0;n<h;++n){const a=h>1?r*(u-1)+n*k:.5*(r+w)*(u-1);if(a<0||a>u-1){for(let r=0;r<l;r++){const a=r+n*b[2]+t*b[1]+e*b[0];p.values[a]=s}continue}const o=Math.round(a),c=Math.round(i);for(let r=0;r<l;r++){const a=r+o*y[2]+c*y[1]+x*y[0],s=r+n*b[2]+t*b[1]+e*b[0];p.values[s]=g[a]}}}}return p.toTensor()}sparseToDense(e,t,n,r){const{sliceRank:a,numUpdates:s,sliceSize:i,strides:o,outputSize:u}=za(0,e,n);return this.scatter(e,t,n,u,i,s,a,o,r,!1)}gatherND(e,t){const n=t.shape,r=n[n.length-1],[a,s,i,o]=Ma(e,t);if(0===s)return Vr([],a,e.dtype);const u=new lr([s,i],e.dtype),l=this.readSync(t.dataId),c=this.readSync(e.dataId);for(let t=0;t<s;t++){const n=[];let a=0;for(let e=0;e<r;e++){const s=l[t*r+e];a+=s*o[e],n.push(s)}if(a<0||a>=e.size/i)throw new Error(`Invalid indices: ${n} does not index into ${e.shape}`);for(let e=0;e<i;e++)u.values[t*i+e]=c[a*i+e]}return u.toTensor().reshape(a)}scatterND(e,t,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=za(0,e,n),u=hs(0);return this.scatter(e,t,n,o,s,a,r,i,u,!0)}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return xi(e.shape,1,e.dtype)}zerosLike(e){const t=q(e.dtype,L(e.shape));return this.makeOutput(t,e.shape,e.dtype)}linspace(e,t,n){return bl(e,t,n)}scatter(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],d=this.readSync(e.dataId),h=this.readSync(t.dataId);if(0===r)return Vr([],n,t.dtype);const p=new lr(c,t.dtype);p.values.fill(this.readSync(u.dataId)[0]);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p.toTensor().reshape(n)}}function tv(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Kx(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=L(i.shape),c=n||i.dtype,d=q(c,l);for(let e=0;e<l;++e)d[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,d)}}function nv(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Kx(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}cs("cpu",(()=>new ev),1);const rv=tv(st,(e=>e>=0?e:Math.exp(e)-1)),av={kernelName:st,backendName:"cpu",kernelFunc:rv};function sv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const iv={kernelName:xt,backendName:"cpu",kernelFunc:sv};function ov(e){return(t,n,r,a,s)=>{const i=fi(t,n),o=i.length,u=ne(i),l=j(s,L(i)),c=t.length,d=n.length,h=ne(t),p=ne(n),f=hi(t,i),m=hi(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=ce(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=le(s,c,h),g=n.slice(-d);m.forEach((e=>g[e]=0));const y=le(g,d,p);l[t]=e(r[i],a[y])}return[l,i]}}const uv=ov(((e,t)=>e<0?t*e:e));function lv(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Kx([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=uv(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const cv={kernelName:Qt,backendName:"cpu",kernelFunc:lv},dv=tv(nn,(e=>Math.max(0,e))),hv={kernelName:nn,backendName:"cpu",kernelFunc:dv},pv=tv(on,(e=>Math.min(Math.max(0,e),6))),fv={kernelName:on,backendName:"cpu",kernelFunc:pv};function mv(e,t,n,r){if("linear"===n)return sv({inputs:{x:t},backend:e});if("relu"===n)return dv({inputs:{x:t},backend:e});if("elu"===n)return rv({inputs:{x:t},backend:e});if("relu6"===n)return pv({inputs:{x:t},backend:e});if("prelu"===n)return lv({inputs:{x:t,alpha:r},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function gv(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const yv={kernelName:ze,backendName:"cpu",kernelFunc:gv};function bv(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const wv={kernelName:en,backendName:"cpu",kernelFunc:bv};function xv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return sv({inputs:{x:a},backend:n});const e=Wi(a.shape),t=xv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=gv({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=bv({inputs:{input:a},backend:n}),t=xv({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!K(a.dtype,s)){const e=sv({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=sr([0],a.dtype),[r,s]=ov(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const vv={kernelName:Me,backendName:"cpu",kernelFunc:xv};function kv(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;Kx([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c=r||s.dtype,[d,h]=t(s.shape,i.shape,u,l,c);return o.makeTensorInfo(h,c,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=xv({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=xv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),w=o.makeTensorInfo(b,"float32",g),x=o.makeTensorInfo(b,"float32",y),v=gv({inputs:{real:w,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(x),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function Iv(e){return(t,n,r,a,s,i)=>{const o=fi(t,n),u=L(o),l=o.length,c=ne(o),d=j("float32",u),h=j("float32",u),p=hi(t,o),f=hi(n,o),m=ul(r,a),g=ul(s,i),y=t.length,b=ne(t),w=n.length,x=ne(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=ce(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const a=le(r,y,b),s=n.slice(-w);f.forEach((e=>s[e]=0));const i=le(s,w,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}const Nv=ov(((e,t)=>e+t)),Cv=Iv(((e,t,n,r)=>({real:e+n,imag:t+r}))),Sv=kv(ve,Nv,Cv),Ev={kernelName:ve,backendName:"cpu",kernelFunc:Sv};function Tv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=L(a.shape),o=U(s,i),u=L(o);D(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const Av={kernelName:rn,backendName:"cpu",kernelFunc:Tv};function _v(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;Kx([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=L(f),y=L(m);D(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);D(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,p,d]:[y,d,p],x=Tv({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=Tv({inputs:{x:s},backend:n,attrs:{shape:w}}),k=i?x.shape[1]:x.shape[2],I=i?x.shape[2]:x.shape[1],N=o?v.shape[1]:v.shape[2],C=Math.max(g,y),S=n.data.get(x.dataId).values,E=n.data.get(v.dataId).values,T=ne(x.shape),A=ne(v.shape),[_,$,R]=i?[T[0],1,T[1]]:[T[0],T[1],1],[F,O,M]=o?[1,A[1],A[0]]:[A[1],1,A[0]],B=I*N,z=ka([C,I,N],x.dtype),P=z.values,W=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<I;t+=W)for(let n=0;n<N;n+=W)for(let r=0;r<k;r+=W){const a=Math.min(t+W,I),s=Math.min(n+W,N),i=Math.min(r+W,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*M;n+=S[r+o*$+a*R]*E[a*F+t*O+s]}P[e*B+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,z.dtype,z.values)}const $v={kernelName:De,backendName:"cpu",kernelFunc:_v},Rv={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c}=r;let d,h,p;const f=[];d=_v({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=Sv({inputs:{a:d,b:i},backend:n}),f.push(d),d=h),c&&(p=mv(n,d,c,o),f.push(d),d=p);for(const e of f)n.disposeIntermediateTensorInfo(e);return d}};function Dv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Fv={kernelName:be,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;let r=new Float32Array(L(t.shape));if("complex64"!==t.dtype)r=Dv(n.data.get(t.dataId).values);else{const e=n.data.get(t.dataId),a=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=o[e];r[e]=Math.hypot(t,n)}}return n.makeOutput(r,t.shape,"float32")}},Ov=tv(we,(e=>Math.acos(e))),Mv={kernelName:we,backendName:"cpu",kernelFunc:Ov},Lv=tv(xe,(e=>Math.acosh(e))),Bv={kernelName:xe,backendName:"cpu",kernelFunc:Lv},zv=tv(Ce,(e=>Math.asin(e))),Pv={kernelName:Ce,backendName:"cpu",kernelFunc:zv},Wv=tv(Se,(e=>Math.asinh(e))),Vv={kernelName:Se,backendName:"cpu",kernelFunc:Wv},Uv=tv(Ee,(e=>Math.atan(e))),Hv={kernelName:Ee,backendName:"cpu",kernelFunc:Uv},Gv=tv(Te,(e=>Math.atanh(e))),jv={kernelName:Te,backendName:"cpu",kernelFunc:Gv};function qv(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ka(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],w=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const x=y*i-h,v=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),h=Math.min(a.inWidth,d+i);let y=f,b=0,x=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<h;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,x++)}if(isNaN(y))break}g[I+n*w+t]="avg"===s?b/x:y}}}return m}function Kv(e,t,n,r,a=!1,s=!1){const i=ka(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ka(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=c;const w=Math.min(r.inWidth,h+d);let x=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<w;o+=c){const u=o-d,l=m.get(e,n,o,t);l>x&&(x=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(v,e,n,o,t)}}return i}const Xv={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Kx(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;D(Ps(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_s(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&B(l.inShape,l.outShape))c=sv({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=qv(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},Yv={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Kx([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=_s(i.shape,o,u,1,l),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,x=y-1-c.padInfo.top,v=ka(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,N=ka(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,s=r-w;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/h;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=N.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Zv={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;D(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),D(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),D(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Kx([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=h.length,w=d.length;let x=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-d[v++])*p[k++]/Math.sqrt(h[I++]+l),x>=g&&(x=0),v>=w&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function Jv(e){return(t,n,r)=>{const a=j(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const Qv=Jv((e=>Math.ceil(e))),ek=nv(Le,Qv),tk={kernelName:Le,backendName:"cpu",kernelFunc:ek},nk=tv(Be,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),rk={kernelName:Be,backendName:"cpu",kernelFunc:nk};function ak(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const sk={kernelName:kt,backendName:"cpu",kernelFunc:ak};function ik(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=H(a,t[0].shape)[0];let i=Zs(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));if(1===o.length)return o[0];if(Ys(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>bv({inputs:{input:e},backend:n}))),t=o.map((e=>ak({inputs:{input:e},backend:n}))),r=ik({inputs:e,backend:n,attrs:{axis:s}}),a=ik({inputs:t,backend:n,attrs:{axis:s}}),i=gv({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=o.map((e=>{const t=L(e.shape.slice(s));return Tv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}));i=Zs(u.map((e=>e.shape)),1);const l=j(o[0].dtype,L(i));if(1===u[0].shape[0]){let e=0;u.forEach((t=>{const r=n.data.get(t.dataId).values,a=L(t.shape);l.set(r,e),e+=a}))}else{let e=0;u.forEach((t=>{const r=n.data.get(t.dataId).values;let a=0;for(let n=0;n<t.shape[0];++n){const s=n*i[1]+e;for(let e=0;e<t.shape[1];++e)l[s+e]=r[a++]}e+=t.shape[1]}))}const c=Zs(o.map((e=>e.shape)),s),d=n.makeTensorInfo(c,t[0].dtype,l);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const ok={kernelName:Pe,backendName:"cpu",kernelFunc:ik};function uk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Kx([a,s],"conv2d");const d=Ws(u),h=Rs(a.shape,s.shape,i,l,o,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,w="channelsLast"===h.dataFormat,x=new lr(h.outShape,a.dtype),v=ne(a.shape),k=ne(s.shape),I=v[0],N=w?v[1]:v[2],C=w?v[2]:1,S=w?1:v[1],E=x.strides[0],T=w?x.strides[1]:x.strides[2],A=w?x.strides[2]:1,_=w?1:x.strides[1],$=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,D=x.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<h.outHeight;++e){const r=n+e*T,a=e*h.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*N;for(let e=0;e<h.outWidth;++e){const t=r+e*A,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const a=i+r*C;let o=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=$[a+e*S];for(let e=0;e<h.outChannels;++e)D[t+e*_]+=n*R[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const lk={kernelName:We,backendName:"cpu",kernelFunc:uk},ck={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Kx([a,s],"conv2dBackpropFilter");const d=Ws(u),h=Rs(a.shape,c,i,1,o,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new lr(h.filterShape,"float32"),w=h.padInfo.left,x=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new lr(a.shape,a.dtype,v),N=new lr(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(h.outHeight,(h.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((w-r)/f)),s=Math.min(h.outWidth,(h.inWidth+w-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<s;++e){const n=r+e*f-w;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},dk={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Kx([a,s],"conv2dBackpropInput");const d=ne(s.shape),h=ne(a.shape);let p=Ws(l);const f=Rs(i,s.shape,o,1,u,c,!1,p),m=new lr(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[w,x,v]=d,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:C,inHeight:S,inWidth:E,outChannels:T,outHeight:A,outWidth:_,strideHeight:$,strideWidth:R}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,F=N-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],B=O?m.strides[2]:1,z=O?1:m.strides[1],P=h[0],W=O?h[1]:h[2],V=O?h[2]:1,U=O?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<C;++t)for(let n=0;n<S;++n){const r=n-D,a=Math.max(0,Math.ceil(r/$)),s=Math.min(A,(I+r)/$);for(let i=0;i<E;++i){const o=i-F,u=Math.max(0,Math.ceil(o/R)),l=Math.min(_,(N+o)/R);let c=0;for(let n=a;n<s;++n){const a=n*$-r;for(let r=u;r<l;++r){const s=P*e+W*n+V*r,i=w*(I-1-a)+x*(N-1-(r*R-o))+v*t;for(let e=0;e<T;++e)c+=y[s+U*e]*b[i+e]}}g[M*e+L*n+B*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},hk={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;Kx([a,s],"conv3d");const l=Ds(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,w=g.top,x=new lr(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=x.values,N=ne(a.shape),C=ne(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*C[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-w;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*C[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*C[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},pk={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;Kx([a,s],"conv3dBackpropFilterV2");const l=ne(a.shape),c=ne(s.shape),d=Ds(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new lr(d.filterShape,"float32"),w=b.values,[x,v,k,I]=b.strides,N=n.data.get(s.dataId).values,[C,S,E,T]=c,A=n.data.get(a.dataId).values,[_,$,R,D]=l,F=d.padInfo.front,O=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/h)),n=Math.min(d.outDepth,(d.inDepth+F-e)/h),r=e*x;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/p)),i=Math.min(d.outHeight,(d.inHeight+M-a)/p),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(d.outWidth,(d.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*I+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*_,y=m*C;for(let m=t;m<n;++m){const t=(e+m*h-F)*$+d,n=m*S+y;for(let e=s;e<i;++e){const s=(a+e*p-M)*R+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*T+i;g+=A[(r+e*f-O)*D+s+o]*N[t+c]}}}}w[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},fk={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;Kx([a],"conv3dBackpropInputV2");const l=ne(a.shape),c=ne(s.shape),d=Ds(u,s.shape,o,1,i),h=new lr(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(a.dataId).values,[w,x,v,k]=l,I=n.data.get(s.dataId).values,[N,C,S,E]=c,{batchSize:T,filterDepth:A,filterHeight:_,filterWidth:$,inChannels:R,inDepth:D,inHeight:F,inWidth:O,outChannels:M,outDepth:L,outHeight:B,outWidth:z,strideDepth:P,strideHeight:W,strideWidth:V}=d,U=A-1-d.padInfo.front,H=_-1-d.padInfo.top,G=$-1-d.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-U,a=Math.max(0,Math.ceil(r/P)),s=Math.min(L,(A+r)/P);for(let i=0;i<F;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),l=Math.min(B,(_+o)/W);for(let c=0;c<O;++c){const d=c-G,h=Math.max(0,Math.ceil(d/V)),T=Math.min(z,($+d)/V);let R=0;for(let n=a;n<s;++n){const a=n*P-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=h;i<T;++i){const o=w*e+x*n+v*r+k*i,u=N*(A-1-a)+C*(_-1-s)+S*($-1-(i*V-d))+E*t;for(let e=0;e<M;++e)R+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},mk=tv(qe,(e=>Math.cos(e))),gk={kernelName:qe,backendName:"cpu",kernelFunc:mk},yk=tv(Ke,(e=>Math.cosh(e))),bk={kernelName:Ke,backendName:"cpu",kernelFunc:yk};function wk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;Kx([a,s],"depthwiseConv2DNative");const c=ne(a.shape),d=ne(s.shape);let h=u;null==h&&(h=[1,1]),D(Ps(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=Rs(a.shape,s.shape,i,h,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,w=b.left,x=b.top,v=p.outChannels/p.inChannels,k=new lr(p.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,C=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*d[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)C[u+e]+=t*N[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const xk={kernelName:Je,backendName:"cpu",kernelFunc:wk},vk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Kx([a,s],"depthwiseConv2dNativeBackpropFilter");const d=Rs(a.shape,c,i,o,u,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new lr(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,w=d.outChannels/d.inChannels,x=n.data.get(a.dataId).values,v=new lr(a.shape,a.dtype,x),k=n.data.get(s.dataId).values,I=new lr(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/w),u=i%w;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},kk={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Kx([a,s],"depthwiseConv2DNativeBackpropInput");const d=ne(a.shape),h=ne(s.shape),p=Rs(c,s.shape,i,o,u,l,!0),f=new lr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,w=n.data.get(a.dataId).values,[x,v,k]=d,I=n.data.get(s.dataId).values,[N,C,S]=h,{batchSize:E,filterHeight:T,filterWidth:A,inChannels:_,inHeight:$,inWidth:R,outChannels:D,outHeight:F,outWidth:O,strideHeight:M,strideWidth:L}=p,B=T-1-p.padInfo.top,z=A-1-p.padInfo.left,P=D/_;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<$;++n){const r=n-B,a=Math.max(0,Math.ceil(r/M)),s=Math.min(F,(T+r)/M);for(let i=0;i<R;++i){const o=i-z,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(A+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<l;++r){const s=x*e+v*n+k*r,i=N*(T-1-a)+C*(A-1-(r*L-o))+S*t;for(let e=0;e<P;++e)c+=w[s+(t*P+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Ik={kernelName:tt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:w,strideHeight:x,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:C,outShape:S}=As(r.shape,a.shape,s,i,"NHWC",o),E=L(S),T=S.length,A=q(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*x-w.top;for(let s=0;s<b;++s){const i=s*v-w.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const p=i+n*C;if(p>=0&&p<m){const i=le([e,s,p,o],c,ne(r.shape)),f=le([t,n,o],h,ne(a.shape)),m=l[i]+d[f];m>u&&(u=m)}}}A[le([e,t,s,o],T,ne(S))]=u}}}return{dataId:u.write(sr(A,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},Nk={kernelName:rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ae(r.shape,l.data.get(r.dataId).values),d=ae(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:C}=As(r.shape,a.shape,i,o,"NHWC",u);D(s.rank===C.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${C.length}, but got `+s.rank));const S=ae(C,l.data.get(s.dataId).values),E=oe(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*w-b.top;for(let r=0;r<y;++r){const a=r*x-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}E[o][u][s]+=S[e][t][r][s]}}}return{dataId:l.write(sr(E,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Ck={kernelName:nt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ae(r.shape,l.data.get(r.dataId).values),d=ae(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:w,strideWidth:x,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:C}=As(r.shape,a.shape,i,o,"NHWC",u);D(s.rank===C.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${C.length}, but got `+s.rank));const S=ae(C,l.data.get(s.dataId).values),E=oe(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*w-b.top;for(let r=0;r<y;++r){const a=r*x-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=r,u=l)}}}E[e][o][u][s]+=S[e][t][r][s]}}}return{dataId:l.write(sr(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Sk=ov(((e,t)=>e/t)),Ek=kv(at,Sk),Tk={kernelName:at,backendName:"cpu",kernelFunc:Ek},Ak=el,_k=tl,$k=nl,Rk=rl,Dk=al,Fk=sl,Ok=tv(it,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Ak*n);return t*(1-((((Fk*r+Dk)*r+Rk)*r+$k)*r+_k)*r*Math.exp(-n*n))})),Mk={kernelName:it,backendName:"cpu",kernelFunc:Ok},Lk=Jv((e=>Math.exp(e))),Bk=nv(ut,Lk),zk={kernelName:ut,backendName:"cpu",kernelFunc:Bk},Pk=Jv((e=>Math.expm1(e))),Wk=nv(lt,Pk),Vk={kernelName:lt,backendName:"cpu",kernelFunc:Wk},Uk=ov(((e,t)=>e*t)),Hk=Iv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Gk=kv(Ut,Uk,Hk),jk={kernelName:Ut,backendName:"cpu",kernelFunc:Gk};function qk(e,t,n,r,a){const s=Ja(r,t,n),i=L(n),o=ne(r);if(s){const n=Qa(t,o);return e.subarray(n,n+i)}const u=j(a,i);for(let a=0;a<i;++a){const s=le(ce(a,n.length,ne(n)).map(((e,n)=>e+t[n])),r.length,o);u[a]=e[s]}return u}function Kk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Kx(a,"slice");const[o,u]=es(a,s,i);Pa(a,o,u);const l=qk(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const Xk={kernelName:fn,backendName:"cpu",kernelFunc:Kk},Yk=ov(((e,t)=>e-t)),Zk=Iv(((e,t,n,r)=>({real:e-n,imag:t-r}))),Jk=kv(En,Yk,Zk),Qk={kernelName:En,backendName:"cpu",kernelFunc:Jk};function eI(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=L(l),d=j("float32",c),h=j("float32",c);for(let e=0;e<a;e++){const r=Kk({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Kk({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=gv({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=tI(i,t,n),p=ul(l,c);for(let t=0;t<s;t++){const n=hl(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",h),m=gv({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function tI(e,t,n){const r=L(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((u=r)&u-1)){const a=nI(s,i,r,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",a.real),t=n.makeTensorInfo(u,"float32",a.imag),s=n.makeTensorInfo([],"float32",(o=r,"string"=="float32"?or(o):sr([o],"float32"))),i=sv({inputs:{x:s},backend:n}),l=Tk.kernelFunc({inputs:{a:e,b:s},backend:n}),c=Tk.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return a}return ll(function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=ml(a*r,t,n),u=hl(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),pl(r,s,i,a)}return r}(ul(s,i),r,t));var o,u}function nI(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=ul(e,t),i=n/2,o=cl(s),u=o.real,l=o.imag,c=[u.length],d=a.makeTensorInfo(c,"float32",u),h=a.makeTensorInfo(c,"float32",l),p=gv({inputs:{real:d,imag:h},backend:a}),f=dl(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),w=a.makeTensorInfo(y,"float32",g),x=gv({inputs:{real:b,imag:w},backend:a}),v=nI(u,l,i,r,a),k=v.real,I=v.imag,N=[k.length],C=a.makeTensorInfo(N,"float32",k),S=a.makeTensorInfo(N,"float32",I),E=gv({inputs:{real:C,imag:S},backend:a}),T=nI(m,g,i,r,a),A=T.real,_=T.imag,$=[A.length],R=a.makeTensorInfo($,"float32",A),D=a.makeTensorInfo($,"float32",_),F=gv({inputs:{real:R,imag:D},backend:a}),O=fl(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),B=a.makeTensorInfo(M,"float32",O.imag),z=gv({inputs:{real:L,imag:B},backend:a}),P=Gk({inputs:{a:z,b:F},backend:a}),W=Sv({inputs:{a:E,b:P},backend:a}),V=Jk({inputs:{a:E,b:P},backend:a}),U=bv({inputs:{input:W},backend:a}),H=bv({inputs:{input:V},backend:a}),G=ak({inputs:{input:W},backend:a}),j=ak({inputs:{input:V},backend:a}),q=ik({inputs:[U,H],backend:a,attrs:{axis:0}}),K=ik({inputs:[G,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const rI={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Tv({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=eI(i,!1,n),u=Tv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},aI={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Q(a),o=q(i,L(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}},sI={kernelName:ht,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=j(r.dtype,L(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let r=0;r<u;r++){const a=r*l;for(let o=0;o<l;o++){const d=[i,e,r,o][2],h=Math.round(u-d),p=t+n+a+o;let f=c[p];h>=0&&h<u&&(f=c[t+n+h*l+o]),s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},iI=Jv((e=>Math.floor(e))),oI=nv(pt,iI),uI={kernelName:pt,backendName:"cpu",kernelFunc:oI},lI={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p}=r;let f=uk({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;f=Sv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=f;f=mv(n,f,p,o),n.disposeIntermediateTensorInfo(e)}return f}},cI={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p}=r;let f=wk({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;f=Sv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=f;f=mv(n,f,p,o),n.disposeIntermediateTensorInfo(e)}return f}},dI={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Tv({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=eI(i,!0,n),u=Tv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},hI=tv(It,(e=>Number.isFinite(e)?1:0),"bool"),pI={kernelName:It,backendName:"cpu",kernelFunc:hI},fI=tv(Nt,(e=>Math.abs(e)===1/0?1:0),"bool"),mI={kernelName:Nt,backendName:"cpu",kernelFunc:fI},gI=tv(Ct,(e=>Number.isNaN(e)?1:0),"bool"),yI={kernelName:Ct,backendName:"cpu",kernelFunc:gI},bI=Jv((e=>Math.log(e))),wI=nv(Tt,bI),xI={kernelName:Tt,backendName:"cpu",kernelFunc:wI},vI=tv(At,(e=>Math.log1p(e))),kI={kernelName:At,backendName:"cpu",kernelFunc:vI},II=tv($t,(e=>e?0:1),"bool"),NI={kernelName:$t,backendName:"cpu",kernelFunc:II};function CI(e,t,n,r){const a=j(r,L(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>s&&(s=t)}a[n]=s}return a}function SI(e,t,n,r,a){const s=t.length,i=L(t),o=ne(t),u=ne(a),l=j(n,L(a));for(let t=0;t<i;++t){const n=ce(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[le(a,s,u)]=e[t]}return l}const EI={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{reductionIndices:a,keepDims:s}=t,i=n;let o=r.shape;const u=o.length,l=H(a,o);let c=l;const d=vs(c,u);let h=i.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=o[d[t]];h=SI(h,o,r.dtype,d,e),c=Is(c.length,u),o=e}Kx(r,"max"),xs("max",c,u);const[p,f]=bs(o,c),m=CI(h,L(f),p,r.dtype),g=i.write(m,p,r.dtype);let y=p;return s&&(y=ws(p,l)),{dataId:g,shape:y,dtype:r.dtype}}},TI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Kx(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;D(Ps(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_s(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&B(l.inShape,l.outShape))c=sv({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=qv(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},AI={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Kx([s,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=_s(o.shape,u,l,1,c,d),p=n.data.get(o.dataId).values,f=ka(h.outShape,o.dtype,Kv(p,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,w=h.effectiveFilterHeight,x=h.effectiveFilterWidth,v=x-1-h.padInfo.left,k=w-1-h.padInfo.top,I=ka(o.shape,"float32"),N=n.data.get(a.dataId).values,C=ka(a.shape,"float32",N);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<w;n+=y){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=b){const o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=w*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==u&&(i+=C.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},_I={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;Kx(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=_s(r.shape,a,s,[1,1],i),[d,h]=function(e,t,n,r,a){const s=qv(e,0,n,ne(t),a,"max"),i=Kv(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(d,c.outShape,r.dtype),f=u.write(h,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},$I={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Kx(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=ne(a.shape),f=L(o),m=o.length,g=ne(o),y=j(a.dtype,f);for(let e=0;e<f;e++){let t=ce(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=le(t,h,p);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},RI=cu,DI={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:a}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=t;Kx(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,d=l.data.get(a.dataId).values,{selectedIndices:h,validOutputs:p}=RI(c,d,s,i,o,u);return[h,p]}},FI=du,OI={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:a}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=t;Kx(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,d=l.data.get(a.dataId).values,h=s,p=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=FI(c,d,h,p,f,m);return[g,y]}},MI=ov(((e,t)=>e!==t?1:0)),LI=kv(Gt,MI,null,"bool"),BI={kernelName:Gt,backendName:"cpu",kernelFunc:LI},zI={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Kx(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=L(a.shape),d=a.shape.length,h=ne(a.shape),p=L(o),f=o.length,m=ne(o),g=j(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[le(ce(e,d,h).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},PI=tv(tn,(e=>1/e)),WI={kernelName:tn,backendName:"cpu",kernelFunc:PI},VI={kernelName:zn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=j(r.dtype,L(r.shape)),[l,c,d,h]=r.shape,[p,f]=ju(i,c,d),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*d*c*h;for(let e=0;e<c;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[l,e,r,i],b=o[2],w=o[1];let x=(b-p)*g-(w-f)*m,v=(b-p)*m+(w-f)*g;x=Math.round(x+p),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),x>=0&&x<d&&v>=0&&v<c&&(k=y[t+v*(d*h)+x*h+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},UI=tv(ln,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),HI={kernelName:ln,backendName:"cpu",kernelFunc:UI},GI=Jv((e=>1/Math.sqrt(e))),jI=nv(cn,GI),qI={kernelName:cn,backendName:"cpu",kernelFunc:jI},KI=Ju,XI=Qu,YI=tv(pn,(e=>e>=0?XI*e:KI*(Math.exp(e)-1))),ZI={kernelName:pn,backendName:"cpu",kernelFunc:YI},JI=tv(bn,(e=>1/(1+Math.exp(-e)))),QI={kernelName:bn,backendName:"cpu",kernelFunc:JI},eN=tv(yn,(e=>e<0?-1:e>0?1:0)),tN={kernelName:yn,backendName:"cpu",kernelFunc:eN},nN=tv(mn,(e=>Math.sin(e))),rN={kernelName:mn,backendName:"cpu",kernelFunc:nN},aN=tv(gn,(e=>Math.sinh(e))),sN={kernelName:gn,backendName:"cpu",kernelFunc:aN},iN=Math.log(1.1920928955078125e-7)+2,oN=tv(wn,(e=>{const t=e>-iN,n=e<iN,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),uN={kernelName:wn,backendName:"cpu",kernelFunc:oN};function lN(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Kx(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=SI(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const cN={kernelName:Rn,backendName:"cpu",kernelFunc:lN},dN={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Kx([a],"spaceToBatchND");const o=L(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=zI.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=qu(l.shape,s,o,!1),d=Ku(c.length,s.length,!1),h=Xu(l.shape,s,o,!1),p=Tv({inputs:{x:l},backend:n,attrs:{shape:c}}),f=lN({inputs:{x:p},backend:n,attrs:{perm:d}}),m=Tv({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},hN=tv(xn,(e=>Math.sqrt(e))),pN={kernelName:xn,backendName:"cpu",kernelFunc:hN},fN={kernelName:Sn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Kx(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},mN=ov(((e,t)=>{const n=e-t;return n*n})),gN=kv(Cn,mN),yN={kernelName:Cn,backendName:"cpu",kernelFunc:gN},bN=tv(Ln,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),wN={kernelName:Ln,backendName:"cpu",kernelFunc:bN},xN=tv(An,(e=>Math.tan(e))),vN={kernelName:An,backendName:"cpu",kernelFunc:xN},kN=tv(_n,(e=>Math.tanh(e)));function IN(e,t,n,r){const a=H(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new lr(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new lr(d,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}const NN=[Rv,Fv,Mv,Bv,Ev,Pv,Vv,Hv,jv,Xv,Yv,$v,Zv,vv,tk,rk,yv,ok,ck,dk,lk,pk,fk,hk,gk,bk,xk,vk,kk,Ik,Ck,Nk,Tk,av,Mk,zk,Vk,rI,aI,sI,uI,lI,cI,iv,dI,sk,pI,mI,yI,xI,kI,NI,TI,AI,_I,EI,$I,jk,DI,OI,BI,zI,cv,wv,WI,hv,fv,Av,VI,HI,qI,ZI,QI,tN,rN,sN,Xk,uN,dN,pN,fN,yN,wN,Qk,vN,{kernelName:_n,backendName:"cpu",kernelFunc:kN},cN,{kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Kx(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=IN(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const e of NN)Kn(e);const CN={},SN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function EN(e){if(!(e in CN)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete CN[e]}),!1),1===e?t.getContext("webgl",SN)||t.getContext("experimental-webgl",SN):t.getContext("webgl2",SN)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;CN[e]=t}const t=CN[e];return t.isContextLost()?(delete CN[e],EN(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),CN[e])}var TN,AN,_N;function $N(e,t){return[t,e]}function RN(e){const t=L(e);return P(Math.ceil(t/4))}function DN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function FN(e,t){const n=e;let r,a,s,i,o,u,l,c,d,h;return 2===pe().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function ON(e,t){const n=t();return pe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}function MN(e){return!!(pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function LN(e,t){return GN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(TN||(TN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(AN||(AN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_N||(_N={}));const BN=/ERROR: [0-9]+:([0-9]+):/g;function zN(e,t){if(ON(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function PN(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(ON(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),ON(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),ON(e,(()=>e.enableVertexAttribArray(o))),!0)}function WN(e,t,n,r){ON(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),ON(e,(()=>e.activeTexture(e.TEXTURE0+n))),ON(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),ON(e,(()=>e.uniform1i(n,r)))}function VN(e,t,n){ON(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ON(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function UN(e,t){ON(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ON(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function HN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function GN(e,t,n){const r=ON(e,(()=>t()));if(null==r)throw new Error(n);return r}function jN(e,t=2){return L(e.slice(0,e.length-t))}function qN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function KN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[jN(e),...qN(e)]),t}function XN(e){return e%2==0}function YN(e,t){if(B(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(XN(n)&&XN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&XN(e[0])&&XN(t[0])}let ZN,JN;function QN(e,t){return null!=e.getExtension(t)}function eC(e){try{if(null!=EN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function tC(e){const t=FN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function nC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&D("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the WebGL backend."))}))}const rC=pe();rC.registerFlag("HAS_WEBGL",(()=>rC.getNumber("WEBGL_VERSION")>0)),rC.registerFlag("WEBGL_VERSION",(()=>eC(2)?2:eC(1)?1:0)),rC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),rC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===rC.get("WEBGL_VERSION"))),rC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),rC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),rC.registerFlag("WEBGL_PACK",(()=>rC.getBool("HAS_WEBGL"))),rC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_CLIP",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),rC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_PACK_REDUCE",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_CONV_IM2COL",(()=>rC.getBool("WEBGL_PACK"))),rC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==ZN){const t=EN(e);ZN=t.getParameter(t.MAX_TEXTURE_SIZE)}return ZN}(rC.getNumber("WEBGL_VERSION")))),rC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==JN){const t=EN(e);JN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,JN)}(rC.getNumber("WEBGL_VERSION")))),rC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=rC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=EN(e);return t=QN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:QN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),rC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>rC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}())),rC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=EN(e);if(1===e){if(!QN(t,"OES_texture_float"))return!1}else if(!QN(t,"EXT_color_buffer_float"))return!1;return tC(t)}(rC.getNumber("WEBGL_VERSION")))),rC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!rC.getBool("WEBGL_FORCE_F16_TEXTURES")&&rC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),rC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=EN(e);if(1!==e){if(QN(t,"EXT_color_buffer_float"))return tC(t);const e="EXT_color_buffer_half_float";if(QN(t,e)){const n=t.getExtension(e);return function(e,t){const n=FN(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!QN(t,"OES_texture_float")&&!!QN(t,"WEBGL_color_buffer_float")&&tC(t)}(rC.getNumber("WEBGL_VERSION")))),rC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=rC.getNumber("WEBGL_VERSION"))&&null!=EN(e).fenceSync;var e})),rC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>rC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),rC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const{simpleAbsImpl:aC,addImpl:sC,ceilImpl:iC,expImpl:oC,expm1Impl:uC,floorImpl:lC,logImpl:cC,maxImpl:dC,multiplyImpl:hC,rsqrtImpl:pC,sliceImpl:fC,subImpl:mC,transposeImpl:gC,uniqueImpl:yC}=v;class bC{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wC{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class xC{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function vC(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function kC(e,t){return 1===t?[e]:vC(e,t)}function IC(){let e,t,n,r,a,s,i,o,u,l;return 2===pe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function NC(e,t,n="index"){const r=ne(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function CC(e){const t=ne(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}const SC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:EC}=r;function TC(e,t,n,r){const a=[];e.forEach((e=>{const t=L(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const s=a.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?_C(e):AC(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=EC(e.shapeInfo.logicalShape,t.logicalShape),u=LC(i),l=i-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+l]} = 0;`)).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+d[t+l])).join(", ");let p="return outputValue;";const f=1===L(e.shapeInfo.logicalShape),m=1===L(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&B(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=LC(u),c=EC(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+p[t+d])).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,u=IC(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,d,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$C}\n    ${RC}\n    ${DC}\n  `}(u);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(B(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return B(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=NC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=NC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=NC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=NC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n}(t.logicalShape,o),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(h+=FC),[h,l,d,s,c,i,n].join("\n")}function AC(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${OC(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${MC(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=OC(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&B(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=G(t),o=s;if(o.length<t.length){const t=["row","col"];return`\n      ${AC(BC(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${zC(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${MC(e)}\n      }\n    `;const u=a[0],l=a[1],c=OC(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=G(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${AC(BC(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${zC(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${MC(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],d=l[1],h=e.shapeInfo.flatOffset;if(d===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===s&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${OC(n)};\n        vec2 uv = uvFromFlat(${c}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=G(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${AC(BC(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${zC(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${MC(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,d=c[0],h=c[1];if(h===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${OC(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=G(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${AC(BC(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${zC(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${MC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${OC(n)};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=G(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${AC(BC(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${zC(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${MC(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${OC(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function _C(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${IC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=IC();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=IC();if(null!=a&&B(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${_C(BC(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${zC(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${IC().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)d=`int b${e}, `+d,c*=t[n-e-1],h=`b${e} * ${c} + `+h;return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${IC().texture2D}(${r}, uv);\n    }\n  `}(e)}}const $C="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function OC(e){return"offset"+e}function MC(e){const t=e.name,n=L(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function LC(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function BC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zC(e,t){return t.map((t=>e[t])).join(", ")}class PC{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=LC(o),l=kC("coords",o);let c,d;if(1===s){d=o+1;const e=LC(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else d=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=kC("sourceLocR",d-1).concat("inIdx.r"),g=kC("sourceLocG",d-1).concat("inIdx.g"),y=kC("sourceLocB",d-1).concat("inIdx.b"),b=kC("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class WC{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VC{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const UC="return (a < 0.) ? b * a : a;";class HC{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=fi(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const GC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class jC{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=fi(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===L(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${LC(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=kC("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class qC{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class KC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class XC{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class YC{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZC{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JC{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QC{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nS{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),p=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",w="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${x}\n        ${w}\n        setOutput(result);\n      }\n    `}}class rS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aS{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,s=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=e.outChannels/e.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class sS{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,s=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=p;let m="int xR; int xC; int xCOffset;";for(let e=0;e<h;e++)for(let t=0;t<p;t++)m+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<h;e++)for(let t=0;t<f;t++){const n=2*t;if(m+=`\n          xR = xRCorner + ${e*c};\n          xC = xCCorner + ${n*d};\n        `,1===l){if(n<p&&(m+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${s}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${s}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<p)){const t=o%2==0?R(d):d;d%2==0&&o%2==1||d%2!=0&&o%2!=1?(m+=`\n                  xCOffset = xC + ${o%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(m+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${s}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),m+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):m+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<p&&(m+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,o%2==1?(m+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${s}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<p&&(m+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${s}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(m+=`\n                if(xC >= 0 && xC < ${s}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<p&&(m+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),m+="}");n<p&&(m+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<p&&(m+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<h;e++)for(let t=0;t<p;t++)m+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${m}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class iS{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,w,x]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${w};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class oS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${uS(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${LC(r)} coords = getOutputCoords();\n        int end = ${lS(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${lS(r,"coords")} = idx;\n          val += getX(${uS(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function uS(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function lS(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}class cS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=TN.DENSE;const t=RN(e),n=IC();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${NC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class dS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=TN.DENSE;const t=RN(e),n=IC();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${NC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class hS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class pS{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class fS{constructor(e){this.variableNames=["A"],this.outTexUsage=AN.DOWNLOAD;const t=IC();this.outputShape=e,this.userCode=`\n      ${SC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class mS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=AN.DOWNLOAD;const t=IC();this.outputShape=e,this.userCode=`\n      ${SC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class gS{constructor(e,t,n=!1){this.variableNames=["A"];const r=IC(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${CC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class yS{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=IC(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${CC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class bS{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class wS{constructor(e,t,n){this.variableNames=["A","indices"];const r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;const a=LC(this.rank),s=function(e,t){const n=e.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let n=0;n<e.length;n++)n===t?a.push(`int(getIndices(${r[n]}))`):a.push(""+r[n]);return a.join()}(e,n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class xS{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=LC(t.length),a=LC(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function vS(e,t,n,r,a,s){!function(e,t){const n=pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return GN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return ON(e,(()=>e.bindTexture(o,i))),ON(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ON(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ON(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),ON(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),ON(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),ON(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function kS(e){return e.internalFormatFloat}function IS(e){return e.internalFormatHalfFloat}function NS(e){return e.downloadTextureFormat}function CS(e){return e.internalFormatPackedFloat}function SS(e){return e.internalFormatPackedHalfFloat}class ES{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=pe().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){CN[e]=t}(t,e)):this.gl=EN(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===pe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=LN(this.gl,e),QN(this.gl,t))this.textureHalfFloatExtension=LN(this.gl,t);else if(pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),QN(this.gl,r))this.colorBufferHalfFloatExtension=LN(this.gl,r);else if(pe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",QN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!QN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=GN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ON(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ON(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=GN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ON(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ON(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return GN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=FN(this.gl,this.textureHalfFloatExtension)}get debug(){return pe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ON(e,(()=>e.finish())),ON(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ON(e,(()=>e.deleteFramebuffer(this.framebuffer))),ON(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ON(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ON(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=$N(t,n);return vS(e,a,s,kS(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=$N(t,n);return vS(e,a,s,IS(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=$N(t,n);return vS(e,a,s,NS(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){ON(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?ON(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):ON(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ON(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;ON(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),ON(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),ON(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=DN(t,n);return vS(e,a,s,SS(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=DN(t,n);return vS(e,a,s,CS(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(UN(this.gl,this.framebuffer),this.outputTexture=null),ON(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=$N(t,n),i=new Uint8Array(t*n*4);return ON(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=DN(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();ON(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return ON(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),ON(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ON(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(pe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return ON(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=GN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ON(e,(()=>e.shaderSource(n,t))),ON(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=BN.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>W((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+W(l[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=IC();return function(e,t){const n=GN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ON(e,(()=>e.shaderSource(n,t))),ON(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),a=function(e){return GN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return ON(t,(()=>t.attachShader(a,r))),ON(t,(()=>t.attachShader(a,n))),function(e,t){if(ON(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&zN(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return ON(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),PN(e,t,"clipSpacePos",n,3,20,0)&&PN(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&ON(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&zN(this.gl,this.program),ON(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return GN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ON(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),WN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=DN(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&zN(this.gl,this.program),HN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),ON(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ON(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=LN(this.gl,2===pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await V((()=>this.disposed||this.isQueryAvailable(e,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||V((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),VN(this.gl,e,this.framebuffer),this.debug&&HN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(VN(this.gl,this.outputTexture,this.framebuffer),this.debug&&HN(this.gl)):UN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;VN(r,e,this.framebuffer),this.debug&&HN(r),this.outputTexture=e,ON(r,(()=>r.viewport(0,0,t,n))),ON(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),ON(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function TS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!B(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!B(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class AS{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=IC(),g="channelsLast"===d,y=g?0:1,b=g?1:2;let w="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)w+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${w}\n\n        ${m.output} = result;\n      }\n    `}}class _S{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class $S{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class RS{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class DS{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FS{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OS{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class MS{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}class LS{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class BS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=kC("rc",t),r=LC(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class zS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=LC(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class PS{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=LC(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=kC("rc",r),u=kC("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class WS{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const w=4*Math.floor(s/4),x=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class VS{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let w="0.0";if(b||(w="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}class US{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class HS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${NC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${CC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class GS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,a]=t.shape,[,s,i]=e.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class jS{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=e;this.outputShape=[a,t,n,o];const u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class qS{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,i,o]=e;this.outputShape=[a,t,n,o];const u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class KS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,a]=t.shape,[,s,i]=e.shape,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class XS{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,i,o]=e;this.outputShape=[a,t,n,o];const u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class YS{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=LC(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class ZS{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=kC("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=LC(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class JS{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=LC(a.length),u=LC(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class QS{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class eE{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=LC(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}class tE{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=LC(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return nE.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${nE[t]} = start[${t}] + coords.${nE[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const nE=["x","y","z","w","u","v"];class rE{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=LC(this.rank),n=kC("coords",this.rank),r=kC("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}class aE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=LC(n.length),s=LC(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class sE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=oE(t,n),a=uE(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=iE(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===_N.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===_N.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===_N.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===_N.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===_N.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=oE(n,r),s=uE(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=iE(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=pe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function iE(e,t,n,r,a){const s=function(e,t){switch(e){case _N.PACKED_2X2_FLOAT32:return CS(t);case _N.PACKED_2X2_FLOAT16:return SS(t);case _N.UNPACKED_FLOAT32:return kS(t);case _N.UNPACKED_FLOAT16:return IS(t);case _N.PACKED_4X1_UNSIGNED_BYTE:return NS(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(a){const[t,n]=DN(e[0],e[1]);i=t*n}else{const[t,n]=$N(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,s)}function oE(e,t){if(e===AN.UPLOAD)return _N.PACKED_2X2_FLOAT32;if(e===AN.RENDER||null==e)return function(e){return pe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?_N.PACKED_2X2_FLOAT32:_N.UNPACKED_FLOAT32:e?_N.PACKED_2X2_FLOAT16:_N.UNPACKED_FLOAT16}(t);if(e===AN.DOWNLOAD||e===AN.PIXELS)return _N.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function uE(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class lE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=LC(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class cE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const dE="return abs(x);",hE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",pE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",fE="return (x >= 0.0) ? x : (exp(x) - 1.0);",mE=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ju};\n  float scale = ${Qu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,gE="return -x;",yE="return ceil(x);",bE="return floor(x);",wE="return exp(x);",xE="return exp(x) - 1.0;",vE=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${el};\n  float a1 = ${tl};\n  float a2 = ${nl};\n  float a3 = ${rl};\n  float a4 = ${al};\n  float a5 = ${sl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,kE="return x;",IE="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",NE="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",CE="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class SE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class EE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=kC("rc",t),r=LC(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:TE}=r,AE=wl,_E=xl,$E=vl,RE=kl,DE={};function FE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?IE:hE;if("elu"===e)return t?CE:fE;if("relu6"===e)return t?NE:pE;if("prelu"===e)return t?GC:UC;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class OE extends T{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!pe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=EN(pe().getNumber("WEBGL_VERSION"));this.binaryCache=((t=pe().getNumber("WEBGL_VERSION"))in DE||(DE[t]={}),DE[t]),this.gpgpu=new ES(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new sE(this.gpgpu),this.numMBBeforeWarning=null==pe().global.screen?1024:pe().global.screen.height*pe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new E(this,ss())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((pe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||pe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:AN.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r){if(pe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:AN.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new SE(i,kE):new cE(i,kE);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=ir()),c="complex64"===r?ul(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=ir()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new SE(r,kE):new cE(r,kE);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===pe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&pe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...RN(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=ul(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=L(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),d}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!MN(n)){if(pe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=L(t);if(pe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...RN(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=pe().getBool("WEBGL_PACK")&&!0===r,i=s?KN(t):t,o=s?new mS(i):new fS(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=M(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=M(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ir(),endMs:null}}endTimer(e){return pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ir(),e)}async getQueryTime(e){if(pe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return pe().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=ss().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&L(e.shape)<t))}getGPGPUContext(){return this.gpgpu}slice(e,t,n){if(this.shouldExecuteOnCPU([e])){const r=fC(this.texData.get(e.dataId).values,t,n,e.shape,e.dtype);return this.makeOutput(n,e.dtype,r)}if(0===L(n))return Vr([],n,e.dtype);const{isPacked:r}=this.texData.get(e.dataId),a=Ja(e.shape,t,n);if(r||!a){const r=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rE(n):new tE(n),a=r.getCustomSetupFunc(t);return this.compileAndRun(r,[e],null,a)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)}shallowSlice(e,t,n){const r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),s=this.texData.get(a.dataId);Object.assign(s,r),s.shape=n,s.dtype=e.dtype;let i=Qa(t,e.strides);r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const o=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,o+1),a}stridedSlice(e,t,n,r){const a=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.stridedSlice(e,t,n,r)));if(a)return a;const s=Va(t,n,r);if(s.some((e=>0===e)))return Vr([],s);const i=new aE(t,r,s);return this.compileAndRun(i,[e])}reverse(e,t){const n=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZS(e.shape,t):new YS(e.shape,t);return this.compileAndRun(n,[e])}neg(e){const t=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.neg(e)));if(t)return t;if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gE,e.dtype);const n=new cE(e.shape,gE);return this.compileAndRun(n,[e])}batchMatMul(e,t,n,r){const a=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],i=n?e.shape[1]:e.shape[2],o=Math.max(e.shape[0],t.shape[0]);if((1===a||1===s)&&i>1e3){n&&(e=Cs(e,[0,2,1])),r&&(t=Cs(t,[0,2,1]));const a=1===s?e:e.as3D(o,i,1),u=1===s?2:1,l=1===s?t.as3D(o,1,i):t;return $i(a,l).sum(u,!0)}const u=vr(e.dtype,t.dtype),l=new OS(e.shape,t.shape,[o,a,s],n,r);return this.compileAndRun(l,[e,t],u)}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:i}){const o=n?e.shape[2]:e.shape[1],u=r?t.shape[1]:t.shape[2],l=Math.max(e.shape[0],t.shape[0]),c=vr(e.dtype,t.dtype),d=null!=a,h=null!=i,p=s?FE(s,!0):null,f=new OS(e.shape,t.shape,[l,o,u],n,r,d,p,h),m=[e,t];return a&&m.push(a),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(e,t,n,r,a){const s=pe().getBool("WEBGL_PACK_NORMALIZATION")?new RS(e.shape,t,n,r,a):new _S(e.shape,t,n,r,a);return this.compileAndRun(s,[e])}LRNGrad(e,t,n,r,a,s,i){const o=new $S(t.shape,r,a,s,i);return this.compileAndRun(o,[t,n,e])}tile(e,t){if("string"===e.dtype){const n=this.readSync(e.dataId).map((e=>ur(e))),r=ka(e.shape,e.dtype,n);return _E(r,t)}const n=new lE(e.shape,t);return this.compileAndRun(n,[e])}pad(e,t,n){const r=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PS(e.shape,t,n):new zS(e.shape,t,n);return this.compileAndRun(r,[e])}gather(e,t,n){const r=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.gather(e,t,n)));if(r)return r;const a=new wS(e.shape,t.size,n);return this.compileAndRun(a,[e,t])}batchToSpaceND(e,t,n){D(e.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),a=qu(e.shape,t,r),s=Ku(a.length,t.length),i=Xu(e.shape,t,r),o=Yu(n,t.length),u=Zu(i,n,t.length);return Cs(e.reshape(a),s).reshape(i).slice(o,u)}spaceToBatchND(e,t,n){D(e.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),a=[[0,0]];a.push(...n);for(let n=1+t.length;n<e.shape.length;++n)a.push([0,0]);const s=e.pad(a),i=qu(s.shape,t,r,!1),o=Ku(i.length,t.length,!1),u=Xu(s.shape,t,r,!1),l=Cs(s.reshape(i),o);return Ns(l,u)}reduce(e,t,n){const r=e.shape[0],a=e.shape[1],s=Ii(a),i=Math.ceil(a/s),o=new US({windowSize:s,inSize:a,batchSize:r,outSize:i},t),u=this.compileAndRun(o,[e],n);return 1===u.shape[1]?u:this.reduce(u,t,n)}argReduce(e,t,n=null){let r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const s=Ii(a),i={windowSize:s,inSize:a,batchSize:r,outSize:Math.ceil(a/s)},o=new xC(i,t,null==n),u=[e];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(e,t,l)}argReducePacked(e,t,n=null){const r=null!=n?n.shape:e.shape,a=Ii(r[r.length-1]),s=new PC(r,a,t,null==n),i=null==n?[e]:[e,n],o=this.compileAndRun(s,i,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o}sum(e,t){xs("sum",t,e.rank);const[n,r]=bs(e.shape,t),a=L(r),s=e.as2D(-1,a),i=kr(e.dtype);return this.reduce(s,"sum",i).reshape(n)}prod(e,t){const n=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.prod(e,t)));if(n)return n;const[r,a]=bs(e.shape,t),s=L(a),i=e.as2D(-1,s),o=kr(e.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(e,t,n){let r=0;const a=vs([r],e.rank);let s=e;null!=a&&(s=Cs(e,a),r=Is(1,e.rank)[0]);const i=TE.computeOutShape(s.shape,r,n),o=L([s.shape[r]]),u=s.as2D(-1,o),l=kr(e.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(i);return null!=a&&(c=Cs(c,ks(a))),c}segOpCompute(e,t,n,r,a){const s=e.shape[0],i=e.shape[1],o=TE.segOpComputeOptimalWindowSize(i,a),u=new QS({windowSize:o,inSize:i,batchSize:s,numSegments:a},t),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===a?l:(n=lo(0,a).tile([i/o]),this.segOpCompute(l,t,n,r,a))}argMinMaxReduce(e,t,n){const r=[t];if(xs("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!pe().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){const[t,a]=bs(e.shape,r),s=L(a),i=e.as2D(-1,s);return this.argReduce(i,n).reshape(t)}return this.argReducePacked(e,n)}argMin(e,t){return this.argMinMaxReduce(e,t,"min")}argMax(e,t){return this.argMinMaxReduce(e,t,"max")}cumsum(e,t,n,r){if(t!==e.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${e.rank-1} but got axis=`+t);const a=e.shape[t];let s=e;for(let t=0;t<=Math.ceil(Math.log2(a))-1;t++){const n=new oS(e.shape,!1,r),a=n.getCustomSetupFunc(t),i=s;s=this.compileAndRun(n,[s],s.dtype,a),i.dispose()}if(n){const t=new oS(e.shape,n,r),a=s;s=this.compileAndRun(t,[s]),a.dispose()}return s}equal(e,t){if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");const n=new HC("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}less(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.less(e,t)));if(n)return n;if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");const r=new HC("return float(a < b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}lessEqual(e,t){if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new HC("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}greater(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.greater(e,t)));if(n)return n;if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new HC("return float(a > b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}greaterEqual(e,t){if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new HC("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalNot(e){const t=new cE(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])}logicalAnd(e,t){if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new HC("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalOr(e,t){if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new HC("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}select(e,t,n){const r=new eE(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],vr(t.dtype,n.dtype))}where(e){il("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return RE(e.shape,t)}topk(e,t,n){const r=e.dataSync();return $E(r,e.shape,e.dtype,t,n)}min(e,t){xs("min",t,e.rank);const[n,r]=bs(e.shape,t),a=L(r),s=e.as2D(-1,a);return this.reduce(s,"min",s.dtype).reshape(n)}minimum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.minimum(e,t)));if(n)return n;const r=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new HC("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}mod(e,t){const n=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new HC("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}maximum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.maximum(e,t)));if(n)return n;const r=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new HC("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}all(e,t){xs("all",t,e.rank);const[n,r]=bs(e.shape,t),a=L(r),s=e.as2D(-1,a);return this.reduce(s,"all",s.dtype).reshape(n)}any(e,t){xs("any",t,e.rank);const[n,r]=bs(e.shape,t),a=L(r),s=e.as2D(-1,a);return this.reduce(s,"any",s.dtype).reshape(n)}floorDiv(e,t){const n="int32";if(pe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new HC("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(r,[e,t],n)}packedUnaryOp(e,t,n){const r=new SE(e.shape,t);return this.compileAndRun(r,[e],n)}packedBinaryOp(e,t,n,r,a=!1){const s=new jC(n,e.shape,t.shape,a);return this.compileAndRun(s,[e,t],r)}makeComplexComponentTensorInfo(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}addN(e){if(1===e.length)return e[0];if(e.length>pe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}const t=e.map((e=>e.dtype)).reduce(((e,t)=>vr(e,t))),n=e.map((e=>e.shape)),r=pe().getBool("WEBGL_PACK")?new wC(e[0].shape,n):new bC(e[0].shape,n);return this.compileAndRun(r,e,t)}pow(e,t){const n=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new HC("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=vr(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)}ceil(e){if(this.shouldExecuteOnCPU([e])){const t=iC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,yE,e.dtype);const t=new cE(e.shape,yE);return this.compileAndRun(t,[e])}floor(e){if(this.shouldExecuteOnCPU([e])){const t=lC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,bE,e.dtype);const t=new cE(e.shape,bE);return this.compileAndRun(t,[e])}sign(e){const t=new cE(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])}isNaN(e){const t=new cE(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")}isInf(e){const t=new cE(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")}isFinite(e){const t=new cE(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")}round(e){const t=new cE(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])}exp(e){if(this.shouldExecuteOnCPU([e])){const t=oC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,wE,e.dtype);const t=new cE(e.shape,wE);return this.compileAndRun(t,[e])}expm1(e){if(this.shouldExecuteOnCPU([e])){const t=uC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,xE,e.dtype);const t=new cE(e.shape,xE);return this.compileAndRun(t,[e])}softmax(e,t){const n=H([t],e.shape),r=Fi(e,n),a=ws(r.shape,n),s=Oi(e,r.reshape(a)),i=this.exp(s),o=this.sum(i,n).reshape(a);return ci(i,o)}log(e){if(this.shouldExecuteOnCPU([e])){const t=cC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);const t=new cE(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])}log1p(e){const t=new cE(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])}sqrt(e){const t=new cE(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])}rsqrt(e){if(this.shouldExecuteOnCPU([e])){const t=pC(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}const t=new cE(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])}reciprocal(e){const t=new cE(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])}relu(e){let t;return t=pe().getBool("WEBGL_PACK")?new SE(e.shape,IE):new cE(e.shape,hE),this.compileAndRun(t,[e])}relu6(e){let t;return t=pe().getBool("WEBGL_PACK")?new SE(e.shape,NE):new cE(e.shape,pE),this.compileAndRun(t,[e])}prelu(e,t){const n=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC(GC,e.shape,t.shape):new HC(UC,e.shape,t.shape);return this.compileAndRun(n,[e,t])}elu(e){if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,CE,e.dtype);const t=new cE(e.shape,fE);return this.compileAndRun(t,[e])}eluDer(e,t){const n=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new HC("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}selu(e){const t=new cE(e.shape,mE);return this.compileAndRun(t,[e])}clip(e,t,n){let r;r=pe().getBool("WEBGL_PACK_CLIP")?new KC(e.shape):new qC(e.shape);const a=r.getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=aC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(pe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dE,e.dtype);const t=new cE(e.shape,dE);return this.compileAndRun(t,[e])}complexAbs(e){const t=this.texData.get(e.dataId),n=new XC(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.real),this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(e){const t=new cE(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])}softplus(e){const t=new cE(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])}asin(e){const t=new cE(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(t,[e])}acos(e){const t=new cE(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(t,[e])}atan(e){const t=new cE(e.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(t,[e])}sinh(e){const t=new cE(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}cosh(e){const t=new cE(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}tanh(e){const t=new cE(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])}asinh(e){const t=new cE(e.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(t,[e])}acosh(e){const t=new cE(e.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(t,[e])}atanh(e){const t=new cE(e.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(t,[e])}erf(e){const t=new cE(e.shape,vE);return this.compileAndRun(t,[e])}step(e,t){const n=new cE(e.shape,function(e=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e});\n  `}(t));return this.compileAndRun(n,[e])}conv2dByMatMul(e,t,n,r,a,s){const i=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,l=i[0]*i[1]*i[2],c=n.outChannels,d="channelsLast"===n.dataFormat,h=(1===l||1===c)&&u>1e3,p=i[2]%2!=0&&!!o.isPacked;if(h||!pe().getBool("WEBGL_LAZILY_UNPACK")||!pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!p){const o=d?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=Ns(e,[1,o,n.inChannels]),l=Ns(t,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:s});return Ns(c,n.outShape)}const f=d?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),m={dataId:e.dataId,shape:[1,f,n.inChannels],dtype:e.dtype},g=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,D(YN(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const y=Ns(t,[1,n.inChannels,n.outChannels]),b=this.fusedBatchMatMul({a:m,b:y,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:s}),w=this.texData.get(b.dataId);return D(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=g,w.shape=n.outShape,ss().makeTensorFromDataId(b.dataId,n.outShape,b.dtype)}conv2dWithIm2Row(e,t,n,r,a,s){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:d}=n,h="channelsLast"===d,p=i*o*u,f=c*l,m=[p,f],g=e.squeeze([0]),y=t.reshape([1,p,-1]),b=new AS(m,g.shape,n),w=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),x=null!=r,v=null!=s,k=a?FE(a,!0):null,I=new OS(w.shape,y.shape,[1,f,n.outChannels],!0,!1,x,k,v),N=[w,y];r&&N.push(r),v&&N.push(s);const C=this.compileAndRun(I,N);return h?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n,r,a,s);if(pe().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n,r,a,s);const i=null!=r,o=null!=s,u=a?FE(a,!1):null,l=new nS(n,i,u,o),c=[e,t];return r&&c.push(r),s&&c.push(s),this.compileAndRun(l,c)}conv2d(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(pe().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);const r=new nS(n);return this.compileAndRun(r,[e,t])}conv2dDerInput(e,t,n){const r=new ZC(n);return this.compileAndRun(r,[e,t])}conv2dDerFilter(e,t,n){const r=new YC(n);return this.compileAndRun(r,[e,t])}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){const i=pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=a?FE(a,i):null,u=[e,t],l=null!=r,c=null!=s;let d;return l&&u.push(r),c&&u.push(s),i?(d=new sS(n,l,o,c),this.compileAndRun(d,u)):(d=new aS(n,l,o,c),this.compileAndRun(d,u))}depthwiseConv2D(e,t,n){let r;return pe().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new sS(n),this.compileAndRun(r,[e,t])):(r=new aS(n),this.compileAndRun(r,[e,t]))}depthwiseConv2DDerInput(e,t,n){const r=new tS(n);return this.compileAndRun(r,[e,t])}depthwiseConv2DDerFilter(e,t,n){const r=new eS(n);return this.compileAndRun(r,[e,t])}conv3d(e,t,n){const r=new rS(n);return this.compileAndRun(r,[e,t])}conv3dDerInput(e,t,n){const r=new QC(n);return this.compileAndRun(r,[e,t])}conv3dDerFilter(e,t,n){const r=new JC(n);return this.compileAndRun(r,[e,t])}unstack(e,t){const n=e.shape[t],r=new Array(e.rank-1);let a=0;for(let n=0;n<e.rank;n++)n!==t&&(r[a++]=e.shape[n]);const s=new Array(e.rank).fill(0),i=e.shape.slice();i[t]=1;const o=new Array(n);for(let n=0;n<o.length;n++)s[t]=n,o[n]=this.slice(e,s,i).reshape(r);return o}avgPool3d(e,t){const n=new VS(t,"avg",!1);return this.compileAndRun(n,[e],"float32")}avgPool3dBackprop(e,t,n){const r=new VC(n);return this.compileAndRun(r,[e],t.dtype)}maxPool3d(e,t){const n=new VS(t,"max",!1);return this.compileAndRun(n,[e],"float32")}maxPool3dBackprop(e,t,n,r){const a=new VS(r,"max",!0),s=this.compileAndRun(a,[t]),i=new FS(r),o=this.compileAndRun(i,[e,s],t.dtype);return s.dispose(),o}resizeBilinear(e,t,n,r){const a=pe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qS(e.shape,t,n,r):new jS(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")}resizeBilinearBackprop(e,t,n){const r=new GS(e,t,n);return this.compileAndRun(r,[e])}resizeNearestNeighbor(e,t,n,r){const a=new XS(e.shape,t,n,r);return this.compileAndRun(a,[e])}resizeNearestNeighborBackprop(e,t,n){const r=new KS(e,t,n);return this.compileAndRun(r,[e])}multinomial(e,t,n,r){const a=t?e:vo(e),s=a.shape[0],i=a.shape[1],o=new MS(s,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)}oneHot(e,t,n,r){const a=new LS(e.size,t,n,r);return this.compileAndRun(a,[e])}diag(e){const t=new pS(e.size);return this.compileAndRun(t,[e])}cropAndResize(e,t,n,r,a,s){const i=new iS(e.shape,t.shape,r,a,s);return this.compileAndRun(i,[e,t,n],"float32")}depthToSpace(e,t,n){D(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+t));const r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],s="NHWC"===n?e.shape[2]:e.shape[3],i="NHWC"===n?e.shape[3]:e.shape[1],o=a*t,u=s*t,l=i/(t*t),c=new hS("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])}split(e,t,n){return AE(e,t,n)}scatterND(e,t,n){const{sliceRank:r,numUpdates:a,sliceSize:s,strides:i,outputSize:o}=za(0,e,n),u=[o/s,s],l=e.reshape([a,r]),c=t.reshape([a,s]);if(0===o)return yl(Vr([]),n);const d=hs(0),h=new JS(a,r,l.rank,c.rank,i,u);return this.compileAndRun(h,[c,l,d]).reshape(n)}sparseToDense(e,t,n,r){const{sliceRank:a,numUpdates:s,strides:i,outputSize:o}=za(0,e,n),u=new JS(s,a,e.rank,t.rank,i,[o,1],!1);return this.compileAndRun(u,[t,e,r]).reshape(n)}gatherND(e,t){const n=t.shape,r=n[n.length-1],[a,s,i,o]=Ma(e,t),u=t.reshape([s,r]),l=e.reshape([e.size/i,i]),c=new xS(r,o,[s,i]);return this.compileAndRun(c,[l,u]).reshape(a)}fill(e,t,n){if("string"===(n=n||Q(t))){const r=q(n,L(e));return r.fill(t),ss().makeTensor(r,e,n,this)}{const r=new bS(e,t),a=r.getCustomSetupFunc(t);return this.compileAndRun(r,[],n,a)}}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)}zerosLike(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)}linspace(e,t,n){return bl(e,t,n)}makeTensorInfo(e,t,n){const r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return ss().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new EE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new BS(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[jN(e.shape),...qN(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[jN(t),...qN(t)],s=new HS(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=KN(r);let i;return i=n?new dS(s):new cS(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===TN.DENSE){const t=RN(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===L(s.shape))return i.values=j(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&L(t.shape)<=pe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!YN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,u,l),d=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=t.userCode,s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=TC(s,o,a,t.packedInputs),l=e.createProgram(u);let c=null;const d=e.getUniformLocation(l,"NAN",!1);1===pe().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const h={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;h[r]=e.getUniformLocation(l,r,a),h["offset"+r]=e.getUniformLocation(l,"offset"+r,a)}return{program:t,source:u,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:d}}(this.gpgpu,e,u,l))),h=null!=this.activeTimers;let p;if(h&&(p=this.startTimer()),function(e,t,n,r,a){TS(t.inShapeInfos,n),TS([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===pe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(L(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!pe().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;const s=this.runWebGLProgram(e,t,n,r,a);return ss().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(pe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=os((()=>{if(!pe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=pe().getBool("DEBUG");pe().set("DEBUG",!1);const t=this.abs(hs(1e-8)).dataSync()[0];if(pe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=ir());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=pe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?R(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=G(e);e=t.newShape}let r=L(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=jN(e);let n=2,a=2;return e.length&&([n,a]=qN(e)),r=t*(n/2)*(a/2),P(r).map((e=>2*e))}return P(r)}(n,o),t.texShape=c),null!=a){const e=KN(n);let s,i=c[1],d=c[0];const h=a instanceof Uint8Array;o?([i,d]=DN(c[0],c[1]),s=new yS(e,[d,i],h)):s=new gS(e,[d,i],h);const p=this.makeTensorInfo([d,i],r);this.texData.get(p.dataId).usage=h?AN.PIXELS:AN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,d,a);const f=!0,m=this.runWebGLProgram(s,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=ir()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Y(t)}tryRunOnCpuOrThrow(e,t){if(this.shouldExecuteOnCPU(e))try{return t()}catch(e){if(pe().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function ME(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}Rr()&&cs("webgl",(()=>new OE),2);const LE={kernelName:xt,backendName:"webgl",kernelFunc:ME};function BE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=ME({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=ME({inputs:{x:a},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},s}const zE={kernelName:ze,backendName:"webgl",kernelFunc:BE};function PE(e){return({inputs:t,backend:n})=>{const{x:r}=t,a=n,s=new cE(r.shape,e);return a.runWebGLProgram(s,[r],r.dtype)}}function WE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new HC(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],vr(n.dtype,r.dtype))})),s=BE({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const d=s||vr(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=a){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=a(u.shape,l.shape,e.values,t.values,d),s=c.makeTensorInfo(r,d);return c.texData.get(s.dataId).values=n,s}let h;return h=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new jC(t,u.shape,l.shape,n):new HC(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],d)}}const VE="return a + b;",UE=WE({opSnippet:VE,packedOpSnippet:VE,supportsComplex:!0,cpuKernelImpl:sC}),HE={kernelName:ve,backendName:"webgl",kernelFunc:UE},GE=WE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),jE={kernelName:Ae,backendName:"webgl",kernelFunc:GE},qE={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nC(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;D(Ps(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_s(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&B(l.inShape,l.outShape))return ME({inputs:{x:a},backend:n});const c=new WS(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},KE={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;nC([a,s],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=_s(i.shape,o,u,1,l),d=new WC(c);return n.runWebGLProgram(d,[a],i.dtype)}};class XE{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],fi(e,t),fi(e,n);let i="0.0";null!=r&&(fi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(fi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class YE{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],fi(e,t),fi(e,n);let i="vec4(0.0)";null!=r&&(fi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(fi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ZE={kernelName:mt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;D(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),D(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),D(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let d=null;null!=o&&(d=o.shape,l.push(o));const h=pe().getBool("WEBGL_PACK_NORMALIZATION")?new YE(r.shape,a.shape,s.shape,c,d,u):new XE(r.shape,a.shape,s.shape,c,d,u);return t.runWebGLProgram(h,l,l[0].dtype)}},JE=WE({opSnippet:"return float(a != b);",dtype:"bool"}),QE={kernelName:Gt,backendName:"webgl",kernelFunc:JE};function eT(e){const{inputs:t,backend:n}=e,{input:r}=t;return ME({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const tT={kernelName:en,backendName:"webgl",kernelFunc:eT},nT={kernelName:Me,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return ME({inputs:{x:s},backend:r});const t=Wi(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=BE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=eT({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!K(s.dtype,i)){const e=ME({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new cE(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",j("bool",1)),t=JE({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}};class rT{constructor(e){this.outputShape=[],this.outputShape=Zs(e,1),this.variableNames=e.map(((e,t)=>"T"+t));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class aT{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Zs(e,t);const n=this.outputShape,r=n.length,a=LC(r),s=kC("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>"T"+t));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${sT(i,u,t)}),\n            vec2(${sT(l,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${sT(i,u,p)}),\n          vec2(${sT(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function sT(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function iT(e){const{inputs:t,backend:n}=e,{input:r}=t;return ME({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const oT={kernelName:kt,backendName:"webgl",kernelFunc:iT};function uT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=L(a.shape),u=U(s,o),l=L(u);D(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||YN(a.shape,u)||null!==c.texture&&YN(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[jN(e.shape),...qN(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[jN(t),...qN(t)],i=new HS(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}const lT={kernelName:rn,backendName:"webgl",kernelFunc:uT};function cT(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>eT({inputs:{input:e},backend:n}))),a=e.map((e=>iT({inputs:{input:e},backend:n}))),s=cT(r,t,n),i=cT(a,t,n),o=BE({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if(e.length>pe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=cT(e.slice(0,r),t,n),s=cT(e.slice(r),t,n),i=cT([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new aT(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const a=Zs(e.map((e=>e.shape)),t),s=e.map((e=>uT({inputs:{x:e},attrs:{shape:[-1,L(e.shape.slice(t))]},backend:n}))),i=new rT(s.map((e=>e.shape))),o=n.runWebGLProgram(i,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=uT({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),u}const dT={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=H(a,t[0].shape)[0],i=Zs(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));return 1===o.length?o[0]:(Ys(o.map((e=>e.shape)),s),cT(o,s,n))}},hT=PE("if (isnan(x)) return x;\n  return cos(x);\n"),pT={kernelName:qe,backendName:"webgl",kernelFunc:hT},fT=WE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),mT={kernelName:at,backendName:"webgl",kernelFunc:fT};class gT{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function yT(e,t,n){const r=n.texData.get(e.dataId),a=L(e.shape),s=e.shape[e.shape.length-1],i=uT({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}).shape,o=new gT("real",i,t),u=new gT("imag",i,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),d=n.runWebGLProgram(u,l,"float32"),h=BE({inputs:{real:c,imag:d},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d);const p=uT({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(p),p}const bT={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return yT(r,!1,n)}};class wT{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const xT={kernelName:ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new wT(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}};class vT{constructor(e){this.variableNames=["A"];const t=IC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class kT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=IC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const IT={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(o||i)&&(null==NT&&(NT=document.createElement("canvas").getContext("2d")),NT.canvas.width=u,NT.canvas.height=l,NT.drawImage(a,0,0,u,l),a=NT.canvas);const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=AN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=pe().getBool("WEBGL_PACK")?new kT(d):new vT(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let NT;const CT={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return yT(r,!0,n)}};class ST{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${z(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function ET(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ii(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new ST({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new ST({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new US({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class TT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=LC(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class AT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=LC(this.rank),a=vC("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function _T(e,t,n){const r=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AT(e.shape,t):new TT(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}const $T={kernelName:Dt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{reductionIndices:a,keepDims:s}=t,i=n,o=r.shape.length,u=H(a,r.shape);let l=u;const c=vs(l,o),d=null!=c,h=i.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const e=i.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=gC(e,r.shape,r.dtype,c,t);p=i.makeTensorInfo(t,r.dtype),i.texData.get(p.dataId).values=n}else p=_T(r,c,i);l=Is(l.length,o)}xs("max",l,o);const[f,m]=bs(p.shape,l);let g,y=f;if(s&&(y=ws(f,u)),h){const e=i.texData.get(p.dataId).values,t=dC(e,L(m),y,r.dtype);g=i.makeTensorInfo(y,r.dtype),i.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=L(t),s=uT({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=ET(s,e.dtype,"max",r),o=uT({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,i);return d&&i.disposeIntermediateTensorInfo(p),g}},RT={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;nC(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;D(Ps(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=_s(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&B(l.inShape,l.outShape))return ME({inputs:{x:a},backend:n});const c=new WS(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},DT={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;nC([s,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=_s(o.shape,u,l,1,c,d),p=new WS(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new DS(h),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},FT={kernelName:Bt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;D(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];D(Ps(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=_s(r.shape,a,s,l,i),[d,h]=function(e,t,n,r){let a=new WS(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new WS(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[d,h]}},OT={kernelName:zt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=H(s,r.shape);let l=u;const c=vs(l,o),d=null!=c,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=gC(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=_T(r,c,i);p.push(f),l=Is(l.length,o)}xs("sum",l,o);const[m,g]=bs(f.shape,l);let y=m;a&&(y=ws(m,u));const b=function(e,t,n,r){const a=L(t),s=uT({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=ET(s,"float32","mean",r),o=uT({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}};class MT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=LC(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class LT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=LC(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=kC("rc",r),u=kC("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const BT={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=pe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LT(r.shape,a,s):new MT(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}};class zT{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=fi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const PT="return a * b;",WT={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=vr(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new zT("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new zT("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=BE({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=hC(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=pe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new jC(PT,r.shape,a.shape):new HC(PT,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}},VT={kernelName:jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{il("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=n,u=t;return lu(u.readSync(r.dataId),u.readSync(a.dataId),s,i,o)}},UT=cu,HT={kernelName:qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{il("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=t,c=l.readSync(r.dataId),d=l.readSync(a.dataId),{selectedIndices:h,validOutputs:p}=UT(c,d,s,i,o,u);return[h,p]}},GT=du,jT={kernelName:Kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{il("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=t,c=l.readSync(r.dataId),d=l.readSync(a.dataId),h=s,p=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=GT(c,d,h,p,f,m);return[g,y]}};class qT{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const a=e[1],s=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[u,l]=ju(r,a,s),c=u.toFixed(3),d=l.toFixed(3);let h="";h="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${d}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${d}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${h}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const KT={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new qT(r.shape,a,s,i);return o.runWebGLProgram(u,[r],r.dtype)}},XT=PE("if (isnan(x)) return x;\n  return sin(x);\n"),ZT={kernelName:mn,backendName:"webgl",kernelFunc:XT},JT={kernelName:Sn,backendName:"webgl",kernelFunc:PE("return x * x;")},QT="return (a - b) * (a - b);",eA=WE({opSnippet:QT,packedOpSnippet:QT}),tA={kernelName:Cn,backendName:"webgl",kernelFunc:eA},nA="return a - b;",rA=WE({opSnippet:nA,packedOpSnippet:nA,supportsComplex:!0,cpuKernelImpl:mC}),aA={kernelName:En,backendName:"webgl",kernelFunc:rA},sA=PE("return tan(x);"),iA=[HE,jE,qE,KE,ZE,nT,zE,dT,pT,mT,bT,xT,IT,LE,CT,oT,$T,RT,DT,FT,OT,BT,WT,VT,HT,jT,QE,tT,lT,KT,ZT,JT,aA,tA,{kernelName:An,backendName:"webgl",kernelFunc:sA},{kernelName:Rn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{perm:a}=t,s=n,i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];let u;if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,t=gC(e,r.shape,r.dtype,a,o);u=s.makeTensorInfo(o,r.dtype),s.texData.get(u.dataId).values=t}else u=_T(r,a,s);return u}},{kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;nC(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=yC(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const e of iA)Kn(e);const oA=e=>({startEndTensor:e,startPoint:go(e,[0,0],[-1,2]),endPoint:go(e,[0,2],[-1,2])}),uA={strides:[8,16],anchors:[2,6]};function lA(e,t){let n,r,a;if(e.topLeft instanceof pr&&e.bottomRight instanceof pr){const[s,i]=os((()=>[Js([Oi(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),Js([Oi(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]));n=s,r=i,null!=e.landmarks&&(a=os((()=>{const n=Oi(uo([t-1,0]),e.landmarks),r=uo([1,-1]);return $i(n,r)})))}else{const[s,i]=e.topLeft,[o,u]=e.bottomRight;n=[t-1-s,i],r=[t-1-o,u],null!=e.landmarks&&(a=e.landmarks.map((e=>[t-1-e[0],e[1]])))}const s={topLeft:n,bottomRight:r};return null!=a&&(s.landmarks=a),null!=e.probability&&(s.probability=e.probability instanceof pr?e.probability.clone():e.probability),s}function cA(e,t){return os((()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=$i(e.startPoint,t),r=$i(e.endPoint,t),a=ei([n,r],1);return oA(a)})(n,t).startEndTensor.squeeze()}))}class dA{constructor(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const r=[];for(let a=0;a<n.strides.length;a++){const s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[a];for(let e=0;e<i;e++){const t=s*(e+.5);for(let e=0;e<o;e++){const n=s*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,n,uA),this.anchors=Ao(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=uo([t,n]),this.iouThreshold=a,this.scoreThreshold=s}async getBoundingBoxes(e,t,n=!0){const[r,a,s]=os((()=>{const t=e.resizeBilinear([this.width,this.height]),n=$i(Oi(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),a=function(e,t,n){const r=go(e,[0,1],[-1,2]),a=ms(r,t),s=go(e,[0,3],[-1,2]),i=ci(s,n),o=ci(a,n),u=ci(i,2),l=Oi(o,u),c=ms(o,u),d=$i(l,n),h=$i(c,n);return ei([d,h],1)}(r,this.anchors,this.inputSize),s=go(r,[0,0],[-1,1]);return[r,a,mo(s).squeeze()]})),i=console.warn;console.warn=()=>{};const o=Du.nonMaxSuppression(a,s,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map((e=>go(a,[e,0],[1,-1])));t||(l=await Promise.all(l.map((async e=>{const t=await e.array();return e.dispose(),t}))));const c=e.shape[1],d=e.shape[2];let h;h=t?ci([d,c],this.inputSize):[d/this.inputSizeData[0],c/this.inputSizeData[1]];const p=[];for(let e=0;e<l.length;e++){const a=l[e],i=os((()=>{const i=oA(a instanceof pr?a:Ao(a));if(!n)return i;const o=u[e];let l;return l=t?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:go(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:go(s,[o],[1]),anchor:l}}));p.push(i)}return a.dispose(),s.dispose(),r.dispose(),{boxes:p,scaleFactor:h}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,a]=function(e){return e instanceof pr?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=os((()=>(e instanceof pr||(e=Oa(e)),e.toFloat().expandDims(0)))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(s,t,r);return s.dispose(),t?i.map((e=>{const t=cA(e,o);let s={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,a=t.add(r).mul(o);s.landmarks=a,s.probability=n}return n&&(s=lA(s,a)),s})):Promise.all(i.map((async e=>{const t=cA(e,o);let s;if(r){const[n,r,a]=await Promise.all([e.landmarks,t,e.probability].map((async e=>e.array()))),i=e.anchor,[u,l]=o,c=n.map((e=>[(e[0]+i[0])*u,(e[1]+i[1])*l]));s={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:a},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();s={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(s=lA(s,a)),s})))}}async function hA(){if(!k.video)return;const e=await k.model.estimateFaces(k.video,!1);if(e.length>0){k.ctx.clearRect(0,0,k.canvas.width,k.canvas.height);for(let t=0;t<e.length;t++){const n=e[t].topLeft,r=e[t].bottomRight,a=[r[0]-n[0],r[1]-n[1]];k.ctx.strokeStyle="white",k.ctx.strokeRect(n[0],n[1],a[0],a[1]);{const n=e[t].landmarks;k.ctx.fillStyle="white";for(let e=0;e<n.length;e++){const t=n[e][0],r=n[e][1];k.ctx.fillRect(t,r,5,5)}}}}requestAnimationFrame(hA)}async function pA(){!function(e,t=!1){if(Bp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Mp=e;else{Lp=e;const t=Dp.filter((e=>null==Lp[e]));if(t.length>0)throw new Error("There were no entries found for the following binaries: "+t.join(",")+". Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.")}zp=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm/dist/"),await("wasm",_r.setBackend("wasm")),k.model=await async function({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const s=await async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new yx(e,t);return await n.load(),n}("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new dA(s,t,n,e,r,a)}(),console.log("Finished loading model")}function fA(e){console.log("Detected a click");let t=e.target;if("A"===t.nodeName){let n=t.getAttribute("href");if(n.includes("youtube")){e.preventDefault(),console.log("Stopped redirection to Youtube"),window.removeEventListener("click",fA);let t=document.createElement("div");t.id="studyModeLocker",t.addEventListener("click",(e=>{e.stopPropagation(),console.log("Overlay clicked")})),document.getElementsByTagName("BODY")[0].appendChild(t),S(fA),function(e){let t=document.getElementById("studyModeLocker"),n=e.split("youtube.com/watch?v="),r="hXDiv7f73H0";r=2==n.length?n[1]:n[0];let a=document.createElement("div"),s=document.createElement("iframe");a.id="videoWrapper",s.id="videoIFrame",s.origin="youtube.com",s.setAttribute("width","100%"),s.setAttribute("height","100%"),s.setAttribute("class","youtubeIFrame"),s.src=`https://www.youtube-nocookie.com/embed/${r}?enablejsapi=1&controls=0`,a.appendChild(s),t.appendChild(a),k.player=new YT.Player("videoIFrame",{events:{onReady:e=>{console.debug("Embedded Youtube Player is ready"),window.localStorage.setItem(I,r),window.localStorage.setItem("youtube_video_duration",e.target.getDuration()),window.localStorage.setItem("youtube_video_title",e.target.getVideoData().title)},onStateChange:e=>{console.debug("Embedded Youtube Player has a new change"),e.data,YT.PlayerState.ENDED}}})}(n),async function(){!function(){let e=document.createElement("VIDEO");e.id="overlayVideoCam",e.setAttribute("autoplay","");let t=document.createElement("CANVAS");t.id="overlayVideoCanvas",t.width=640,t.height=480;let n=document.getElementById("studyModeLocker");n.appendChild(e),n.appendChild(t)}(),await async function(){return k.video=document.getElementById("overlayVideoCam"),k.stream=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}),k.video.srcObject=k.stream,new Promise((e=>{k.video.onloadedmetadata=()=>{e(k.video)}}))}(),k.canvas=document.getElementById("overlayVideoCanvas"),k.ctx=k.canvas.getContext("2d"),k.ctx.fillStyle="rgba(255, 0, 0, 0.5)",hA()}()}}}!async function(){await pA(),window.addEventListener("click",fA),console.log("Google Classroom Overlay registered")}()})()})();