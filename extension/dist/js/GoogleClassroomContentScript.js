/*! For license information please see GoogleClassroomContentScript.js.LICENSE.txt */
(()=>{var e={349:(e,t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return C.buffer!=U&&J(C.buffer),H}function s(){return C.buffer!=U&&J(C.buffer),G}function a(){return C.buffer!=U&&J(C.buffer),j}function i(){return C.buffer!=U&&J(C.buffer),q}function o(){return C.buffer!=U&&J(C.buffer),K}var u,l=void 0!==(e=e||{})?e:{},c={};for(u in l)l.hasOwnProperty(u)&&(c[u]=l[u]);var h=[],p=!1,d=!1,f=!1,m=!1;p="object"==typeof window,d="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m=!p&&!f&&!d;var g=l.ENVIRONMENT_IS_PTHREAD||!1;g&&(U=l.buffer,Z=l.DYNAMIC_BASE,Q=l.DYNAMICTOP_PTR);var y,b,x,w,v="";function k(e){return l.locateFile?l.locateFile(e,v):v+e}if(f){var I;v=d?n(386).dirname(v)+"/":"//",y=function(e,t){return x||(x=n(993)),w||(w=n(386)),e=w.normalize(e),x.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),D(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof hn))throw e})),process.on("unhandledRejection",we),l.inspect=function(){return"[Emscripten Module object]"};try{I=n(614)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}Worker=I.Worker}else m?("undefined"!=typeof read&&(y=function(e){return read(e)}),b=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(D("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(p||d)&&(d?v=self.location.href:document.currentScript&&(v=document.currentScript.src),r&&(v=r),v=0!==v.indexOf("blob:")?v.substr(0,v.lastIndexOf("/")+1):"",f?(y=function(e,t){return x||(x=n(993)),w||(w=n(386)),e=w.normalize(e),x.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),D(t.buffer),t}):(y=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(b=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)})));f&&"undefined"==typeof performance&&(performance=n(513).performance);var N,S,C,E=l.print||console.log.bind(console),T=l.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(l[u]=c[u]);c=null,l.arguments&&(h=l.arguments),l.thisProgram&&l.thisProgram,l.quit&&l.quit,Atomics.load,Atomics.store,Atomics.compareExchange,l.wasmBinary&&(N=l.wasmBinary),l.noExitRuntime&&(S=l.noExitRuntime),"object"!=typeof WebAssembly&&T("no native wasm support detected");var A,_=new WebAssembly.Table({initial:165,maximum:165,element:"anyfunc"}),$=0,R=!1;function D(e,t){e||we("Assertion failed: "+t)}function F(e){var t=l["_"+e];return D(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function O(e,t,n,r,s){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=un(n),n)}return t},array:function(e){var t=un(e.length);return V(e,t),t}},i=F(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=a[n[l]];c?(0===u&&(u=on()),o[l]=c(r[l])):o[l]=r[l]}var h=i.apply(null,o);return h=function(e){return"string"===t?z(e):"boolean"===t?Boolean(e):e}(h),0!==u&&ln(u),h}function M(e,t,n,r){var s=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&s&&!r?F(e):function(){return O(e,t,n,arguments)}}function L(e,t,n){for(var r=t+n,s="";!(t>=r);){var a=e[t++];if(!a)return s;if(128&a){var i=63&e[t++];if(192!=(224&a)){var o=63&e[t++];if((a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&e[t++])<65536)s+=String.fromCharCode(a);else{var u=a-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&a)<<6|i)}else s+=String.fromCharCode(a)}return s}function z(e,t){return e?L(s(),e,t):""}function B(e,t,n,r){if(!(r>0))return 0;for(var s=n,a=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=a)break;t[n++]=o}else if(o<=2047){if(n+1>=a)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=a)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-s}function P(e,t,n){return B(e,s(),t,n)}function W(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function V(e,n){t().set(e,n)}var U,H,G,j,q,K,X=65536;function Y(e,t){return e%t>0&&(e+=t-e%t),e}function J(e){U=e,l.HEAP8=H=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=j=new Int32Array(e),l.HEAPU8=G=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=q=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=K=new Float64Array(e)}var Z=5256384,Q=12576,ee=l.INITIAL_MEMORY||16777216;if(g)C=l.wasmMemory,U=l.buffer;else if(l.wasmMemory)C=l.wasmMemory;else if(!((C=new WebAssembly.Memory({initial:ee/X,maximum:2147483648/X,shared:!0})).buffer instanceof SharedArrayBuffer))throw T("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),f&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");function te(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?l.dynCall_v(n):l.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(l)}}C&&(U=C.buffer),ee=U.byteLength,J(U),g||(a()[Q>>2]=Z);var ne=[],re=[],se=[],ae=[],ie=[];function oe(){if(!g){if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)he(l.preRun.shift());te(ne)}}function ue(){te(re)}function le(){g||te(se)}function ce(){if(!g){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;)pe(l.postRun.shift());te(ie)}}function he(e){ne.unshift(e)}function pe(e){ie.unshift(e)}var de=Math.ceil,fe=Math.floor,me=0,ge=null,ye=null;function be(e){D(!g,"addRunDependency cannot be used in a pthread worker"),me++,l.monitorRunDependencies&&l.monitorRunDependencies(me)}function xe(e){if(me--,l.monitorRunDependencies&&l.monitorRunDependencies(me),0==me&&(null!==ge&&(clearInterval(ge),ge=null),ye)){var t=ye;ye=null,t()}}function we(e){throw l.onAbort&&l.onAbort(e),g&&console.error("Pthread aborting at "+(new Error).stack),E(e+=""),T(e),R=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function ve(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}l.preloadedImages={},l.preloadedAudios={};var ke="data:application/octet-stream;base64,";function Ie(e){return ve(e,ke)}var Ne="file://";function Se(e){return ve(e,Ne)}var Ce="tfjs-backend-wasm-threaded-simd.wasm";function Ee(){try{if(N)return new Uint8Array(N);if(b)return b(Ce);throw"both async and sync fetching of the wasm failed"}catch(e){we(e)}}function Te(){return N||!p&&!d||"function"!=typeof fetch||Se(Ce)?new Promise((function(e,t){e(Ee())})):fetch(Ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ce+"'";return e.arrayBuffer()})).catch((function(){return Ee()}))}function Ae(){var e={a:Gt};function t(e,t){var n=e.exports;if(l.asm=n,A=t,!g){var r=Ue.unusedWorkers.length;Ue.unusedWorkers.forEach((function(e){Ue.loadWasmModuleToWorker(e,(function(){--r||xe()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){T("failed to asynchronously prepare wasm: "+e),we(e)}))}if(g||be(),l.instantiateWasm)try{return l.instantiateWasm(e,t)}catch(e){return T("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(N||"function"!=typeof WebAssembly.instantiateStreaming||Ie(Ce)||Se(Ce)||"function"!=typeof fetch)return r(n);fetch(Ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){T("wasm streaming compile failed: "+e),T("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}Ie(Ce)||(Ce=k(Ce));var _e={};function $e(){Ue.initRuntime()}g||re.push({func:function(){Kt()}});var Re=0,De=0,Fe=0;function Oe(e,t,n){Re=e|=0,Fe=t|=0,De=n|=0}l.__register_pthread_ptr=Oe;var Me={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},Le=13488;function ze(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(a(),Le>>2),s=0;if(r==e&&Atomics.compareExchange(a(),Le>>2,r,0)==r&&(s=1,--n<=0))return 1;var i=Atomics.notify(a(),e>>2,n);if(i>=0)return i+s;throw"Atomics.notify returned an unexpected value "+i}function Be(e){if(g)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _kill_thread!";a()[e+12>>2]=0;var t=Ue.pthreads[e];t.worker.terminate(),Ue.freeThreadData(t),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Pe(e){if(g)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cancel_thread!";Ue.pthreads[e].worker.postMessage({cmd:"cancel"})}function We(e){if(g)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";a()[e+12>>2]=0;var t=Ue.pthreads[e];if(t){var n=t.worker;Ue.returnWorkerToPool(n)}}l._emscripten_futex_wake=ze;var Ve,Ue={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){Oe(Ue.mainThreadBlock,!d,1),nn(Ue.mainThreadBlock)},initMainThreadBlock:function(){for(var e=0;e<8;++e)Ue.allocateUnusedWorker();for(Ue.mainThreadBlock=12736,e=0;e<58;++e)i()[Ue.mainThreadBlock/4+e]=0;a()[Ue.mainThreadBlock+12>>2]=Ue.mainThreadBlock;var t=Ue.mainThreadBlock+156;for(a()[t>>2]=t,e=0;e<128;++e)i()[3244+e]=0;Atomics.store(i(),Ue.mainThreadBlock+104>>2,12976),Atomics.store(i(),Ue.mainThreadBlock+40>>2,Ue.mainThreadBlock),Atomics.store(i(),Ue.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(null!==Ue.exitHandlers){for(;Ue.exitHandlers.length>0;)Ue.exitHandlers.pop()();Ue.exitHandlers=null}g&&$&&en()},threadExit:function(e){var t=Pt();t&&(Atomics.store(i(),t+4>>2,e),Atomics.store(i(),t+0>>2,1),Atomics.store(i(),t+60>>2,1),Atomics.store(i(),t+64>>2,0),Ue.runExitHandlers(),ze(t+0,2147483647),Oe(0,0,0),$=0,g&&postMessage({cmd:"exit"}))},threadCancel:function(){Ue.runExitHandlers(),Atomics.store(i(),$+4>>2,-1),Atomics.store(i(),$+0>>2,1),ze($+0,2147483647),$=0,Oe(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Ue.pthreads)(r=Ue.pthreads[e])&&r.worker&&Ue.returnWorkerToPool(r.worker);Ue.pthreads={};for(var t=0;t<Ue.unusedWorkers.length;++t)(n=Ue.unusedWorkers[t]).terminate();for(Ue.unusedWorkers=[],t=0;t<Ue.runningWorkers.length;++t){var n,r=(n=Ue.runningWorkers[t]).pthread;Ue.freeThreadData(r),n.terminate()}Ue.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=a()[e.threadInfoStruct+104>>2];a()[e.threadInfoStruct+104>>2]=0,Yt(t),Yt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Yt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){delete Ue.pthreads[e.pthread.thread],Ue.unusedWorkers.push(e),Ue.runningWorkers.splice(Ue.runningWorkers.indexOf(e),1),Ue.freeThreadData(e.pthread),e.pthread=void 0},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,s=r.cmd;if(e.pthread&&(Ue.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Pt()){var a=Ue.pthreads[r.targetThread];return a?a.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ue.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?tn():"spawnThread"===s?zt(n.data):"cleanupThread"===s?We(r.thread):"killThread"===s?Be(r.thread):"cancelThread"===s?Pe(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?E("Thread "+r.threadId+": "+r.text):"printErr"===s?T("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"exit"===s?e.pthread&&Atomics.load(i(),e.pthread.thread+68>>2)&&Ue.returnWorkerToPool(e):"cancelDone"===s?Ue.returnWorkerToPool(e):"objectTransfer"===s?Ue.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):T("worker sent an unknown command "+s),Ue.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){T("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},f&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){console.log("worker exited - TODO: update the worker queue?")}))),e.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:C,wasmModule:A,DYNAMIC_BASE:Z,DYNAMICTOP_PTR:Q})},allocateUnusedWorker:function(){var e=k("tfjs-backend-wasm-threaded-simd.worker.js");Ue.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ue.unusedWorkers.length&&(Ue.allocateUnusedWorker(),Ue.loadWasmModuleToWorker(Ue.unusedWorkers[0])),Ue.unusedWorkers.length>0?Ue.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function He(e,t){ln(e)}function Ge(){return S}function je(e,t,n,r){we("Assertion failed: "+z(e)+", at: "+[t?z(t):"unknown filename",n,r?z(r):"unknown function"])}function qe(e,t){_main(e,t)}function Ke(e){return a()[Zt()>>2]=e,e}function Xe(e,t){if(g)return st(1,1,e,t);ae.unshift({func:e,arg:t})}function Ye(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(g)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ue.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Je(){we()}function Ze(e,t){}function Qe(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(d){var s=Atomics.wait(a(),e>>2,n,r);if("timed-out"===s)return-73;if("not-equal"===s)return-6;if("ok"===s)return 0;throw"Atomics.wait returned an unexpected value "+s}if(n!=Atomics.load(a(),e>>2))return-6;var i=performance.now(),o=i+r;Atomics.store(a(),Le>>2,e);for(var u=e;e==u;){if((i=performance.now())>o)return-73;tn(),e=Atomics.load(a(),Le>>2)}return 0}function et(){return 0|Fe}function tt(){return 0|De}function nt(e,t,n){s().copyWithin(e,t,t+n)}function rt(){return navigator.hardwareConcurrency}function st(e,t){for(var n=arguments.length-2,r=on(),s=un(8*n),a=s>>3,i=0;i<n;i++)o()[a+i]=arguments[2+i];var u=sn(e,n,s,t);return ln(r),u}l.establishStackSpace=He,l.getNoExitRuntime=Ge,Ve=f?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:g?function(){return performance.now()-l.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var at=[];function it(e,t){it.array||(it.array=[]);var n,r=it.array;for(r.length=0;n=s()[e++];)100===n||102===n?(t=t+7&-8,r.push(o()[t>>3]),t+=8):(t=t+3&-4,r.push(a()[t>>2]),t+=4);return r}function ot(e,t,n){at.length=t;for(var r=n>>3,s=0;s<t;s++)at[s]=o()[r+s];var a=e<0,i=a?_e[-e-1]:Ht[e];if(a){var u=it(at[1],at[2]);return i.apply(null,u)}return i.apply(null,at)}function ut(){return s().length}function lt(e){try{return C.grow(e-U.byteLength+65535>>>16),J(C.buffer),1}catch(e){}}function ct(e){e>>>=0;var t=ut();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var s=t*(1+.2/r);if(s=Math.min(s,e+100663296),lt(Math.min(n,Y(Math.max(16777216,e,s),65536))))return!0}return!1}var ht={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var e=ht.eventHandlers.length-1;e>=0;--e)ht._removeHandler(e);ht.eventHandlers=[],ht.deferredCalls=[]},registerRemoveEventListeners:function(){ht.removeEventListenersRegistered||(ae.push(ht.removeAllEventListeners),ht.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var s in ht.deferredCalls){var a=ht.deferredCalls[s];if(a.targetFunction==e&&r(a.argsList,n))return}ht.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ht.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ht.deferredCalls.length;++t)ht.deferredCalls[t].targetFunction==e&&(ht.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ht.inEventHandler&&ht.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ht.canPerformEventHandlerRequests())for(var e=0;e<ht.deferredCalls.length;++e){var t=ht.deferredCalls[e];ht.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ht.eventHandlers.length;++n)ht.eventHandlers[n].target!=e||t&&t!=ht.eventHandlers[n].eventTypeString||ht._removeHandler(n--)},_removeHandler:function(e){var t=ht.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ht.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ht.inEventHandler,ht.currentEventHandler=e,ht.runDeferredCalls(),e.handlerFunc(t),ht.runDeferredCalls(),--ht.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ht.eventHandlers.push(e),ht.registerRemoveEventListeners();else for(var n=0;n<ht.eventHandlers.length;++n)ht.eventHandlers[n].target==e.target&&ht.eventHandlers[n].eventTypeString==e.eventTypeString&&ht._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){var i=on(),o=un(12);a()[o>>2]=n,a()[o+4>>2]=r,a()[o+8>>2]=s,an(e,637534208,t,r,o),ln(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ue.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function pt(e){var t=W(e)+1,n=Xt(t);return P(e,n,t),n}function dt(e,t,n,r){var s=on(),i=un(12),o=0;t&&(o=pt(t)),a()[i>>2]=o,a()[i+4>>2]=n,a()[i+8>>2]=r,an(e,657457152,0,o,i),ln(s)}function ft(e,t,n,r){dt(e,t=t?z(t):"",n,r)}function mt(e){return e>2?z(e):e}var gt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function yt(e){return e=mt(e),gt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function bt(e){return yt(e)}function xt(e,t,n){var r=bt(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ft(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function wt(e,t,n){return g?st(2,1,e,t,n):xt(e,t,n)}function vt(e,t,n){return bt(e)?xt(e,t,n):wt(e,t,n)}function kt(e){}function It(e,t){}function Nt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,s){t.drawArraysInstancedANGLE(e,n,r,s)},e.drawElementsInstanced=function(e,n,r,s,a){t.drawElementsInstancedANGLE(e,n,r,s,a)},1}function St(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function Ct(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}var Et={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var e=new Float32Array(Et.MINI_TEMP_BUFFER_SIZE),t=0;t<Et.MINI_TEMP_BUFFER_SIZE;t++)Et.miniTempBufferFloatViews[t]=e.subarray(0,t+1);var n=new Int32Array(Et.MINI_TEMP_BUFFER_SIZE);for(t=0;t<Et.MINI_TEMP_BUFFER_SIZE;t++)Et.miniTempBufferIntViews[t]=n.subarray(0,t+1)},recordError:function(e){Et.lastError||(Et.lastError=e)},getNewId:function(e){for(var t=Et.counter++,n=e.length;n<t;n++)e[n]=null;return t},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=z(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Et.registerContext(n,t):0},registerContext:function(e,t){var n=Xt(8);a()[n+4>>2]=Pt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Et.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Et.initExtensions(r),n},makeContextCurrent:function(e){return Et.currentContext=Et.contexts[e],l.ctx=$t=Et.currentContext&&Et.currentContext.GLctx,!(e&&!$t)},getContext:function(e){return Et.contexts[e]},deleteContext:function(e){Et.currentContext===Et.contexts[e]&&(Et.currentContext=null),"object"==typeof ht&&ht.removeAllHandlersOnTarget(Et.contexts[e].GLctx.canvas),Et.contexts[e]&&Et.contexts[e].GLctx.canvas&&(Et.contexts[e].GLctx.canvas.GLctxObject=void 0),Yt(Et.contexts[e].handle),Et.contexts[e]=null},initExtensions:function(e){if(e||(e=Et.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;Nt(t),St(t),Ct(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query");var n=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"];(t.getSupportedExtensions()||[]).forEach((function(e){-1!=n.indexOf(e)&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Et.programs[e],n=Et.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,s=$t.getProgramParameter(t,35718),a=0;a<s;++a){var i=$t.getActiveUniform(t,a),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=$t.getUniformLocation(t,o);if(u){var l=Et.getNewId(Et.uniforms);r[o]=[i.size,l],Et.uniforms[l]=u;for(var c=1;c<i.size;++c){var h=o+"["+c+"]";u=$t.getUniformLocation(t,h),l=Et.getNewId(Et.uniforms),Et.uniforms[l]=u}}}}},Tt=["default","low-power","high-performance"];function At(e,t){var n={},r=t>>2;n.alpha=!!a()[r+0],n.depth=!!a()[r+1],n.stencil=!!a()[r+2],n.antialias=!!a()[r+3],n.premultipliedAlpha=!!a()[r+4],n.preserveDrawingBuffer=!!a()[r+5];var s=a()[r+6];n.powerPreference=Tt[s],n.failIfMajorPerformanceCaveat=!!a()[r+7],n.majorVersion=a()[r+8],n.minorVersion=a()[r+9],n.enableExtensionsByDefault=a()[r+10],n.explicitSwapControl=a()[r+11],n.proxyContextToMainThread=a()[r+12],n.renderViaOffscreenBackBuffer=a()[r+13];var i=bt(e);return i?n.explicitSwapControl?-1:Et.createContext(i,n):-4}function _t(e,t){return At(e,t)}var $t,Rt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Rt.buffers[e];0===t||10===t?((1===e?E:T)(L(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Rt.varargs+=4,a()[Rt.varargs-4>>2]},getStr:function(e){return z(e)},get64:function(e,t){return e}};function Dt(e){return g?st(3,1,e):0}function Ft(e,t,n,r,s){if(g)return st(4,1,e,t,n,r,s)}function Ot(e,t,n,r){if(g)return st(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=a()[t+8*o>>2],l=a()[t+(8*o+4)>>2],c=0;c<l;c++)Rt.printChar(e,s()[u+c]);i+=l}return a()[r>>2]=i,0}function Mt(e){var t=Ue.exitHandlers.pop();e&&t()}function Lt(e,t){null===Ue.exitHandlers&&(Ue.exitHandlers=[]),Ue.exitHandlers.push((function(){cn(e,t)}))}function zt(e){if(g)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var t=Ue.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Ue.runningWorkers.push(t);for(var n=Xt(512),r=0;r<128;++r)a()[n+4*r>>2]=0;var s=e.stackBase+e.stackSize,o=Ue.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,thread:e.pthread_ptr,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+0,0),Atomics.store(i(),u+1,0),Atomics.store(i(),u+2,0),Atomics.store(i(),u+17,e.detached),Atomics.store(i(),u+26,n),Atomics.store(i(),u+12,0),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+11,42),Atomics.store(i(),u+27,e.stackSize),Atomics.store(i(),u+21,e.stackSize),Atomics.store(i(),u+20,s),Atomics.store(i(),u+29,s),Atomics.store(i(),u+30,e.detached),Atomics.store(i(),u+32,e.schedPolicy),Atomics.store(i(),u+33,e.schedPrio);var l=Jt()+40;Atomics.store(i(),u+44,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,selfThreadId:e.pthread_ptr,parentThreadId:e.parent_pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Bt(e,t,n){if(!t&&!n)return Me.EINVAL;if(!e)return T("pthread_getschedparam called with a null thread pointer!"),Me.ESRCH;if(a()[e+12>>2]!==e)return T("pthread_getschedparam attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Me.ESRCH;var r=Atomics.load(i(),e+108+20>>2),s=Atomics.load(i(),e+108+24>>2);return t&&(a()[t>>2]=r),n&&(a()[n>>2]=s),0}function Pt(){return 0|Re}function Wt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return T("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return T("pthread_create called with a null thread pointer!"),28;var s=[];if(g&&0===s.length)return rn(687865856,e,t,n,r);var o=0,u=0,l=0,c=0,h=0;if(t)if(o=a()[t>>2],o+=81920,u=a()[t+8>>2],l=0!==a()[t+12>>2],0===a()[t+16>>2]){var p=a()[t+20>>2],d=a()[t+24>>2];Bt(Ue.currentProxiedOperationCallerThread?Ue.currentProxiedOperationCallerThread:Pt(),t+20,t+24),c=a()[t+20>>2],h=a()[t+24>>2],a()[t+20>>2]=p,a()[t+24>>2]=d}else c=a()[t+20>>2],h=a()[t+24>>2];else o=2097152;var f=0==u;f?u=Qt(16,o):D((u-=o)>0);for(var m=Xt(232),y=0;y<58;++y)i()[(m>>2)+y]=0;a()[e>>2]=m,a()[m+12>>2]=m;var b=m+156;a()[b>>2]=b;var x={stackBase:u,stackSize:o,allocatedOwnStack:f,schedPolicy:c,schedPrio:h,detached:l,startRoutine:n,pthread_ptr:m,parent_pthread_ptr:Pt(),arg:r,transferList:s};return g?(x.cmd="spawnThread",postMessage(x,s)):zt(x),0}function Vt(e){return(e=+e)>=0?+fe(e+.5):+de(e-.5)}function Ut(e){if(g)return st(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ke(28),-1}l._pthread_self=Pt,g?Ue.initWorker():Ue.initMainThreadBlock(),Et.init();var Ht=[null,Xe,wt,Dt,Ft,Ot,Ut],Gt={e:je,r:qe,w:Ye,a:Je,l:Ze,d:Qe,c:ze,h:Ve,g:et,x:tt,q:nt,B:rt,t:ot,A:ct,u:vt,k:kt,s:It,v:_t,m:Dt,o:Ft,i:Ot,p:$e,memory:C||l.wasmMemory,y:Mt,z:Lt,j:Wt,b:Pt,f:Vt,n:Ut,table:_},jt=Ae();l.asm=jt;var qt,Kt=l.___wasm_call_ctors=function(){return(Kt=l.___wasm_call_ctors=l.asm.C).apply(null,arguments)},Xt=(l._init=function(){return(l._init=l.asm.D).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.E).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.F).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.G).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.H).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.I).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.J).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.K).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.L).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.M).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.N).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.O).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.P).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Q).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.R).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.S).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.T).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.U).apply(null,arguments)},l._Div=function(){return(l._Div=l.asm.V).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.W).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.X).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.Y).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.Z).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm._).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.$).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.aa).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.ba).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.ca).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.da).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.ea).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.fa).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.ga).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.ha).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.ia).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.ja).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.ka).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.la).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.ma).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.na).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.oa).apply(null,arguments)},l._Negate=function(){return(l._Negate=l.asm.pa).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.qa).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.ra).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.sa).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.ta).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.ua).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.va).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.wa).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.xa).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.ya).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.za).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.Aa).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Ba).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.Ca).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Da).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.Ea).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.Fa).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Ga).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Ha).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Ia).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Ja).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Ka).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.La).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.Ma).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Na).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Oa).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Pa).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Qa).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Ra).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm.Sa).apply(null,arguments)},l._malloc=function(){return(Xt=l._malloc=l.asm.Ta).apply(null,arguments)}),Yt=l._free=function(){return(Yt=l._free=l.asm.Ua).apply(null,arguments)},Jt=l._emscripten_get_global_libc=function(){return(Jt=l._emscripten_get_global_libc=l.asm.Va).apply(null,arguments)},Zt=l.___errno_location=function(){return(Zt=l.___errno_location=l.asm.Wa).apply(null,arguments)},Qt=(l.___em_js__initPthreadsJS=function(){return(l.___em_js__initPthreadsJS=l.asm.Xa).apply(null,arguments)},l._memalign=function(){return(Qt=l._memalign=l.asm.Ya).apply(null,arguments)}),en=l.___pthread_tsd_run_dtors=function(){return(en=l.___pthread_tsd_run_dtors=l.asm.Za).apply(null,arguments)},tn=l._emscripten_main_thread_process_queued_calls=function(){return(tn=l._emscripten_main_thread_process_queued_calls=l.asm._a).apply(null,arguments)},nn=(l._emscripten_current_thread_process_queued_calls=function(){return(l._emscripten_current_thread_process_queued_calls=l.asm.$a).apply(null,arguments)},l._emscripten_register_main_browser_thread_id=function(){return(nn=l._emscripten_register_main_browser_thread_id=l.asm.ab).apply(null,arguments)}),rn=(l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.bb).apply(null,arguments)},l._emscripten_async_run_in_main_thread=function(){return(l._emscripten_async_run_in_main_thread=l.asm.cb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread=function(){return(l._emscripten_sync_run_in_main_thread=l.asm.db).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_0=function(){return(l._emscripten_sync_run_in_main_thread_0=l.asm.eb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_1=function(){return(l._emscripten_sync_run_in_main_thread_1=l.asm.fb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_2=function(){return(l._emscripten_sync_run_in_main_thread_2=l.asm.gb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(l._emscripten_sync_run_in_main_thread_xprintf_varargs=l.asm.hb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_3=function(){return(l._emscripten_sync_run_in_main_thread_3=l.asm.ib).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_4=function(){return(rn=l._emscripten_sync_run_in_main_thread_4=l.asm.jb).apply(null,arguments)}),sn=(l._emscripten_sync_run_in_main_thread_5=function(){return(l._emscripten_sync_run_in_main_thread_5=l.asm.kb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_6=function(){return(l._emscripten_sync_run_in_main_thread_6=l.asm.lb).apply(null,arguments)},l._emscripten_sync_run_in_main_thread_7=function(){return(l._emscripten_sync_run_in_main_thread_7=l.asm.mb).apply(null,arguments)},l._emscripten_run_in_main_runtime_thread_js=function(){return(sn=l._emscripten_run_in_main_runtime_thread_js=l.asm.nb).apply(null,arguments)}),an=l._emscripten_async_queue_on_thread_=function(){return(an=l._emscripten_async_queue_on_thread_=l.asm.ob).apply(null,arguments)},on=(l._emscripten_tls_init=function(){return(l._emscripten_tls_init=l.asm.pb).apply(null,arguments)},l.stackSave=function(){return(on=l.stackSave=l.asm.qb).apply(null,arguments)}),un=l.stackAlloc=function(){return(un=l.stackAlloc=l.asm.rb).apply(null,arguments)},ln=l.stackRestore=function(){return(ln=l.stackRestore=l.asm.sb).apply(null,arguments)},cn=l.dynCall_vi=function(){return(cn=l.dynCall_vi=l.asm.tb).apply(null,arguments)};function hn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function pn(e){function t(){qt||(qt=!0,l.calledRun=!0,R||(ue(),le(),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ce()))}e=e||h,me>0||(oe(),me>0||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),t()}),1)):t()))}if(l.dynCall_v=function(){return(l.dynCall_v=l.asm.ub).apply(null,arguments)},l.dynCall_ii=function(){return(l.dynCall_ii=l.asm.vb).apply(null,arguments)},l.asm=jt,l.cwrap=M,l.PThread=Ue,l.PThread=Ue,l._pthread_self=Pt,l.wasmMemory=C,l.ExitStatus=hn,l.then=function(e){if(qt)e(l);else{var t=l.onRuntimeInitialized;l.onRuntimeInitialized=function(){t&&t(),e(l)}}return l},ye=function e(){qt||pn(),qt||(ye=e)},l.run=pn,l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return g||(S=!0),g||pn(),e});e.exports=s},234:(e,t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,s=void 0!==(e=e||{})?e:{},a={};for(t in s)s.hasOwnProperty(t)&&(a[t]=s[t]);var i=[],o=function(e,t){throw t},u=!1,l=!1,c=!1,h=!1;u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!u&&!c&&!l;var p,d,f,m,g="";function y(e){return s.locateFile?s.locateFile(e,g):g+e}c?(g=l?n(386).dirname(g)+"/":"//",p=function(e,t){return f||(f=n(993)),m||(m=n(386)),e=m.normalize(e),f.readFileSync(e,t?null:"utf8")},d=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),i=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Ce))throw e})),process.on("unhandledRejection",ne),o=function(e){process.exit(e)},s.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(p=function(e){return read(e)}),d=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?i=scriptArgs:void 0!==arguments&&(i=arguments),"function"==typeof quit&&(o=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?g=self.location.href:document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var b,x,w,v=s.print||console.log.bind(console),k=s.printErr||console.warn.bind(console);for(t in a)a.hasOwnProperty(t)&&(s[t]=a[t]);a=null,s.arguments&&(i=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&(o=s.quit),s.wasmBinary&&(b=s.wasmBinary),s.noExitRuntime&&(x=s.noExitRuntime),"object"!=typeof WebAssembly&&k("no native wasm support detected"),new WebAssembly.Table({initial:147,maximum:147,element:"anyfunc"});var I=!1;function N(e,t){e||ne("Assertion failed: "+t)}function S(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,s){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);O(e,t=Ne(n),n)}return t},array:function(e){var t=Ne(e.length);return M(e,t),t}},i=S(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=a[n[l]];c?(0===u&&(u=Ie()),o[l]=c(r[l])):o[l]=r[l]}var h=i.apply(null,o);return h=function(e){return"string"===t?D(e):"boolean"===t?Boolean(e):e}(h),0!==u&&Se(u),h}function E(e,t,n,r){var s=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&s&&!r?S(e):function(){return C(e,t,n,arguments)}}var T,A,_,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(e,t,n){for(var r=t+n,s=t;e[s]&&!(s>=r);)++s;if(s-t>16&&e.subarray&&$)return $.decode(e.subarray(t,s));for(var a="";t<s;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)a+=String.fromCharCode(i);else{var l=i-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&i)<<6|o)}else a+=String.fromCharCode(i)}return a}function D(e,t){return e?R(A,e,t):""}function F(e,t,n,r){if(!(r>0))return 0;for(var s=n,a=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=a)break;t[n++]=o}else if(o<=2047){if(n+1>=a)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=a)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=a)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-s}function O(e,t,n){return F(e,A,t,n)}function M(e,t){T.set(e,t)}function L(e){s.HEAP8=T=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=_=new Int32Array(e),s.HEAPU8=A=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}function z(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?s.dynCall_v(n):s.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.INITIAL_MEMORY;var B=[],P=[],W=[],V=[];function U(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)q(s.preRun.shift());z(B)}function H(){z(P)}function G(){z(W)}function j(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)K(s.postRun.shift());z(V)}function q(e){B.unshift(e)}function K(e){V.unshift(e)}var X=Math.ceil,Y=Math.floor,J=0,Z=null,Q=null;function ee(e){J++,s.monitorRunDependencies&&s.monitorRunDependencies(J)}function te(e){if(J--,s.monitorRunDependencies&&s.monitorRunDependencies(J),0==J&&(null!==Z&&(clearInterval(Z),Z=null),Q)){var t=Q;Q=null,t()}}function ne(e){throw s.onAbort&&s.onAbort(e),v(e+=""),k(e),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function re(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ae(e){return re(e,se)}var ie="file://";function oe(e){return re(e,ie)}var ue="tfjs-backend-wasm.wasm";function le(){try{if(b)return new Uint8Array(b);if(d)return d(ue);throw"both async and sync fetching of the wasm failed"}catch(e){ne(e)}}function ce(){return b||!u&&!l||"function"!=typeof fetch||oe(ue)?new Promise((function(e,t){e(le())})):fetch(ue,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ue+"'";return e.arrayBuffer()})).catch((function(){return le()}))}function he(){var e={env:we,wasi_snapshot_preview1:we};function t(e,t){var n=e.exports;s.asm=n,L((w=n.memory).buffer),te()}function n(e){t(e.instance)}function r(t){return ce().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),ne(e)}))}if(ee(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return k("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(b||"function"!=typeof WebAssembly.instantiateStreaming||ae(ue)||oe(ue)||"function"!=typeof fetch)return r(n);fetch(ue,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}function pe(e){L(w.buffer)}ae(ue)||(ue=y(ue)),P.push();var de={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=de.buffers[e];0===t||10===t?((1===e?v:k)(R(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return de.varargs+=4,_[de.varargs-4>>2]},getStr:function(e){return D(e)},get64:function(e,t){return e}};function fe(e){return 0}function me(e,t,n,r,s){}function ge(e,t,n,r){for(var s=0,a=0;a<n;a++){for(var i=_[t+8*a>>2],o=_[t+(8*a+4)>>2],u=0;u<o;u++)de.printChar(e,A[i+u]);s+=o}return _[r>>2]=s,0}function ye(e){Ae(e)}function be(e){ye(e)}function xe(e){return(e=+e)>=0?+Y(e+.5):+X(e-.5)}var we={emscripten_notify_memory_growth:pe,fd_close:fe,fd_seek:me,fd_write:ge,proc_exit:be,roundf:xe},ve=he();s.asm=ve,s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Div=function(){return(s._Div=s.asm.Div).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Negate=function(){return(s._Negate=s.asm.Negate).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.__start=function(){return(s.__start=s.asm._start).apply(null,arguments)};var ke,Ie=s.stackSave=function(){return(Ie=s.stackSave=s.asm.stackSave).apply(null,arguments)},Ne=s.stackAlloc=function(){return(Ne=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},Se=s.stackRestore=function(){return(Se=s.stackRestore=s.asm.stackRestore).apply(null,arguments)};function Ce(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ee(e){var t=s.__start;try{t(),Ae(0,!0)}catch(e){if(e instanceof Ce)return;if("unwind"==e)return void(x=!0);var n=e;e&&"object"==typeof e&&e.stack&&(n=[e,e.stack]),k("exception thrown: "+n),o(1,e)}}function Te(e){function t(){ke||(ke=!0,s.calledRun=!0,I||(H(),G(),s.onRuntimeInitialized&&s.onRuntimeInitialized(),_e&&Ee(),j()))}e=e||i,J>0||(U(),J>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),t()}),1)):t()))}function Ae(e,t){t&&x&&0===e||(x||(I=!0,s.onExit&&s.onExit(e)),o(e,new Ce(e)))}if(s.asm=ve,s.cwrap=E,s.then=function(e){if(ke)e(s);else{var t=s.onRuntimeInitialized;s.onRuntimeInitialized=function(){t&&t(),e(s)}}return s},Q=function e(){ke||Te(),ke||(Q=e)},s.run=Te,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();var _e=!0;return s.noInitialRun&&(_e=!1),x=!0,Te(),e});e.exports=s},377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(s,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{i=n(906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},906:()=>{},993:()=>{},352:()=>{},386:()=>{},513:()=>{},589:()=>{},758:()=>{},614:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Ms,computeFlatOffset:()=>Xs,computeOutShape:()=>zs,getNormalizedAxes:()=>Vs,isSliceContinous:()=>Ks,maskToAxes:()=>Ls,parseSliceParams:()=>Ys,startForAxis:()=>js,startIndicesWithElidedDims:()=>Us,stopForAxis:()=>qs,stopIndicesWithElidedDims:()=>Hs,stridesForAxis:()=>Gs,stridesWithElidedDims:()=>Bs});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>ki,computeOutShape:()=>vi,segOpComputeOptimalWindowSize:()=>wi});var r={};n.r(r),n.d(r,{ERF_A1:()=>Ju,ERF_A2:()=>Zu,ERF_A3:()=>Qu,ERF_A4:()=>el,ERF_A5:()=>tl,ERF_P:()=>Yu,PARALLELIZE_THRESHOLD:()=>bi,SELU_SCALE:()=>Xu,SELU_SCALEALPHA:()=>Ku,applyActivation:()=>Wo,assertAndGetBroadcastShape:()=>ci,assertAxesAreInnerMostDims:()=>ga,assertParamsConsistent:()=>ja,assignToTypedArray:()=>ll,axesAreInnerMostDims:()=>pa,calculateShapes:()=>Os,castTensor:()=>pl,combineLocations:()=>da,complexWithEvenIndex:()=>il,complexWithOddIndex:()=>ol,computeConv2DInfo:()=>Ta,computeConv3DInfo:()=>Aa,computeDefaultPad:()=>_a,computeDilation2DInfo:()=>Sa,computeOptimalWindowSize:()=>xi,computeOutAndReduceShapes:()=>fa,computeOutShape:()=>qa,computePool2DInfo:()=>Ca,computePool3DInfo:()=>Ea,convertConv2DDataFormat:()=>La,eitherStridesOrDilationsAreOne:()=>Ma,expandShapeToKeepDim:()=>ma,exponent:()=>hl,exponents:()=>cl,getAxesPermutation:()=>ya,getBroadcastDims:()=>ui,getComplexWithIndex:()=>ul,getFusedBiasGradient:()=>Po,getFusedDyActivation:()=>Bo,getImageCenter:()=>Vu,getInnerMostAxes:()=>xa,getPermuted:()=>Hu,getReductionAxes:()=>li,getReshaped:()=>Uu,getReshapedPermuted:()=>Gu,getSliceBeginCoords:()=>ju,getSliceSize:()=>qu,getUndoAxesPermutation:()=>ba,linspaceImpl:()=>fl,log:()=>rl,mergeRealAndImagArrays:()=>sl,prepareAndValidate:()=>Rs,prepareSplitSize:()=>xo,reshapeTensor:()=>dl,segment_util:()=>t,shouldFuse:()=>Vo,slice_util:()=>e,splitRealAndImagArrays:()=>al,tupleValuesAreOne:()=>Oa,upcastType:()=>yr,validateInput:()=>Fs,validateUpdateShape:()=>Ds,warn:()=>nl});var s={};n.r(s),n.d(s,{json:()=>lx});var a={};n.r(a),n.d(a,{json:()=>cx});var i={};n.r(i),n.d(i,{json:()=>hx});var o={};n.r(o),n.d(o,{json:()=>px});var u={};n.r(u),n.d(u,{json:()=>dx});var l={};n.r(l),n.d(l,{json:()=>fx});var c={};n.r(c),n.d(c,{json:()=>mx});var h={};n.r(h),n.d(h,{json:()=>gx});var p={};n.r(p),n.d(p,{json:()=>yx});var d={};n.r(d),n.d(d,{json:()=>bx});var f={};n.r(f),n.d(f,{json:()=>xx});var m={};n.r(m),n.d(m,{json:()=>wx});var g={};n.r(g),n.d(g,{json:()=>vx});var y={};n.r(y),n.d(y,{json:()=>kx});var b={};n.r(b),n.d(b,{json:()=>Ix});var x={};n.r(x),n.d(x,{json:()=>Nx});var w={};n.r(w),n.d(w,{json:()=>Sx});var v={};n.r(v),n.d(v,{addImpl:()=>wv,ceilImpl:()=>Xv,expImpl:()=>Dk,expm1Impl:()=>Mk,floorImpl:()=>nI,logImpl:()=>fI,maxImpl:()=>vI,multiplyImpl:()=>Bk,notEqualImpl:()=>RI,rsqrtImpl:()=>WI,simpleAbsImpl:()=>Av,sliceImpl:()=>Uk,squaredDifferenceImpl:()=>hN,subImpl:()=>jk,transposeImpl:()=>kI,uniqueImpl:()=>xN});let k={player:null,video:null,stream:null,ctx:null,canvas:null,model:null};class I{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class N{time(e){return S("time")}read(e){return S("read")}readSync(e){return S("readSync")}numDataIds(){return S("numDataIds")}disposeData(e){return S("disposeData")}write(e,t,n){return S("write")}move(e,t,n,r){return S("move")}memory(){return S("memory")}floatPrecision(){return S("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return S("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){return S("fusedBatchMatMul")}slice(e,t,n){return S("slice")}stridedSlice(e,t,n,r){return S("stridedSlice")}unstack(e,t){return S("unstack")}reverse(e,t){return S("reverse")}concat(e,t){return S("concat")}neg(e){return S("neg")}add(e,t){return S("add")}addN(e){return S("addN")}subtract(e,t){return S("subtract")}multiply(e,t){return S("multiply")}realDivide(e,t){return S("realDivide")}floorDiv(e,t){return S("floorDiv")}sum(e,t){return S("sum")}prod(e,t){return S("prod")}unsortedSegmentSum(e,t,n){return S("unsortedSegmentSum")}argMin(e,t){return S("argMin")}argMax(e,t){return S("argMax")}equal(e,t){return S("equal")}notEqual(e,t){return S("notEqual")}less(e,t){return S("less")}lessEqual(e,t){return S("lessEqual")}greater(e,t){return S("greater")}greaterEqual(e,t){return S("greaterEqual")}logicalNot(e){return S("logicalNot")}logicalAnd(e,t){return S("logicalAnd")}logicalOr(e,t){return S("logicalOr")}where(e){return S("where")}select(e,t,n){return S("select")}topk(e,t,n){return S("topk")}min(e,t){return S("min")}minimum(e,t){return S("minimum")}mod(e,t){return S("mod")}max(e,t){return S("max")}maximum(e,t){return S("maximum")}all(e,t){return S("all")}any(e,t){return S("any")}squaredDifference(e,t){return S("squaredDifference")}ceil(e){return S("ceil")}floor(e){return S("floor")}round(e){return S("round")}sign(e){return S("sign")}isNaN(e){return S("isNaN")}isInf(e){return S("isInf")}isFinite(e){return S("isFinite")}pow(e,t){return S("pow")}exp(e){return S("exp")}expm1(e){return S("expm1")}softmax(e,t){return S("softmax")}log(e){return S("log")}log1p(e){return S("log1p")}sqrt(e){return S("sqrt")}rsqrt(e){return S("rsqrt")}square(e){return S("square")}reciprocal(e){return S("reciprocal")}relu(e){return S("relu")}relu6(e){return S("relu6")}prelu(e,t){return S("prelu")}elu(e){return S("elu")}eluDer(e,t){return S("eluDer")}selu(e){return S("selu")}int(e){return S("int")}clip(e,t,n){return S("clip")}abs(e){return S("abs")}complexAbs(e){return S("complexAbs")}sigmoid(e){return S("sigmoid")}softplus(e){return S("softplus")}sin(e){return S("sin")}cos(e){return S("cos")}tan(e){return S("tan")}asin(e){return S("asin")}acos(e){return S("acos")}atan(e){return S("atan")}atan2(e,t){return S("atan2")}sinh(e){return S("sinh")}cosh(e){return S("cosh")}tanh(e){return S("tanh")}asinh(e){return S("asinh")}acosh(e){return S("acosh")}atanh(e){return S("atanh")}erf(e){return S("erf")}step(e,t){return S("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return S("fusedConv2d")}conv2d(e,t,n){return S("conv2d")}conv2dDerInput(e,t,n){return S("conv2dDerInput")}conv2dDerFilter(e,t,n){return S("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){return S("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return S("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return S("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return S("depthwiseConv2DDerFilter")}conv3d(e,t,n){return S("conv3d")}conv3dDerInput(e,t,n){return S("conv3dDerInput")}conv3dDerFilter(e,t,n){return S("conv3dDerFilter")}maxPool(e,t){return S("maxPool")}maxPoolBackprop(e,t,n,r){return S("maxPoolBackprop")}avgPool(e,t){return S("avgPool")}avgPoolBackprop(e,t,n){return S("avgPoolBackprop")}avgPool3d(e,t){return S("avgPool3d")}avgPool3dBackprop(e,t,n){return S("avgPool3dBackprop")}maxPool3d(e,t){return S("maxPool3d")}maxPool3dBackprop(e,t,n,r){return S("maxPool3dBackprop")}reshape(e,t){return S("reshape")}cast(e,t){return S("cast")}tile(e,t){return S("tile")}pad(e,t,n){return S("pad")}transpose(e,t){return S("transpose")}gather(e,t,n){return S("gather")}gatherND(e,t){return S("gatherND")}scatterND(e,t,n){return S("scatterND")}batchToSpaceND(e,t,n){return S("batchToSpaceND")}spaceToBatchND(e,t,n){return S("spaceToBatchND")}resizeBilinear(e,t,n,r){return S("resizeBilinear")}resizeBilinearBackprop(e,t,n){return S("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return S("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return S("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,s,a){return S("batchNorm")}localResponseNormalization4D(e,t,n,r,s){return S("localResponseNormalization4D")}LRNGrad(e,t,n,r,s,a,i){return S("LRNGrad")}multinomial(e,t,n,r){return S("multinomial")}oneHot(e,t,n,r){return S("oneHot")}cumsum(e,t,n,r){return S("cumsum")}nonMaxSuppression(e,t,n,r,s){return S("nonMaxSuppression")}fft(e){return S("fft")}ifft(e){return S("ifft")}complex(e,t){return S("complex")}real(e){return S("real")}imag(e){return S("imag")}cropAndResize(e,t,n,r,s,a){return S("cropAndResize")}depthToSpace(e,t,n){return S("depthToSpace")}split(e,t,n){return S("split")}sparseToDense(e,t,n,r){return S("sparseToDense")}diag(e){return S("diag")}fill(e,t,n){return S("fill")}onesLike(e){return S("onesLike")}zerosLike(e){return S("zerosLike")}linspace(e,t,n){return S("linspace")}dispose(){return S("dispose")}}function S(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function C(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function E(e,t,n){return Math.max(e,Math.min(t,n))}function T(e){return e%2==0?e:e+1}function A(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function _(e,t,n=""){A(F(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function $(e){A(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function R(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||G(e)&&!n)for(let r=0;r<e.length;++r)R(e[r],t,n);else t.push(e);return t}function D(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function F(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function O(e){return e%1==0}function M(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function L(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function z(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function B(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function P(e,t){const n=t.length;return A((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e)),A(e.every((e=>O(e))),(()=>"All values in axis param must be integers but got axis "+e)),e.map((e=>e<0?n+e:e))}function W(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:P(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function V(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function U(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function H(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function G(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function j(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function q(e){return"string"==typeof e||e instanceof String}function K(e){return"number"==typeof e}function X(e){return Array.isArray(e)?X(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":K(e)?"float32":q(e)?"string":"boolean"==typeof e?"bool":"float32"}function Y(e){return!!(e&&e.constructor&&e.call&&e.apply)}function J(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Q(e,t,n){const r=new Array;if(1===t.length){const s=t[0];for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<s;t++)r[t]=Q(e+t*i,a,n)}return r}function ee(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Q(0,e,t)}function te(e,t){const n=ne(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ne(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function re(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ee(e,new Float32Array(n));if("int32"===t)return ee(e,new Int32Array(n));if("bool"===t)return ee(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function se(e){e.forEach((t=>{A(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ae(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ie(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function oe(e){return e&&e.then&&"function"==typeof e.then}class ue{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(oe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function le(){return he}let ce,he=null;function pe(){if(null==ce){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ce=e}return ce}function de(e,t){const n=function(){const e=pe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const fe="Abs",me="Acos",ge="Acosh",ye="Add",be="AddN",xe="ArgMax",we="ArgMin",ve="Asin",ke="Asinh",Ie="Atan",Ne="Atanh",Se="Atan2",Ce="AvgPool",Ee="AvgPoolBackprop",Te="AvgPool3D",Ae="BatchMatMul",_e="BatchToSpaceND",$e="BroadcastTo",Re="Cast",De="Ceil",Fe="ClipByValue",Oe="Complex",Me="Concat",Le="Conv2D",ze="Conv2DBackpropFilter",Be="Conv2DBackpropInput",Pe="Conv3D",We="Conv3DBackpropFilterV2",Ve="Conv3DBackpropInputV2",Ue="Cos",He="Cosh",Ge="Cumsum",je="CropAndResize",qe="DepthToSpace",Ke="DepthwiseConv2dNative",Xe="DepthwiseConv2dNativeBackpropFilter",Ye="DepthwiseConv2dNativeBackpropInput",Je="Dilation2D",Ze="Dilation2DBackpropInput",Qe="Dilation2DBackpropFilter",et="Div",tt="Elu",nt="Erf",rt="Equal",st="Exp",at="Expm1",it="FFT",ot="Fill",ut="FlipLeftRight",lt="Floor",ct="FloorDiv",ht="FusedBatchNorm",pt="GatherV2",dt="GatherNd",ft="Greater",mt="GreaterEqual",gt="Identity",yt="IFFT",bt="Imag",xt="IsFinite",wt="IsInf",vt="IsNan",kt="Less",It="LessEqual",Nt="Log",St="Log1p",Ct="LogicalAnd",Et="LogicalNot",Tt="LogSoftmax",At="Max",_t="Maximum",$t="MaxPool",Rt="MaxPoolBackprop",Dt="MaxPool3D",Ft="MaxPoolWithArgmax",Ot="Mean",Mt="Min",Lt="Minimum",zt="MirrorPad",Bt="Multiply",Pt="Negate",Wt="NotEqual",Vt="NonMaxSuppressionV3",Ut="NonMaxSuppressionV4",Ht="NonMaxSuppressionV5",Gt="OnesLike",jt="OneHot",qt="PadV2",Kt="Pow",Xt="Prelu",Yt="Real",Jt="Reciprocal",Zt="Relu",Qt="Reshape",en="ResizeNearestNeighbor",tn="ResizeBilinear",nn="Relu6",rn="Reverse",sn="Round",an="Rsqrt",on="ScatterNd",un="SelectV2",ln="Selu",cn="Slice",hn="Sin",pn="Sinh",dn="Sign",fn="Sigmoid",mn="Softplus",gn="Sqrt",yn="Sum",bn="SpaceToBatchND",xn="SplitV",wn="Softmax",vn="SquaredDifference",kn="Square",In="Sub",Nn="StridedSlice",Sn="Tan",Cn="Tanh",En="Tile",Tn="Transpose",An="Unique",_n="Unpack",$n="UnsortedSegmentSum",Rn="ZerosLike",Dn="Step",Fn="FromPixels",On="RotateWithOffset",Mn="_FusedMatMul",Ln="FusedConv2D",zn="FusedDepthwiseConv2D",Bn=de("kernelRegistry",(()=>new Map)),Pn=de("gradRegistry",(()=>new Map));function Wn(e,t){const n=jn(e,t);return Bn.get(n)}function Vn(e){return Pn.get(e)}function Un(e){const t=Bn.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Hn(e){const{kernelName:t,backendName:n}=e,r=jn(t,n);Bn.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Bn.set(r,e)}function Gn(e){const{kernelName:t}=e;Pn.has(t)&&le().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Pn.set(t,e)}function jn(e,t){return`${t}_${e}`}class qn{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Xn)}profileKernel(e,t,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Kn(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Kn(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Xn{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?L(r+"ms",9):r.error,o=L(e,25),u=t.rank,l=t.size,c=L(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Yn(e,t,n,r){const s=Z(t),a=function(e,t,n,r){const s=D(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?er(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Jn(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Qn(e,t,n,s,a),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Jn(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":q(e)?`'${e}'`:"bool"===n?Zn(e):parseFloat(e.toFixed(7)).toString(),L(r,t)}function Zn(e){return 0===e?"false":"true"}function Qn(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Jn(er(e)[0],0,n)]:"bool"===n?[Zn(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=er(r),a=er(a)),["["+r.map(((e,t)=>Jn(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Jn(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?er(e):Array.from(e)).map(((e,t)=>Jn(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;p.push(...Qn(e.slice(r,a),l,n,c,s,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;p.push(...Qn(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...Qn(e.slice(r,a),l,n,c,s,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function er(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function tr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=R(e)),le().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function nr(){return le().platform.now()}function rr(e,t="utf-8"){return t=t||"utf-8",le().platform.encode(e,t)}function sr(e,t="utf-8"){return t=t||"utf-8",le().platform.decode(e,t)}class ar{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=D(e),null!=n){const e=n.length;A(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||U(t,this.size),this.strides=Z(e)}set(e,...t){0===t.length&&(t=[0]),A(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ir().makeTensor(this.values,this.shape,this.dtype)}}let ir=null,or=null,ur=null;class lr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=D(e),this.strides=Z(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return or.buffer(this.shape,this.dtype,e)}bufferSync(){return or.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ee(this.shape,e)}arraySync(){return ee(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=ir().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>sr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=ir().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>sr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ir().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ir().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return or.print(this,e)}clone(){return this.throwIfDisposed(),or.clone(this)}toString(e=!1){return Yn(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),or.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ir().makeVariable(this,e,t,n)}}Object.defineProperty(lr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class cr extends lr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!F(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ir().disposeTensor(this),this.dataId=e.dataId,ir().incRef(this,null)}dispose(){ir().disposeVariable(this),this.isDisposedInternal=!0}}var hr,pr,dr,fr,mr;Object.defineProperty(cr,Symbol.hasInstance,{value:e=>e instanceof lr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(hr||(hr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(pr||(pr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(dr||(dr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(fr||(fr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(mr||(mr={}));const gr={float32:fr,int32:pr,bool:dr,complex64:mr};function yr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return gr[e][t]}function br(e){return yr(e,"int32")}function xr(e,t){if(e.dtype===t.dtype)return[e,t];const n=yr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function wr(e,t){return t.some((t=>t.id===e.id))}function vr(e){const t=[];return kr(e,t,new Set),t}function kr(e,t,n){if(null==e)return;if(e instanceof lr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),kr(r,t,n))}}class Ir{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Nr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ir}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new qn(this.backendInstance),!0}setupRegisteredKernels(){Un(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Un(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof N||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Nr.nextTensorId++}nextVariableId(){return Nr.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Cr.runKernelFunc((n=>n.cast(e,t)),n,null,Re,r)}})),[],{}),t}runKernel(e,t,n,r,s){return this.runKernelFunc(null,t,null,e,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=Wn(r,this.backendName);let f,m;if(null!=d)p=()=>{const e=this.backend.numDataIds();f=d.kernelFunc({inputs:t,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const o=n.map((({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n)));if(l){let e=this.getTensorsForGradient(r,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}u=this.saveTensorsForBackwardMode(e)}return o};else{const t=e=>{l&&(u=e.map((e=>this.keep(this.clone(e)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>e(this.backend,t)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,t,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),l&&this.addTapeNode(r,t,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:o.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Vn(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(A(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&q(e[0])&&(s=e.map((e=>rr(e))));const a=r.write(s,t,n),i=new lr(t,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new lr(t,n=n||"float32",e,this.nextTensorId());return this.incRef(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new cr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*j(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof cr||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Vn(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ne(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=vr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(A(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));A(s instanceof lr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=te(D(e),"float32");return Cr.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!F(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Er);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return A(Y(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;A(t.every((e=>e instanceof lr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,s)=>(n=e(...t,s),A(n.value instanceof lr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),A(Y(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];A(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),A(a.every((e=>e instanceof lr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=nr(),n=await this.backend.time(e);return n.wallMs=nr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ir;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Sr(){const e=pe();if(null==e._tfengine){const t=new ue(e);e._tfengine=new Nr(t)}var t;return t=e._tfengine.ENV,he=t,ir=()=>e._tfengine,e._tfengine}Nr.nextTensorId=0,Nr.nextVariableId=0;const Cr=Sr();function Er(e,t){const n={a:e,b:t};return Cr.runKernelFunc(((n,r)=>{const s=n.add(e,t);return r([e,t]),s}),n,null,ye)}function Tr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ar=le();function _r(e,t){let n=e;if(G(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||G(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&$r(e,r,[]),r}function $r(e,t,n){if(n=n||[],!Array.isArray(e)&&!G(e))return void A(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));A(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),A(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)$r(e[t],r,n.concat(t))}function Rr(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function Dr(e,t,n,r="numeric"){if(e instanceof lr)return Rr(r,e.dtype,t,n),e;let s=X(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Rr(r,s,t,n),null==e||!G(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=_r(e,s);G(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?tr(e,s):R(e,[],!0);return Cr.makeTensor(i,a,s)}function Fr(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Dr(e,`${t}[${r}]`,n)),r)}function Or(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Cr.startScope(n);try{const t=r(...e);return oe(t)&&console.error("Cannot return a Promise inside of tidy."),Cr.endScope(t),t}catch(e){throw Cr.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Ar.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ar.registerFlag("IS_BROWSER",(()=>Tr())),Ar.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ar.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ar.registerFlag("PROD",(()=>!1)),Ar.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ar.getBool("DEBUG"))),Ar.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ar.registerFlag("IS_TEST",(()=>!1));const Mr=Or({complex_:function(e,t){const n=Dr(e,"real","complex"),r=Dr(t,"imag","complex");_(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Cr.runKernelFunc((e=>e.complex(n,r)),s,null,Oe)}});function Lr(e,t,n,r){if(null==r&&(r=X(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!G(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){se(t);const e=D(t),r=D(n);A(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==D(t.slice(e));A(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return G(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?tr(e,r):R(e,[],!0),Cr.makeTensor(e,t,r)}function zr(e,t,n){return Lr(e,t,_r(e,n),n)}const Br={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Pr(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Wr(await Promise.all(r)),specs:n}}function Wr(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Vr="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ur(e){return Vr?Buffer.byteLength(e):new Blob([e]).size}function Hr(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Gr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ur(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ur(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function jr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class qr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==qr.instance&&(qr.instance=new qr),qr.instance}static registerSaveRouter(e){qr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){qr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return qr.getHandlers(e,"save")}static getLoadHandlers(e,t){return qr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?qr.getInstance().loadRouters:qr.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Kr=e=>qr.getSaveHandlers(e),Xr="tensorflowjs",Yr="models_store",Jr="model_info_store";function Zr(){if(!le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qr(e){const t=e.result;t.createObjectStore(Yr,{keyPath:"modelPath"}),t.createObjectStore(Jr,{keyPath:"modelPath"})}class es{constructor(e){if(this.indexedDB=Zr(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Xr,1);r.onupgradeneeded=()=>Qr(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Yr,"readonly"),r=t.objectStore(Yr).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Gr(t),a=s.transaction(Jr,"readwrite");let i=a.objectStore(Jr);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Yr,"readwrite");const o=u.objectStore(Yr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Jr);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}es.URL_SCHEME="indexeddb://";const ts=e=>{return le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(es.URL_SCHEME)?(t=e.slice(es.URL_SCHEME.length),new es(t)):null;var t};qr.registerSaveRouter(ts),qr.registerLoadRouter(ts);class ns{constructor(){this.indexedDB=Zr()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Xr,1);n.onupgradeneeded=()=>Qr(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Jr,"readonly"),a=s.objectStore(Jr).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(es.URL_SCHEME)?t.slice(es.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Xr,1);r.onupgradeneeded=()=>Qr(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Jr,"readwrite"),i=a.objectStore(Jr),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(Yr,"readwrite");const r=u.objectStore(Yr).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const rs="/",ss="tensorflowjs_models",as="info",is="model_topology",os="weight_specs",us="weight_data",ls="model_metadata";function cs(e){return{info:[ss,e,as].join(rs),topology:[ss,e,is].join(rs),weightSpecs:[ss,e,os].join(rs),weightData:[ss,e,us].join(rs),modelMetadata:[ss,e,ls].join(rs)}}function hs(e){const t=e.split(rs);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(rs)}class ps{constructor(e){if(!le().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=cs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Gr(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Vr)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Vr){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ps.URL_SCHEME="localstorage://";const ds=e=>{return le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ps.URL_SCHEME)?(t=e.slice(ps.URL_SCHEME.length),new ps(t)):null;var t};qr.registerSaveRouter(ds),qr.registerLoadRouter(ds);class fs{constructor(){A(le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),A("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ss+rs,n=rs+as;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[hs(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=cs(e=(t=e).startsWith(ps.URL_SCHEME)?t.slice(ps.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ms{constructor(){this.managers={}}static getInstance(){return null==ms.instance&&(ms.instance=new ms),ms.instance}static registerManager(e,t){A(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),A(e.length>0,(()=>"scheme must not be an empty string."));const n=ms.getInstance();A(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class gs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(le().get("IS_BROWSER")){le().setPlatform("browser",new gs);try{ms.registerManager(ps.URL_SCHEME,new fs)}catch(e){}try{ms.registerManager(es.URL_SCHEME,new ns)}catch(e){}}let ys;function bs(e,t="float32",n){return t=t||"float32",se(e),new ar(e,t,n)}le().get("IS_NODE")&&le().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=le().global.fetch?le().global.fetch(e,t):(null==ys&&(ys=n(352)),ys(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const xs=Or({cast_:function(e,t){const n=Dr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Cr.runKernelFunc((e=>e.cast(n,t)),r,null,Re,s)}}),ws=Or({clone_:function(e){const t=Dr(e,"x","clone",null),n={x:t};return Cr.runKernelFunc((()=>Cr.makeTensorFromDataId(t.dataId,t.shape,t.dtype)),n,null,gt)}});function vs(e){return new Promise((e=>setTimeout(e))).then(e)}Sr(),or={buffer:bs,cast:xs,clone:ws,print:function(e,t=!1){console.log(e.toString(t))}};class ks{constructor(e){if(!le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ks.URL_SCHEME)&&(e=e.slice(ks.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await vs((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await vs((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Gr(e)}}}}function Is(e,t,n,r){!function(e){A(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){A(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+e)),A(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+t)),A(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ns(e,t){null==t&&(t={});const n=null==t.fetchFunc?le().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Is(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Is(s,t.onProgress,.5,1)}ks.URL_SCHEME="downloads://",qr.registerSaveRouter((e=>le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ks.URL_SCHEME)?function(e="model"){return new ks(e)}(e.slice(ks.URL_SCHEME.length)):null));class Ss{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(A("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=le().platform.fetch,A(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&A(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Gr(e),responses:[s]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+s.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},h=t.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Hr(await Ns(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Cs(e){return null!=e.match(Ss.URL_SCHEME_REGEX)}Ss.URL_SCHEME_REGEX=/^https?:\/\//;const Es=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Cs(e))):Cs(e),n)return Ts(e,t)}return null};function Ts(e,t){return new Ss(e,t)}function As(e,t){return Ts(e,t)}let _s;qr.registerSaveRouter(Es),qr.registerLoadRouter(Es);const $s=Or({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Wn(Fn,Cr.backendName)){const n={pixels:e},r={numChannels:t};return Cr.runKernel(Fn,n,r)}const[o,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,c;if(i?l=e.getContext("2d").getImageData(0,0,o,u).data:r||n?l=e.data:(a||s)&&(null==_s&&(_s=document.createElement("canvas").getContext("2d")),_s.canvas.width=o,_s.canvas.height=u,_s.drawImage(e,0,0,o,u),l=_s.getImageData(0,0,o,u).data),4===t)c=new Int32Array(l);else{const e=o*u;c=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)c[n*t+e]=l[4*n+e]}return function(e,t,n){if($(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=_r(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Lr(e,t,r,n)}(c,[u,o,t],"int32")}});function Rs(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let s=1;for(let e=0;e<n.length-1;++e)s*=n[e];const a=e.shape,i=n.slice();i.pop();let o=1;for(let t=r;t<e.rank;++t)o*=a[t],i.push(a[t]);const u=[...Z(e.shape).map((e=>e/o)),1].slice(0,r);return[i,s,o,u]}function Ds(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Fs(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Ds(n,t,e)}function Os(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:D(t.shape)/o,sliceSize:i,strides:[...Z(n.slice(0,s)),1],outputSize:D(n)}}function Ms(e,t,n){const r=e.shape.length;A(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),A(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)A(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ls(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zs(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Bs(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Ps(e,t,n){return n<=e?n:n-(t-1)}function Ws(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Vs(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Us(i,u,l,r,e),h=Hs(o,u,l,s,e),p=Bs(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=js(i,r,a,e,t,u),h[t]=qs(o,s,a,e,t,u),p[t]=Gs(a,t,u);return{begin:c,end:h,strides:p}}function Us(e,t,n,r,s){const a=[...s],i=Ws(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Ps(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Hs(e,t,n,r,s){const a=[...s],i=Ws(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Ps(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=E(0,a[e],s[e])}return a}function Gs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function js(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=E(0,i,u-1),i}function qs(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?E(0,i,u):E(-1,i,u-1),i}function Ks(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Xs(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ys(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{A(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(A(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}class Js{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Zs{constructor(){this.classNameMap={}}static getMap(){return null==Zs.instance&&(Zs.instance=new Zs),Zs.instance}static register(e){Zs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Qs(e){A(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),A("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),A(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Zs.register(e)}function ea(e){le().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ta(){return Cr}function na(){return Cr.memory()}function ra(e,t){return Cr.tidy(e,t)}function sa(e){vr(e).forEach((e=>e.dispose()))}function aa(e){return Cr.keep(e)}function ia(e,t,n=1){return Cr.registerBackend(e,t,n)}function oa(e){return Cr.customGrad(e)}function ua(e,t){if((G(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&G(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Lr(e,[],[],t)}ur=ea;class la extends Js{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return sa(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){A(Y(e),(()=>"The f passed in variableGrads(f) must be a function")),A(null==t||Array.isArray(t)&&t.every((e=>e instanceof cr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Cr.registeredVariables)t.push(Cr.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;A((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Cr.gradients(e,t,null,!0);A(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),A(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&sa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ua(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(la,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const ca=Or({abs_:function(e){const t=Dr(e,"x","abs"),n={x:t};return Cr.runKernelFunc(((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t))),n,null,fe)}}),ha=Or({add_:function(e,t){let n=Dr(e,"a","add"),r=Dr(t,"b","add");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.add(n,r);return t([n,r]),s}),s,null,ye)}});function pa(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function da(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function fa(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function ma(e,t){return da(e,t.map((e=>1)),t)}function ga(e,t,n){A(pa(t,n),(()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`))}function ya(e,t){if(pa(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ba(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function xa(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const wa=Or({reshape_:function(e,t){const n=Dr(e,"x","reshape",null),r={x:n},s={shape:t};return Cr.runKernelFunc(((e,r)=>(t=B(t,n.size),A(n.size===D(t),(()=>"new shape and old shape must have the same number of elements.")),r([n]),e.reshape(n,t))),r,null,Qt,s)}}),va=Or({transpose_:function(e,t){const n=Dr(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),A(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{A(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Cr.runKernelFunc((e=>e.transpose(n,t)),r,null,Tn,s)}}),ka=Or({all_:function(e,t=null,n=!1){let r=Dr(e,"x","all","bool");const s={x:r},a={axis:t,keepDims:n};return Cr.runKernelFunc((e=>{const s=P(t,r.shape);let a=s;const i=ya(a,r.rank);null!=i&&(r=va(r,i),a=xa(a.length,r.rank));const o=e.all(r,a);if(n){const e=ma(o.shape,s);return wa(o,e)}return o}),s,null,"All",a)}}),Ia=Or({any_:function(e,t=null,n=!1){let r=Dr(e,"x","any","bool");const s={x:r},a={axis:t,keepDims:n};return Cr.runKernelFunc((e=>{const s=P(t,r.shape);let a=s;const i=ya(a,r.rank);null!=i&&(r=va(r,i),a=xa(a.length,r.rank));const o=e.any(r,a);if(n){const e=ma(o.shape,s);return wa(o,e)}return o}),s,null,"Any",a)}}),Na=Or({argMax_:function(e,t=0){let n=Dr(e,"x","argMax");const r={x:n},s={axis:t};return Cr.runKernelFunc(((e,r)=>{r([n]);let s=P(t,n.shape);const a=ya(s,n.rank);return null!=a&&(n=va(n,a),s=xa(s.length,n.rank)),e.argMax(n,s[0])}),r,null,xe,s)}});function Sa(e,t,n,r,s="NHWC",a){return Ta(e,[...t,e[3]],n,a,r,null,null,La(s))}function Ca(e,t,n,r,s,a,i="channelsLast"){const[o,u]=$a(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,e[1],e[1]]}return Ta(e,l,n,r,s,a,!1,i)}function Ea(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Ra(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Aa(e,c,n,r,s,!1,h,a)}function Ta(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=$a(n),[y,b]=$a(r),x=Da(p,y),w=Da(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=_a(e,t,n));const a=e[1],i=Fa((e[0]-t+2*r)/n+1,s);A(O(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const o=Fa((a-t+2*r)/n+1,s);return A(O(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[i,o]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Fa((t-a+p+d)/r+1,o),h=Fa((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Aa(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=Ra(n),[w,v,k]=Ra(r),I=Da(d,w),N=Da(f,v),S=Da(m,k),{padInfo:C,outDepth:E,outHeight:T,outWidth:_}=function(e,t,n,r,s,a,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=_a(e,t,r));const i=e[1],o=e[2],u=Fa((e[0]-t+2*s)/r+1,a);A(O(u),(()=>`The output # of depths (${u}) must be an integer. Change the stride and/or zero pad parameters`));const l=Fa((i-t+2*s)/r+1,a);A(O(l),(()=>`The output # of rows (${l}) must be an integer. Change the stride and/or zero pad parameters`));const c=Fa((o-t+2*s)/r+1,a);return A(O(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[u,l,c,1]}([t,n,r,1],o,0,s,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,I,N,S,o),$=a?g*p:g;let R;return"channelsFirst"===i?R=[u,$,E,T,_]:"channelsLast"===i&&(R=[u,E,T,_,$]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:E,outHeight:T,outWidth:_,outChannels:$,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function _a(e,t,n,r=1){const s=Da(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function $a(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ra(e){return"number"==typeof e?[e,e,e]:e}function Da(e,t){return t<=1?e:e+(e-1)*(t-1)}function Fa(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Oa(e){const[t,n,r]=$a(e);return 1===t&&1===n&&1===r}function Ma(e,t){return Oa(e)||Oa(t)}function La(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const za=Or({avgPool_:function(e,t,n,r,s){const a=Dr(e,"x","avgPool","float32");A(Ma(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=wa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&A(O(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Cr.runKernelFunc(((e,a)=>{const o=Ca(i.shape,t,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&F(o.inShape,o.outShape)?i.clone():e.avgPool(i,o)}),u,null,Ce,l);return c=xs(c,a.dtype),o?wa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ba=Or({avgPool3d_:function(e,t,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:ea("dilations is deprecated, this field will be gone in v3.0.0.");const o=Dr(e,"x","avgPool3d","float32");let u=o,l=!1;4===o.rank&&(l=!0,u=wa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),A("NDHWC"===a,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a)),A(Ma(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&A(O(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let p=Cr.runKernelFunc(((e,o)=>{null==i&&(i=[1,1,1]);const l=Ea(u.shape,t,n,i,r,s,a);return o([u]),e.avgPool3d(u,l)}),c,null,Te,h);return p=xs(p,u.dtype),l?wa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function Pa(e){return null==e?null:0===e.rank?wa(e,[e.size]):1===e.rank?e:2===e.rank?wa(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wa(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const Wa=Or({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Dr(e,"x","batchNorm"),o=Dr(t,"mean","batchNorm"),u=Dr(n,"variance","batchNorm");let l,c;null!=s&&(l=Dr(s,"scale","batchNorm")),null!=r&&(c=Dr(r,"offset","batchNorm")),A(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?wa(e,[1,1,1,e.size]):2===e.rank?wa(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wa(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},f=Cr.runKernelFunc(((e,t)=>(t([h,o,u,l]),e.batchNorm(h,Pa(o),Pa(u),Pa(c),Pa(l),a))),p,null,ht,d);return wa(f,i.shape)}}),Va=Or({batchNorm2d_:function(e,t,n,r,s,a){const i=Dr(e,"x","batchNorm"),o=Dr(t,"mean","batchNorm"),u=Dr(n,"variance","batchNorm");let l,c;return null!=s&&(l=Dr(s,"scale","batchNorm")),null!=r&&(c=Dr(r,"offset","batchNorm")),A(2===i.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+".")),A(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),A(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Wa(i,o,u,c,l,a)}}),Ua=Or({batchNorm3d_:function(e,t,n,r,s,a){const i=Dr(e,"x","batchNorm"),o=Dr(t,"mean","batchNorm"),u=Dr(n,"variance","batchNorm");let l,c;return null!=s&&(l=Dr(s,"scale","batchNorm")),null!=r&&(c=Dr(r,"offset","batchNorm")),A(3===i.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+".")),A(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),A(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Wa(i,o,u,c,l,a)}}),Ha=Or({batchNorm4d_:function(e,t,n,r,s,a){const i=Dr(e,"x","batchNorm"),o=Dr(t,"mean","batchNorm"),u=Dr(n,"variance","batchNorm");let l,c;return null!=s&&(l=Dr(s,"scale","batchNorm")),null!=r&&(c=Dr(r,"offset","batchNorm")),A(4===i.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+".")),A(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),A(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Wa(i,o,u,c,l,a)}}),Ga=Or({clipByValue_:function(e,t,n){const r=Dr(e,"x","clipByValue");A(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Cr.runKernelFunc(((e,s)=>{const a=e.clip(r,t,n);return s([r]),a}),s,null,Fe,a)}});function ja(e,t){const n=e[0].length;e.forEach(((e,t)=>{A(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),A(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)A(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function qa(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Ka=Or({concat_:function(e,t=0){A(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Fr(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}));const r=n,s={axis:t};return Cr.runKernelFunc(((e,r)=>{const s=P(t,n[0].shape)[0],a=qa(n.map((e=>e.shape)),s);if(0===D(a))return zr([],a);if(n=n.filter((e=>e.size>0)),1===n.length)return n[0];ja(n.map((e=>e.shape)),s);const i=e.concat(n,s);return r(n),i}),r,null,Me,s)}}),Xa=Or({concat1d_:function(e){return Ka(e,0)}}),Ya=Or({concat2d_:function(e,t){return Ka(e,t)}}),Ja=Or({concat3d_:function(e,t){return Ka(e,t)}}),Za=Or({concat4d_:function(e,t){return Ka(e,t)}}),Qa=Or({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Dr(e,"x","conv2d"),u=Dr(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=wa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+".")),null!=i&&A(O(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];A(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),A(Ma(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Cr.runKernelFunc(((e,t)=>{const o=La(s),c=Ta(l.shape,u.shape,n,a,r,i,!1,o),h=e.conv2d(l,u,c);return t([l,u]),h}),p,null,Le,d);return c?wa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ei=Or({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Dr(e,"x","conv1d"),u=Dr(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=wa(o,[1,o.shape[0],o.shape[1]])),A(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),A(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+".")),null!=i&&A(O(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),A(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),A(Ma(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),A("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=wa(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=wa(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Qa(p,h,[1,n],r,"NHWC",[1,a],i);return wa(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),ti=Or({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=wa(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),A(4===o.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+".")),A(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank)),A(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];A(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),A(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&A(O(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Cr.runKernelFunc(((e,t)=>{const l=La(a),c=Ta(o,n.shape,r,1,s,i,!1,l),h=e.conv2dDerInput(u,n,c);return t([u,n]),h}),p,null,Be,d);return l?wa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ni=Or({conv2dTranspose_:function(e,t,n,r,s,a){const i=Dr(e,"x","conv2dTranspose"),o=Dr(t,"filter","conv2dTranspose");return ti(n,i,o,r,s,"NHWC",a)}}),ri=Or({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Dr(e,"x","conv3d"),o=Dr(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=wa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),A(5===o.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+".")),A(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),A(Ma(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),A("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=Cr.runKernelFunc(((e,t)=>{const s=Aa(u.shape,o.shape,n,a,r),i=e.conv3d(u,o,s);return t([u,o]),i}),c,null,Pe,h);return l?wa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),si=Or({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Dr(e,"x","depthwiseConv2d"),u=Dr(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=wa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+".")),A(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&A(O(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},d=Cr.runKernelFunc(((e,t)=>{null==a&&(a=[1,1]),A(Ma(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const s=Ta(l.shape,u.shape,n,a,r,i,!0),o=e.depthwiseConv2D(l,u,s);return t([l,u]),o}),h,null,Ke,p);return c?wa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ai=Or({floorDiv_:function(e,t){let n=Dr(e,"a","floorDiv"),r=Dr(t,"b","floorDiv");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.floorDiv(n,r);return t([n,r]),s}),s,null,ct)}}),ii=Or({div_:function(e,t){let n=Dr(e,"a","div"),r=Dr(t,"b","div");if([n,r]=xr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ai(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.realDivide(n,r);return t([n,r]),s}),s,null,et,{})}}),oi=Or({elu_:function(e){const t=Dr(e,"x","elu"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.elu(t);return n([r]),r}),n,null,tt)}});function ui(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function li(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ci(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const hi=Or({equal_:function(e,t){let n=Dr(e,"a","equal"),r=Dr(t,"b","equal");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.equal(n,r)),s,null,rt)}}),pi=Or({exp_:function(e){const t=Dr(e,"x","exp"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.exp(t);return n([r]),r}),n,null,st)}}),di=Or({expandDims_:function(e,t=0){const n=Dr(e,"x","expandDims",null);A(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return t<0&&(A(-(n.rank+1)<=t,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),t=n.rank+t+1),r.splice(t,0,1),wa(n,r)}}),fi=Or({tile_:function(e,t){const n=Dr(e,"x","tile",null);A(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r=[n],s={x:n},a={reps:t};return Cr.runKernelFunc(((e,r)=>{const s=e.tile(n,t);return r([n]),s}),s,null,En,a,r)}}),mi=Or({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=bs([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=wa(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return fi(di(i,0),[n[0],1,1]);if(2===n.length)return fi(di(di(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return fi(di(di(di(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function gi(e,t,n){const r={shape:e,value:t,dtype:n};return Cr.runKernelFunc((r=>r.fill(e,t,n)),{},null,ot,r)}const yi=Or({floor_:function(e){const t=Dr(e,"x","floor"),n={x:t};return Cr.runKernelFunc((e=>e.floor(t)),n,null,lt)}}),bi=30;function xi(e){return e<=bi?e:J(e,Math.floor(Math.sqrt(e)))}function wi(e,t){let n,r=!1;for(e<=bi?(n=e,r=!0):n=J(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=J(e,n+1);return n}function vi(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function ki(e,t,n){const r=e.shape[n],s=[];let a=1,i=1;for(let t=0;t<n;t++)s.push(e.shape[t]),a*=e.shape[t];for(let e=0;e<t.rank;e++)s.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)s.push(e.shape[t]),i*=e.shape[t];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}const Ii=Or({gather_:function(e,t,n=0){const r=Dr(e,"x","gather"),s=Dr(t,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return Cr.runKernelFunc(((e,t)=>{const a=P(n,r.shape)[0],i=ki(r,s,a),o=e.gather(r,wa(s,[s.size]),a);return t([r,s]),wa(o,i.outputShape)}),a,null,pt,i)}}),Ni=Or({greater_:function(e,t){let n=Dr(e,"a","greater"),r=Dr(t,"b","greater");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.greater(n,r)),s,null,ft)}}),Si=Or({greaterEqual_:function(e,t){let n=Dr(e,"a","greaterEqual"),r=Dr(t,"b","greaterEqual");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.greaterEqual(n,r);return t([n,r]),s}),s,null,mt)}}),Ci=Or({maximum_:function(e,t){let n=Dr(e,"a","maximum"),r=Dr(t,"b","maximum");[n,r]=xr(n,r),"bool"===n.dtype&&(n=xs(n,"int32"),r=xs(r,"int32")),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.maximum(n,r);return t([n,r]),s}),s,null,_t)}}),Ei=Or({mul_:function(e,t){let n=Dr(e,"a","mul"),r=Dr(t,"b","mul");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.multiply(n,r);return t([n,r]),s}),s,null,Bt)}}),Ti=Or({leakyRelu_:function(e,t=.2){const n=Dr(e,"x","leakyRelu");return Ci(Ei(ua(t),n),n)}}),Ai=Or({log_:function(e){const t=Dr(e,"x","log"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.log(t);return n([t]),r}),n,null,Nt)}}),_i=Or({max_:function(e,t=null,n=!1){const r=Dr(e,"x","max"),s={x:r},a={reductionIndices:t,keepDims:n};return Cr.runKernelFunc(((e,s)=>{let a=P(t,r.shape);const i=ya(a,r.rank);let o=r;null!=i&&(o=va(r,i),a=xa(a.length,o.rank));const u=e.max(o,a);null!=i&&o.dispose();let l=u;if(n){const e=ma(l.shape,P(t,r.shape));l=wa(l,e),u.dispose()}return s([r,l]),l}),s,null,At,a)}}),$i=Or({sub_:function(e,t){let n=Dr(e,"a","sub"),r=Dr(t,"b","sub");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.subtract(n,r);return t([n,r]),s}),s,null,In)}}),Ri=Or({sum_:function(e,t=null,n=!1){let r=Dr(e,"x","sum");"bool"===r.dtype&&(r=xs(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Cr.runKernelFunc(((e,s)=>{s([r]);const a=P(t,r.shape),i=ya(a,r.rank);let o=a,u=r;null!=i&&(u=va(r,i),o=xa(o.length,r.rank));let l=e.sum(u,o);if(n){const e=ma(l.shape,a);l=wa(l,e)}return l}),s,null,yn,a)}}),Di=Or({logSoftmax_:function(e,t=-1){const n=Dr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r={logits:n},s={axis:t};return Cr.runKernelFunc(((n,r)=>{const s=_i(e,t,!0),a=$i(e,s),i=$i(xs(a,"float32"),Ai(Ri(pi(a),t,!0)));return r([i]),i}),r,null,Tt,s)}}),Fi=Or({logicalAnd_:function(e,t){const n=Dr(e,"a","logicalAnd","bool"),r=Dr(t,"b","logicalAnd","bool");ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.logicalAnd(n,r)),s,null,Ct)}}),Oi=Or({maxPool_:function(e,t,n,r,s){const a=Dr(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=wa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),A(Ma(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&A(O(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Cr.runKernelFunc(((e,a)=>{const o=Ca(i.shape,t,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&F(o.inShape,o.outShape)?i.clone():e.maxPool(i,o),a([i,u]),u}),u,null,$t,l);return o?wa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Mi=Or({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:ea("dilations is deprecated, this field will be gone in v3.0.0.");const o=Dr(e,"x","maxPool3d");let u=o,l=!1;4===o.rank&&(l=!0,u=wa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),A("NDHWC"===a,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a)),A(Ma(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&A(O(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const c={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},p=Cr.runKernelFunc(((e,o)=>{null==i&&(i=[1,1,1]);const l=Ea(u.shape,t,n,i,r,s,a),c=e.maxPool3d(u,l);return o([u,c]),c}),c,null,Dt,h);return l?wa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});function Li(e,t="float32"){if("complex64"===t){const t=Li(e,"float32"),n=Li(e,"float32");return Mr(t,n)}const n=ne(D(e),t);return Cr.makeTensor(n,e,t)}function zi(e,t="float32"){if("complex64"===t){const t=zi(e,"float32"),n=Li(e,"float32");return Mr(t,n)}const n=te(D(e),t);return Cr.makeTensor(n,e,t)}const Bi=Or({mean_:function(e,t=null,n=!1){const r=Dr(e,"x","mean"),s=P(t,r.shape),a=D(fa(r.shape,s)[1]),i={x:r},o={axis:t,keepDims:n},u=()=>{const e=ua(a),s=e.dtype===r.dtype?r:xs(r,e.dtype),i=ii(s,e);return Ri(i,t,n)};return oa((e=>({value:Cr.runKernelFunc(u,i,null,Ot,o),gradFunc:t=>{const n=e.shape.slice();s.forEach((e=>{n[e]=1}));const r=wa(t,n);return ii(Ei(r,zi(e.shape,"float32")),a)}})))(r)}}),Pi=Or({min_:function(e,t=null,n=!1){const r=Dr(e,"x","min"),s={x:r},a={axis:t,keepDims:n};return Cr.runKernelFunc(((e,s)=>{const a=P(t,r.shape);let i=a;const o=ya(i,r.rank);let u=r;null!=o&&(u=va(r,o),i=xa(i.length,r.rank));const l=e.min(u,i);null!=o&&u.dispose();let c=l;if(n){const e=ma(c.shape,a);c=wa(l,e),l.dispose()}return s([r,c]),c}),s,null,Mt,a)}}),Wi=Or({minimum_:function(e,t){let n=Dr(e,"a","minimum"),r=Dr(t,"b","minimum");[n,r]=xr(n,r),"bool"===n.dtype&&(n=xs(n,"int32"),r=xs(r,"int32")),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.minimum(n,r);return t([n,r]),s}),s,null,Lt)}}),Vi=Or({square_:function(e){const t=Dr(e,"x","square"),n=[t];return Cr.runKernelFunc(((e,n)=>(n([t]),e.square(t))),{x:t},null,"Square",{},n,[])}}),Ui=Or({moments_:function(e,t=null,n=!1){const r=P(t,(e=Dr(e,"x","moments")).shape),s=Bi(e,r,n);let a=s.shape;n||(a=ma(s.shape,r));const i=Vi($i(xs(e,"float32"),wa(s,a)));return{mean:s,variance:Bi(i,r,n)}}}),Hi=Or({neg_:function(e){const t=Dr(e,"x","neg"),n={x:t};return Cr.runKernelFunc((e=>e.neg(t)),n,null,Pt)}}),Gi=Or({notEqual_:function(e,t){let n=Dr(e,"a","notEqual"),r=Dr(t,"b","notEqual");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.notEqual(n,r)),s,null,Wt)}}),ji=Or({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const s=Dr(e,"indices","oneHot","int32"),a=[...s.shape,t],i={indices:s},o={depth:t,onValue:n,offValue:r};return Cr.runKernelFunc(((e,i)=>(i([s]),wa(e.oneHot(wa(s,[s.size]),t,n,r),a))),i,null,jt,o)}}),qi=Or({imag_:function(e){const t=Dr(e,"input","imag"),n={input:t};return Cr.runKernelFunc((e=>e.imag(t)),n,null,bt)}}),Ki=Or({real_:function(e){const t=Dr(e,"input","real"),n={input:t};return Cr.runKernelFunc((e=>e.real(t)),n,null,Yt)}}),Xi=Or({zerosLike_:function(e){const t=Dr(e,"x","zerosLike"),n={x:t};return Cr.runKernelFunc((e=>e.zerosLike(t)),n,null,Rn)}}),Yi=Or({onesLike_:function(e){const t=Dr(e,"x","onesLike"),n={x:t};return Cr.runKernelFunc(((e,n)=>{if("complex64"===t.dtype){const e=Yi(Ki(t)),n=Xi(qi(t));return Mr(e,n)}return e.onesLike(t)}),n,null,Gt)}}),Ji=Or({pad_:function(e,t,n=0){const r=Dr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Cr.runKernelFunc(((e,s)=>(s([r]),e.pad(r,t,n))),a,null,qt,s)}}),Zi=Or({prelu_:function(e,t){const n=Dr(e,"x","prelu"),r=Dr(t,"alpha","prelu"),s={x:n,alpha:r};return Cr.runKernelFunc(((e,t)=>{const s=e.prelu(n,r);return t([n,r]),s}),s,null,Xt)}});var Qi=n(377);class eo{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Qi.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class to{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qi.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const no=Or({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new eo(t,n,r,!1,s),i=bs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ro=Or({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=bs(e,r),i=new to(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function so(e,t){$(e);const n=_r(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Lr(e,null,n,t)}function ao(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Cr.runKernelFunc((()=>{if(e===t||e<t&&n<0||t<e&&n>1)return Li([0],r);const s=ne(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return so(s,r)}),{},null,"Range",s)}const io=Or({relu_:function(e){const t=Dr(e,"x","relu"),n={x:t};return Cr.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?xs(t,"int32"):e.relu(t))),n,null,Zt)}}),oo=Or({reverse_:function(e,t){const n=Dr(e,"x","reverse"),r={x:n},s={dims:t};return Cr.runKernelFunc((e=>{const r=P(t,n.shape);if(0===n.rank)return ws(n);const s=e.reverse(n,r);return wa(s,n.shape)}),r,null,rn,s)}}),uo=Or({selu_:function(e){const t=Dr(e,"x","selu"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.selu(t);return n([t]),r}),n,null,ln)}}),lo=Or({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Dr(e,"x","separableConv2d"),u=Dr(t,"depthwiseFilter","separableConv2d"),l=Dr(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=wa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),A(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),A(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),A(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),A(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];A(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=si(c,u,r,s,i,a),m=Qa(f,l,1,"valid",i);return h?wa(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),co=Or({sigmoid_:function(e){const t=Dr(e,"x","sigmoid"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.sigmoid(t);return n([r]),r}),n,null,fn)}}),ho=Or({slice_:function(e,t,n){const r=Dr(e,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Cr.runKernelFunc(((e,s)=>{const[a,i]=Ys(r,t,n);return Ms(r,a,i),s([r]),e.slice(r,a,i)}),s,null,cn,a)}}),po=Or({slice1d_:function(e,t,n){const r=Dr(e,"x","slice1d");return A(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),ho(r,[t],[n])}}),fo=Or({slice2d_:function(e,t,n){const r=Dr(e,"x","slice2d");return A(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),ho(r,t,n)}}),mo=Or({slice3d_:function(e,t,n){const r=Dr(e,"x","slice3d");return A(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),ho(r,t,n)}}),go=Or({slice4d_:function(e,t,n){const r=Dr(e,"x","slice4d");return A(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),ho(r,t,n)}}),yo=Or({softmax_:function(e,t=-1){const n=Dr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Cr.runKernelFunc(((e,r)=>{const s=e.softmax(n,t);return r([s]),s}),r,null,wn,s)}}),bo=Or({softplus_:function(e){const t=Dr(e,"x","softplus"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.softplus(t);return n([t]),r}),n,null,mn)}});function xo(e,t,n=0){let r=[];if("number"==typeof t)A(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{A(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}A(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}const wo=Or({split_:function(e,t,n=0){const r=Dr(e,"x","split"),s={x:r},a={numOrSizeSplits:t,axis:n};return Cr.runKernelFunc(((e,s)=>{const a=P(n,r.shape)[0],i=xo(r,t,a);return e.split(r,i,a)}),s,null,xn,a)}}),vo=Or({sqrt_:function(e){const t=Dr(e,"x","sqrt"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.sqrt(t);return n([t]),r}),n,null,gn)}}),ko=Or({squeeze_:function(e,t){const n=Dr(e,"x","squeeze");return wa(n,W(n.shape,t).newShape)}}),Io=Or({stack_:function(e,t=0){const n=Fr(e,"tensors","stack");if(A(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return di(n[0],t);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;A(t<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((e=>{_(s,e.shape,"All tensors passed to stack must have matching shapes"),A(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((e=>di(e,t)));return Ka(i,t)}}),No=Or({tanh_:function(e){const t=Dr(e,"x","tanh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.tanh(t);return n([r]),r}),n,null,Cn)}});function So(e,t,n){if($(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=_r(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Lr(e,t,r,n)}function Co(e,t,n){if($(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=_r(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Lr(e,t,r,n)}const Eo=Or({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new eo(t,n,r,!0,s),i=bs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),To=Or({unstack_:function(e,t=0){const n=Dr(e,"x","unstack");A(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),t<0&&(t+=n.shape.length);const r={value:n},s={axis:t};return Cr.runKernelFunc((e=>e.unstack(n,t)),r,null,_n,s)}}),Ao=Or({broadcastTo_:function(e,t){let n=Dr(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=wa(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ws(n);const i={x:n},o={shape:t,inputShape:s};return Cr.runKernelFunc((e=>e.tile(n,a)),i,null,$e,o)}}),_o=Or({where_:function(e,t,n){const r=Dr(t,"a","where"),s=Dr(n,"b","where"),a=Dr(e,"condition","where","bool"),i=ci(r.shape,s.shape),o=Ao(r,i),u=Ao(s,i);1===a.rank&&A(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&_(a.shape,u.shape,"Error in where: ");const l={condition:a,t:o,e:u};return Cr.runKernelFunc(((e,t)=>{const n=e.select(a,o,u);return t([a]),n}),l,null,un)}}),$o=Or({dropout_:function(e,t,n,r){const s=Dr(e,"x","dropout");if(A("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),A(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(F(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=ii(yi(ha(ro(a,0,1,"float32",r),i)),i);return Ei(s,o)}}),Ro=Or({fft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cr.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,s=e.as2D(r,n);return t.fft(s).reshape(e.shape)}),t,null,it)}}),Do=Or({rfft_:function(e,t){A("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got "+e.dtype));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=ho(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ka([e,Li(r)],e.shape.length-1),n=t}else s=e;const a=Xi(s),i=wa(Mr(s,a),[r,n]),o=Ro(i),u=Math.floor(n/2)+1,l=Ki(o),c=qi(o),h=wo(l,[u,n-u],l.shape.length-1),p=wo(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,wa(Mr(h[0],p[0]),d)}}),Fo=Or({ifft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cr.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,s=wa(e,[r,n]),a=t.ifft(s);return wa(a,e.shape)}),t,null,yt)}}),Oo=Or({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=wa(e,[n,t]);r=Fo(s)}else{const s=[n,2*(t-1)],a=wa(Ki(e),[n,t]),i=wa(qi(e),[n,t]),o=oo(ho(a,[0,1],[n,t-2]),1),u=Ei(oo(ho(i,[0,1],[n,t-2]),1),ua(-1)),l=Ka([a,o],1),c=Ka([i,u],1),h=wa(Mr(l,c),[s[0],s[1]]);r=Fo(h)}if(r=Ki(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=wa(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Mo=Or({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=wa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wa(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(4===o.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+".")),A(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+".")),A(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];A(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),A(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&A(O(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Cr.runKernelFunc((e=>{const t=La(a),l=Ta(o.shape,n,r,1,s,i,!1,t);return e.conv2dDerFilter(o,u,l)}),h,null,ze,p)}}),Lo=Or({relu6_:function(e){const t=Dr(e,"x","relu6"),n={x:t};return Cr.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?xs(t,"int32"):e.relu6(t))),n,null,nn)}}),zo=Or({step_:function(e,t=0){const n=Dr(e,"x","step"),r={x:n},s={alpha:t};return Cr.runKernelFunc((e=>e.step(n,t)),r,null,Dn,s)}});function Bo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ei(e,zo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Po(e,t){let n=t;const r=li(e.shape,t.shape);return r.length>0&&(n=Ri(n,r)),wa(n,e.shape)}function Wo(e,t,n){if("linear"===t)return e;if("relu"===t)return io(e);if("elu"===t)return oi(e);if("relu6"===t)return Lo(e);if("prelu"===t)return Zi(e,n);throw new Error(`Unknown fused activation ${t}.`)}const Vo=(e,t)=>!(e>0)||"linear"===t,Uo=Or({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===Vo(Cr.state.gradientDepth,u)){let c=Qa(e,t,n,r,s,a,i);return null!=o&&(c=ha(c,o)),Wo(c,u,l)}const c=Dr(e,"x","conv2d"),h=Dr(t,"filter","conv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=wa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),A(4===p.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+".")),A(4===h.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+".")),null!=i&&A(O(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),A(p.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),A(Ma(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),A("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const f=Ta(p.shape,h.shape,n,a,r,i);let m,g;null!=o&&(m=Dr(o,"bias","fused conv2d"),[m]=xr(m,c),ci(f.outShape,m.shape)),null!=l&&(g=Dr(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[s,i,o,l]=t,c=Bo(e,o,u);A(Oa(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[ti(i.shape,c,s,n,r),Mo(i,c,s.shape,n,r)];if(null!=l){const e=Po(l,c);h.push(e)}return h},b=e=>e.fusedConv2d({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?oa(((e,t,n)=>{let r=Cr.runKernelFunc(b,x,null,Ln,w);return n([t,e,r]),d&&(r=wa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):oa(((e,t,n,r)=>{let s=Cr.runKernelFunc(b,x,null,Ln,w);return r([t,e,s,n]),d&&(s=wa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,h,m)}}),Ho=Or({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=wa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Cr.runKernelFunc((t=>{const l=Ta(e.shape,n,r,a,s,i,!0);return t.depthwiseConv2DDerFilter(o,u,l)}),l,null,Xe,c)}}),Go=Or({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=wa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Cr.runKernelFunc((t=>{const u=Ta(e,n.shape,r,a,s,i,!0);return t.depthwiseConv2DDerInput(o,n,u)}),l,null,Ye,c);return u?wa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),jo=Or({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l}){if(!1===Vo(Cr.state.gradientDepth,u)){let c=si(e,t,n,r,s,a,i);return null!=o&&(c=ha(c,o)),Wo(c,u,l)}const c=Dr(e,"x","depthwiseConv2d"),h=Dr(t,"filter","depthwiseConv2d");let p=c,d=!1;3===c.rank&&(d=!0,p=wa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),A(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),A(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),A(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==a&&(a=[1,1]),A(Ma(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&A(O(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const f=Ta(p.shape,h.shape,n,a,r,i,!0);let m,g;null!=o&&(m=Dr(o,"bias","fused conv2d"),[m]=xr(m,c),ci(f.outShape,m.shape)),null!=l&&(g=Dr(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{A(Oa(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=t,h=Bo(e,l,u),p=Go(o.shape,h,s,n,r,a,i),d=Ho(o,h,s.shape,n,r,a,i);return null!=c?[p,d,Po(m,h)]:[p,d]},b=e=>e.fusedDepthwiseConv2D({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u};return null==o?oa(((e,t,n)=>{let r=Cr.runKernelFunc(b,x,null,zn,w);return n([t,e,r]),d&&(r=wa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):oa(((e,t,n,r)=>{let s=Cr.runKernelFunc(b,x,null,zn,w);return r([t,e,s,n]),d&&(s=wa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,h,m)}}),qo=Or({matMul_:function(e,t,n=!1,r=!1){let s=Dr(e,"a","matMul"),a=Dr(t,"b","matMul");[s,a]=xr(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Cr.runKernelFunc(((e,t)=>{t([s,a]);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],u=n?s.shape[s.rank-1]:s.shape[s.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],c=s.shape.slice(0,-2),h=a.shape.slice(0,-2),p=D(c),d=D(h),f=p===d||1===p||1===d;A(s.rank>=2&&a.rank>=2&&f,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${c}) and (${h}).`)),A(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`));const m=(p>d?c:h).concat([u,l]),g=wa(s,n?[p,i,u]:[p,u,i]),y=wa(a,r?[d,l,o]:[d,o,l]),b=e.batchMatMul(g,y,n,r);return wa(b,m)}),i,null,Ae,o)}}),Ko=Or({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Vo(Cr.state.gradientDepth,a)){let o=qo(e,t,n,r);return null!=s&&(o=ha(o,s)),Wo(o,a,i)}let o=Dr(e,"a","fused matMul"),u=Dr(t,"b","fused matMul");[o,u]=xr(o,u);const l=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=o.shape.slice(0,-2),f=u.shape.slice(0,-2),m=D(d),g=D(f);A(o.rank>=2&&u.rank>=2&&o.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${u.rank}.`)),A(F(d,f),(()=>`Error in fused matMul: outer dimensions (${d}) and (${f}) of Tensors with shapes ${o.shape} and `+u.shape+" must match.")),A(l===c,(()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${o.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=o.shape.slice(0,-2).concat([h,p]),b=wa(o,n?[m,l,h]:[m,h,l]),x=wa(u,r?[g,p,c]:[g,c,p]);let w,v;null!=s&&(w=Dr(s,"bias","fused matMul"),[w]=xr(w,o),ci(y,w.shape)),null!=i&&(v=Dr(i,"prelu weights","fused matMul"));const k=(e,t)=>{const[i,o,u,l]=t,c=Bo(wa(e,u.shape),u,a);let h,p;return n||r?!n&&r?(h=qo(c,o,!1,!1),p=qo(c,i,!0,!1)):n&&!r?(h=qo(o,c,!1,!0),p=qo(i,c,!1,!1)):(h=qo(o,c,!0,!0),p=qo(c,i,!0,!0)):(h=qo(c,o,!1,!0),p=qo(i,c,!0,!1)),null!=s?[h,p,Po(l,c)]:[h,p]},I=e=>e.fusedBatchMatMul({a:b,b:x,transposeA:n,transposeB:r,bias:w,activation:a,preluActivationWeights:v}),N={a:b,b:x,bias:w,preluActivationWeights:v},S={transposeA:n,transposeB:r,activation:a};return null==s?oa(((e,t,n)=>{const r=Cr.runKernelFunc(I,N,null,Mn,S);return n([e,t,r]),{value:wa(r,y),gradFunc:k}}))(b,x):oa(((e,t,n,r)=>{const s=Cr.runKernelFunc(I,N,null,Mn,S);return r([e,t,s,n]),{value:wa(s,y),gradFunc:k}}))(b,x,w)}});function Xo(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return so(s,"float32")}Or({hammingWindow_:function(e){return Xo(e,.54,.46)}});const Yo=Or({hannWindow_:function(e){return Xo(e,.5,.5)}}),Jo=Or({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(ho(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Ka([ho(e,a,t-r),gi([r],s)]);i.push(o),a+=n}return 0===i.length?So([],[0,t]):wa(Ka(i),[i.length,t])}});Or({stft_:function(e,t,n,r,s=Yo){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Jo(e,t,n),o=Ei(i,s(t)),u=[];for(let e=0;e<i.shape[0];e++)u.push(Do(ho(o,[e,0],[1,t]),r));return Ka(u)}});const Zo=Or({cropAndResize_:function(e,t,n,r,s,a){const i=Dr(e,"image","cropAndResize"),o=Dr(t,"boxes","cropAndResize","float32"),u=Dr(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const l=o.shape[0];A(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),A(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),A(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),A(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),A(r[0]>=1&&r[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+r)),A("bilinear"===s||"nearest"===s,(()=>"method must be bilinear or nearest, but was "+s));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return Cr.runKernelFunc((e=>e.cropAndResize(i,o,u,r,s,a)),c,null,je,h)}}),Qo=Or({flipLeftRight_:function(e){const t=Dr(e,"image","flipLeftRight","float32");A(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Cr.runKernel(ut,n,{})}}),eu=Or({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Dr(e,"image","rotateWithOffset","float32");A(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Cr.runKernel(On,a,i)}});function tu(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),A(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),A(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1])),A(1===t.rank,(()=>"scores must be a 1D tensor")),A(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0])),A(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const nu=Or({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Dr(e,"boxes","nonMaxSuppression"),i=Dr(t,"scores","nonMaxSuppression"),o=tu(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Cr.runKernelFunc((e=>e.nonMaxSuppression(a,i,n,r,s)),{boxes:a,scores:i},null,Vt,u)}});function ru(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||su)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function su(e,t){return e>t?1:e<t?-1:0}function au(e,t,n,r,s){return uu(e,t,n,r,s,0).selectedIndices}function iu(e,t,n,r,s,a){return uu(e,t,n,r,s,0,!1,a,!0)}function ou(e,t,n,r,s,a){return uu(e,t,n,r,s,a,!0)}function uu(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(hu);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=lu(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*cu(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&ru(l,t,hu))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:so(h,"int32")};return i&&(m.selectedScores=so(p,"float32")),u&&(m.validOutputs=ua(d,"int32")),m}function lu(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function cu(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function hu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const pu=Or({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Dr(e,"boxes","nonMaxSuppression"),o=Dr(t,"scores","nonMaxSuppression"),u=tu(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Cr.runKernel(Ht,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),du=Or({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Dr(e,"boxes","nonMaxSuppression"),o=Dr(t,"scores","nonMaxSuppression"),u=tu(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Cr.runKernel(Ut,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),fu=Or({resizeBilinear_:function(e,t,n=!1){const r=Dr(e,"images","resizeBilinear");A(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),A(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."));let s=r,a=!1;3===r.rank&&(a=!0,s=wa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=t,u={images:s},l={alignCorners:n,size:t},c=Cr.runKernelFunc(((e,t)=>(t([s]),e.resizeBilinear(s,i,o,n))),u,null,tn,l);return a?wa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),mu=Or({resizeNearestNeighbor_:function(e,t,n=!1){const r=Dr(e,"images","resizeNearestNeighbor");A(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),A(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+".")),A("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,a=!1;3===r.rank&&(a=!0,s=wa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=t,u={images:s},l={alignCorners:n,size:t},c=Cr.runKernelFunc(((e,t)=>(t([s]),e.resizeNearestNeighbor(s,i,o,n))),u,null,en,l);return a?wa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),gu=Or({lessEqual_:function(e,t){let n=Dr(e,"a","lessEqual"),r=Dr(t,"b","lessEqual");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.lessEqual(n,r);return t([n,r]),s}),s,null,It)}}),yu=Or({bandPart_:function(e,t,n){A(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),A(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Dr(e,"a","bandPart");A(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=wa(ao(0,a,1,"int32"),[-1,1]),u=ao(0,i,1,"int32"),l=$i(o,u),c=Fi(gu(l,ua(+t,"int32")),Si(l,ua(-n,"int32"))),h=Li([a,i],r.dtype);return wa(Io(To(wa(r,[-1,a,i])).map((e=>_o(c,e,h)))),s)}}),bu=Or({pow_:function(e,t){let n=Dr(e,"base","pow"),r=Dr(t,"exp","pow");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.pow(n,r);return t([n,r,s]),s}),s,null,Kt)}});function xu(e,t,n=null){if(0===e.rank)return ca(e);if(1!==e.rank&&null===n)return xu(wa(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ri(ca(e),n);if(t===1/0)return _i(ca(e),n);if(t===-1/0)return Pi(ca(e),n);if("euclidean"===t||2===t)return vo(Ri(bu(ca(e),ua(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return _i(Ri(ca(e),n[0]),n[1]-1);if(t===1/0)return _i(Ri(ca(e),n[1]),n[0]);if(t===-1/0)return Pi(Ri(ca(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return vo(Ri(Vi(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const wu=Or({norm_:function(e,t="euclidean",n=null,r=!1){const s=xu(e=Dr(e,"x","norm"),t,n);let a=s.shape;if(r){const t=P(n,e.shape);a=ma(s.shape,t)}return wa(s,a)}}),vu=Or({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,A(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)A(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=wo(e,e.shape[0],0).map((e=>ko(e,[0])));A(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Cr.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ei(Ri(Ei(n[r],e)),n[r]);e=$i(e,t)}return ii(e,wu(e,"euclidean"))})));return t?Io(n,0):n}});function ku(e,t=!1){return Cr.tidy((()=>{A(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=mi(n),a=ws(e);const i=So([[1]],[1,1]);let o=ws(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=Cr.tidy((()=>{const t=ho(a,[e,e],[n-e,1]),u=wu(t),l=ho(a,[e,e],[1,1]),c=_o(Ni(l,0),So([[-1]]),So([[1]])),h=$i(l,Ei(c,u)),p=ii(t,h);o=1===p.shape[0]?ws(i):Ka([i,ho(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Hi(ii(qo(c,h),u)),f=ho(a,[e,0],[n-e,r]),m=Ei(d,o),g=va(o);if(0===e)a=$i(f,qo(m,qo(g,f)));else{const t=$i(f,qo(m,qo(g,f)));a=Ka([ho(a,[0,0],[e,r]),t],0)}const y=va(m),b=ho(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=$i(b,qo(qo(b,o),y));else{const t=$i(b,qo(qo(b,o),y));s=Ka([ho(s,[0,0],[n,e]),t],1)}return[o,a,s]})),sa([t,u,l])}return!t&&n>r&&(s=ho(s,[0,0],[n,r]),a=ho(a,[0,0],[r,r])),[s,a]}))}const Iu=Or({qr_:function(e,t=!1){if(A(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank)),2===e.rank)return ku(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=To(wa(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=ku(e,t);s.push(n),a.push(r)})),[wa(Io(s,0),e.shape),wa(Io(a,0),e.shape)]}}});var Nu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Nu||(Nu={}));const Su=Or({computeWeightedLoss_:function(e,t,n=Nu.SUM_BY_NONZERO_WEIGHTS){const r=Dr(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Dr(t,"weights","computeWeightedLoss"));const a=null==s?r:Ei(r,s);if(n===Nu.NONE)return a;if(n===Nu.SUM)return Ri(a);if(n===Nu.MEAN){if(null==s)return Bi(a);{const e=r.size/s.size,t=ii(Ri(a),Ri(s));return e>1?ii(t,ua(e)):t}}if(n===Nu.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ii(Ri(a),ua(r.size));{const e=Ei(s,zi(r.shape)),t=xs(Ri(Gi(e,ua(0))),"float32");return ii(Ri(a),t)}}throw Error("Unknown reduction: "+n)}});Or({absoluteDifference_:function(e,t,n,r=Nu.SUM_BY_NONZERO_WEIGHTS){const s=Dr(e,"labels","absoluteDifference"),a=Dr(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Dr(n,"weights","absoluteDifference")),_(s.shape,a.shape,"Error in absoluteDifference: ");const o=ca($i(s,a));return Su(o,i,r)}}),Or({cosineDistance_:function(e,t,n,r,s=Nu.SUM_BY_NONZERO_WEIGHTS){const a=Dr(e,"labels","cosineDistance"),i=Dr(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Dr(r,"weights","cosineDistance")),_(a.shape,i.shape,"Error in cosineDistance: ");const u=ua(1),l=$i(u,Ri(Ei(a,i),n,!0));return Su(l,o,s)}}),Or({hingeLoss_:function(e,t,n,r=Nu.SUM_BY_NONZERO_WEIGHTS){let s=Dr(e,"labels","hingeLoss");const a=Dr(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Dr(n,"weights","hingeLoss")),_(s.shape,a.shape,"Error in hingeLoss: ");const o=ua(1);s=$i(Ei(ua(2),s),o);const u=io($i(o,Ei(s,a)));return Su(u,i,r)}}),Or({huberLoss_:function(e,t,n,r=1,s=Nu.SUM_BY_NONZERO_WEIGHTS){const a=Dr(e,"labels","huberLoss"),i=Dr(t,"predictions","huberLoss");let o=null;null!=n&&(o=Dr(n,"weights","huberLoss")),_(a.shape,i.shape,"Error in huberLoss: ");const u=ua(r),l=ca($i(i,a)),c=Wi(l,u),h=$i(l,c),p=ha(Ei(ua(.5),Vi(c)),Ei(u,h));return Su(p,o,s)}}),Or({logLoss_:function(e,t,n,r=1e-7,s=Nu.SUM_BY_NONZERO_WEIGHTS){const a=Dr(e,"labels","logLoss"),i=Dr(t,"predictions","logLoss");let o=null;null!=n&&(o=Dr(n,"weights","logLoss")),_(a.shape,i.shape,"Error in logLoss: ");const u=ua(1),l=ua(r),c=Hi(Ei(a,Ai(ha(i,l)))),h=Ei($i(u,a),Ai(ha($i(u,i),l))),p=$i(c,h);return Su(p,o,s)}});const Cu=Or({squaredDifference_:function(e,t){let n=Dr(e,"a","squaredDifference"),r=Dr(t,"b","squaredDifference");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.squaredDifference(n,r);return t([n,r]),s}),s,null,vn,{})}});Or({meanSquaredError_:function(e,t,n,r=Nu.SUM_BY_NONZERO_WEIGHTS){const s=Dr(e,"labels","meanSquaredError"),a=Dr(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Dr(n,"weights","meanSquaredError")),_(s.shape,a.shape,"Error in meanSquaredError: ");const o=Cu(s,a);return Su(o,i,r)}});const Eu=Or({log1p_:function(e){const t=Dr(e,"x","log1p"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.log1p(t);return n([t]),r}),n,null,St)}});Or({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Nu.SUM_BY_NONZERO_WEIGHTS){let a=Dr(e,"multiClassLabels","sigmoidCrossEntropy");const i=Dr(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Dr(n,"weights","sigmoidCrossEntropy")),_(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ua(r),t=ua(1),n=ua(.5);a=ha(Ei(a,$i(t,e)),Ei(n,e))}const u=function(e,t){const n=Dr(e,"labels","sigmoidCrossEntropyWithLogits"),r=Dr(t,"logits","sigmoidCrossEntropyWithLogits");_(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=io(r),a=Ei(r,n),i=Eu(pi(Hi(ca(r))));return ha($i(s,a),i)}(a,i);return Su(u,o,s)}});const Tu=Or({logSumExp_:function(e,t=null,n=!1){const r=Dr(e,"x","logSumExp"),s=P(t,r.shape),a=_i(r,s,!0),i=$i(r,a),o=pi(i),u=Ri(o,s),l=Ai(u),c=ha(wa(a,l.shape),l);if(n){const e=ma(c.shape,s);return wa(c,e)}return c}});Or({softmaxCrossEntropy_:function(e,t,n,r=0,s=Nu.SUM_BY_NONZERO_WEIGHTS){let a=Dr(e,"onehotLabels","softmaxCrossEntropy");const i=Dr(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Dr(n,"weights","softmaxCrossEntropy")),_(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ua(r),t=ua(1),n=ua(a.shape[1]);a=ha(Ei(a,$i(t,e)),ii(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return oa(((e,t,r)=>{const s=Tu(t,[n],!0),a=$i(xs(t,"float32"),s);r([e,a]);const i=Hi(Ei(a,e));return{value:Ri(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=ma(e.shape,[n]);return[Ei(wa(e,a),$i(xs(r,"float32"),pi(s))),Ei(wa(e,a),$i(pi(s),xs(r,"float32")))]}}}))(e,t)}(a,i);return Su(u,o,s)}});const Au={flipLeftRight:Qo,resizeNearestNeighbor:mu,resizeBilinear:fu,rotateWithOffset:eu,cropAndResize:Zo,nonMaxSuppression:nu,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Dr(e,"boxes","nonMaxSuppressionAsync"),i=Dr(t,"scores","nonMaxSuppressionAsync"),o=tu(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=au(u[0],u[1],n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),l},nonMaxSuppressionWithScore:pu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Dr(e,"boxes","nonMaxSuppressionAsync"),o=Dr(t,"scores","nonMaxSuppressionAsync"),u=tu(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=ou(l[0],l[1],n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),c},nonMaxSuppressionPadded:du,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Dr(e,"boxes","nonMaxSuppressionAsync"),o=Dr(t,"scores","nonMaxSuppressionAsync"),u=tu(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),f=iu(p,d,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),f}},_u={bandPart:yu,gramSchmidt:vu,qr:Iu};class $u extends la{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:ra((()=>Xi(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:ra((()=>Xi(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ra((()=>{const e=ha(Ei(a,this.rho),Ei(Vi(s),1-this.rho)),t=Ei(ii(vo(ha(i,this.epsilon)),vo(ha(a,this.epsilon))),s),n=ha(Ei(i,this.rho),Ei(Vi(t),1-this.rho));a.assign(e),i.assign(n);const o=ha(Ei(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(sa(this.accumulatedGrads.map((e=>e.variable))),sa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}$u.className="Adadelta",Qs($u);class Ru extends la{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:ra((()=>gi(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ra((()=>{const e=ha(a,Vi(s));a.assign(e);const t=ha(Ei(ii(s,vo(ha(e,Cr.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&sa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Ru.className="Adagrad",Qs(Ru);class Du extends la{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ra((()=>{this.accBeta1=ua(t).variable(),this.accBeta2=ua(n).variable()})),null==r&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ra((()=>{const n=$i(1,this.accBeta1),r=$i(1,this.accBeta2);t.forEach(((t,s)=>{const a=Cr.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:ra((()=>Xi(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:ra((()=>Xi(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=ha(Ei(o,this.beta1),Ei(i,1-this.beta1)),c=ha(Ei(u,this.beta2),Ei(Vi(i),1-this.beta2)),h=ii(l,n),p=ii(c,r);o.assign(l),u.assign(c);const d=ha(Ei(ii(h,ha(vo(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Ei(this.accBeta1,this.beta1)),this.accBeta2.assign(Ei(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&sa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&sa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ra((()=>{this.accBeta1.assign(bu(this.beta1,this.iterations_+1)),this.accBeta2.assign(bu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Du.className="Adam",Qs(Du);class Fu extends la{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ra((()=>{this.iteration=ua(0).variable(),this.accBeta1=ua(t).variable()})),null==r&&(this.epsilon=Cr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ra((()=>{const n=$i(1,this.accBeta1),r=ii(-this.learningRate,ha(Ei(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Cr.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:Xi(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:Xi(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=ha(Ei(o,this.beta1),Ei(i,1-this.beta1)),c=Ei(u,this.beta2),h=ca(i),p=Ci(c,h);o.assign(l),u.assign(p);const d=ha(Ei(ii(r,n),ii(l,ha(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(ha(this.iteration,1)),this.accBeta1.assign(Ei(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&sa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&sa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Fu.className="Adamax",Qs(Fu);class Ou extends la{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Cr.registeredVariables[t];ra((()=>{const e=ha(Ei(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=aa(ua(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ou.className="SGD",Qs(Ou);class Mu extends Ou{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ua(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:ra((()=>Xi(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ra((()=>{let e;const t=ha(Ei(this.m,s),a);e=this.useNesterov?ha(Ei(this.c,ha(a,Ei(t,this.m))),r):ha(Ei(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&sa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Mu.className="Momentum",Qs(Mu);class Lu extends la{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Cr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cr.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:ra((()=>Xi(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:ra((()=>Xi(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:ra((()=>Xi(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ra((()=>{const e=ha(Ei(i,this.decay),Ei(Vi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ha(Ei(t,this.decay),Ei(a,1-this.decay)),u=ii(Ei(a,this.learningRate),vo($i(e,ha(Vi(s),this.epsilon)))),l=ha(Ei(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=$i(r,l);r.assign(c)}else{const e=ha(Ei(i,this.decay),Ei(Vi(a),1-this.decay)),t=ha(Ei(o,this.momentum),ii(Ei(a,this.learningRate),vo(ha(e,this.epsilon))));i.assign(e),o.assign(t);const n=$i(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&sa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&sa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&sa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Lu.className="RMSProp",Qs(Lu);class zu{static sgd(e){return new Ou(e)}static momentum(e,t,n=!1){return new Mu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Lu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Du(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new $u(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Fu(e,t,n,r,s)}static adagrad(e,t=.1){return new Ru(e,t)}}const Bu={sgd:zu.sgd,momentum:zu.momentum,adadelta:zu.adadelta,adagrad:zu.adagrad,rmsprop:zu.rmsprop,adamax:zu.adamax,adam:zu.adam},Pu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Wu(){return new Promise((e=>Pu((()=>e()))))}function Vu(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Uu(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Hu(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Gu(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function ju(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function qu(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const Ku=1.7580993408473768,Xu=1.0507009873554805,Yu=.3275911,Ju=.254829592,Zu=-.284496736,Qu=1.421413741,el=-1.453152027,tl=1.061405429;function nl(...e){le().getBool("IS_TEST")||console.warn(...e)}function rl(...e){le().getBool("IS_TEST")||console.log(...e)}function sl(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function al(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function il(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ol(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ul(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ll(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function cl(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function hl(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function pl(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=Li(e.shape),r=xs(e,"float32"),s=n.complex(r,t);return t.dispose(),r.dispose(),s}if(!H(e.dtype,t))return Cr.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),s=xs(r,t);return r.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){const t=ua(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function dl(e,t){return Cr.makeTensorFromDataId(e.dataId,t,e.dtype)}function fl(e,t,n){const r=(t-e)/(n-1),s=ne(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return so(s,"float32")}function ml(e,t,n){const r=new Array(e.rank).fill(0),s=e.shape.slice();return t.map((t=>{const a=[...s];a[n]=t;const i=ho(e,r,a);return r[n]+=t,i}))}function gl(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=bs(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r.toTensor()}function yl(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=V(n,i*r),l=V("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[zr(u,c,n),zr(l,c,"int32")]}function bl(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=bs(e,"int32"),s=bs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const xl={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,zo(xs(n,"float32"),-1))}}},wl={kernelName:me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Vi(xs(n,"float32")),r=vo($i(ua(1),t));return Hi(ii(e,r))}}}},vl={kernelName:ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=vo($i(Vi(xs(n,"float32")),1));return ii(e,t)}}}},kl={kernelName:ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{let t=e;const r=li(n.shape,s);return r.length>0&&(t=Ri(t,r)),wa(t,n.shape)},b:()=>{let t=e;const n=li(r.shape,s);return n.length>0&&(t=Ri(t,n)),wa(t,r.shape)}}}},Il={kernelName:be,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Nl={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xi(n)}}},Sl={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xi(n)}}},Cl={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,vo($i(ua(1),Vi(xs(n,"float32")))))}}},El={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=vo(ha(ua(1),Vi(xs(n,"float32"))));return ii(e,t)}}}},Tl={kernelName:Se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{const t=ha(Vi(n),Vi(r));let a=Ei(e,ii(r,t));const i=li(n.shape,s);return i.length>0&&(a=Ri(a,i)),wa(a,n.shape)},b:()=>{const t=ha(Vi(n),Vi(r));let a=Hi(Ei(e,ii(n,t)));const i=li(r.shape,s);return i.length>0&&(a=Ri(a,i)),wa(a,r.shape)}}}},Al={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,ha(Vi(xs(n,"float32")),1))}}},_l={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,$i(ua(1),Vi(xs(n,"float32"))))}}},$l=Or({avgPool3dBackprop_:function(e,t,n,r,s=[1,1,1],a,i){const o=Dr(e,"dy","avgPool3dBackprop"),u=Dr(t,"input","avgPool3dBackprop");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=wa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=wa(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(5===l.rank,(()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+".")),A(5===c.rank,(()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+".")),A(Ma(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&A(O(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:l,input:c},d={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},f=Cr.runKernelFunc((e=>{const t=Ea(c.shape,n,r,s,a,i);return e.avgPool3dBackprop(l,c,t)}),p,null,"AvgPool3DBackprop",d);return h?wa(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),Rl={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>$l(e,r,s,a,l,o,u)}}},Dl=Or({avgPoolBackprop_:function(e,t,n,r,s){const a=Dr(e,"dy","avgPoolBackprop"),i=Dr(t,"input","avgPoolBackprop");A(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=wa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=wa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(4===u.rank,(()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+u.rank+".")),A(4===o.rank,(()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+o.rank+"."));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},p=Cr.runKernelFunc((e=>{const t=Ca(o.shape,n,r,1,s);return e.avgPoolBackprop(u,o,t)}),c,null,Ee,h);return l?wa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Fl={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Dl(e,r,s,a,i)}}},Ol={kernelName:Ae,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>qo(e,s,!1,!1),b:()=>qo(e,r,!0,!1)}:a&&!i?{a:()=>qo(s,e,!1,!0),b:()=>qo(r,e,!1,!1)}:{a:()=>qo(s,e,!0,!0),b:()=>qo(e,r,!0,!0)}:{a:()=>qo(e,s,!1,!0),b:()=>qo(r,e,!0,!1)}}},Ml=Or({spaceToBatchND_:function(e,t,n){const r=Dr(e,"x","spaceToBatchND");A(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),A(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),A(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Cr.runKernelFunc((e=>e.spaceToBatchND(r,t,n)),s,null,bn,a)}}),Ll={kernelName:_e,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Ml(e,r,s)}}},zl={kernelName:$e,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Ri(e,o,!0)}}},Bl={kernelName:Re,gradFunc:e=>({x:()=>e.clone()})},Pl={kernelName:De,gradFunc:e=>({x:()=>Xi(e)})},Wl={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>_o(Fi(Si(r,s),gu(r,a)),e,Xi(e))}}},Vl={kernelName:Me,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=P(s,t[0].shape)[0],i=r.map((e=>e[a]));return wo(e,i,a).map((e=>()=>e))}},Ul={kernelName:Le,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return A(Oa(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>ti(r.shape,e,s,i,o,u),filter:()=>Mo(r,e,s.shape,i,o,u)}}},Hl={kernelName:Be,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Qa(e,s,a,i,o,1,u),filter:()=>Mo(e,r,s.shape,a,i,o,u)}}},Gl=Or({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=wa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=wa(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),A(5===a.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+".")),A(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+".")),A(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),A(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),A(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return Cr.runKernelFunc((e=>{const t=Aa(a.shape,n,r,1,s);return e.conv3dDerFilter(a,i,t)}),o,null,We,u)}}),jl=Or({conv3DBackpropInput_:function(e,t,n,r,s){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=wa(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];A(5===a.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+".")),A(5===i.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank)),A(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),A(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),A(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=Cr.runKernelFunc((e=>{const t=Aa(a,n.shape,r,1,s);return e.conv3dDerInput(i,n,t)}),c,null,Ve,h);return o?wa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ql={kernelName:Pe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;A(Oa(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>jl(i.shape,e,o,s,a),filter:()=>Gl(i,e,o.shape,s,a)}}},Kl=Or({sin_:function(e){const t=Dr(e,"x","sin"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.sin(t);return n([t]),r}),n,null,hn)}}),Xl={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(Hi(Kl(xs(n,"float32"))),e)}}},Yl=Or({sinh_:function(e){const t=Dr(e,"x","sinh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.sinh(t);return n([t]),r}),n,null,pn)}}),Jl={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(Yl(xs(n,"float32")),e)}}},Zl=Or({cumsum_:function(e,t=0,n=!1,r=!1){const s=Dr(e,"x","cumsum"),a={x:s},i={axis:t,exclusive:n,reverse:r};return Cr.runKernelFunc(((e,a)=>{const i=ya([t],s.rank);let o=s;null!=i&&(o=va(s,i));const u=xa(1,s.rank)[0];let l=e.cumsum(o,u,n,r);if(a([s]),null!=i){const e=ba(i);l=va(l,e)}return l}),a,null,Ge,i)}}),Ql={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=ya([s],r.rank);let n=Zl(e,s,a,!i);return null!=t&&(n=va(n,t)),n}}}},ec={kernelName:Ke,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;A(Oa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return A(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),A(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),A(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),A(Ma(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&A(O(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Go(u.shape,e,l,s,a,r,i),filter:()=>Ho(u,e,l.shape,s,a,r,i)}}},tc={kernelName:Je,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Cr.runKernel(Ze,a,n),filter:()=>Cr.runKernel(Qe,i,n)}}},nc={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{const t=ii(e,xs(r,"float32")),a=li(n.shape,s);return a.length>0?wa(Ri(t,a),n.shape):t},b:()=>{let t=Ei(e,xs(n,"float32"));const a=li(r.shape,s);a.length>0&&(t=wa(Ri(t,a),r.shape));const i=Vi(r);return Hi(ii(t,xs(i,"float32")))}}}},rc={kernelName:tt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),s={dy:e,y:n};return{x:()=>Cr.runKernelFunc(r,s,null,"EluGrad")}}},sc={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ei(pi(Hi(Vi(n))),2/Math.sqrt(Math.PI));return{x:()=>Ei(e,r)}}},ac={kernelName:st,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,n)}}},ic={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,pi(n))}}},oc={kernelName:lt,gradFunc:e=>({x:()=>Xi(e)})},uc={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{const t=ii(e,xs(r,"float32")),a=li(n.shape,s);return a.length>0?wa(Ri(t,a),n.shape):t},b:()=>{let t=Ei(e,xs(n,"float32"));const a=li(r.shape,s);a.length>0&&(t=wa(Ri(t,a),r.shape));const i=Vi(r);return Hi(ii(t,xs(i,"float32")))}}}},lc=Or({rsqrt_:function(e){const t=Dr(e,"x","rsqrt"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.rsqrt(t);return n([t]),r}),n,null,an)}}),cc={kernelName:ht,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?ua(1):o,l=li(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=$i(s,a),p=Ei(e,u),d=lc(ha(i,ua(r))),f=Ei(Ei(Ei(d,d),d),ua(-.5));return{x:()=>1===a.rank?wa(Ei(Ei(e,fi(wa(d,[1,1,1,a.shape[0]]),c)),u),s.shape):wa(Ei(Ei(e,d),u),s.shape),mean:()=>{let e=Ei(Ei(d,ua(-1)),p);return 1===a.rank&&(e=Ri(e,l)),wa(e,a.shape)},variance:()=>{let e=Ei(Ei(f,h),p);return 1===a.rank&&(e=Ri(e,l)),wa(e,a.shape)},scale:()=>{const t=Ei(h,d);let n=Ei(e,t);return 1===a.rank&&(n=Ri(n,l)),wa(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ri(t,l)),wa(t,a.shape)}}}},hc=Or({unsortedSegmentSum_:function(e,t,n){const r=Dr(e,"x","unsortedSegmentSum"),s=Dr(t,"segmentIds","unsortedSegmentSum","int32");A(O(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Cr.runKernelFunc(((e,t)=>{const a=e.unsortedSegmentSum(r,s,n);return t([s]),a}),a,null,$n,i)}}),pc={kernelName:pt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=P(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=dc(0,u),p=dc(u+1,u+1+c),d=fc([o,[n],l]),f=wa(e,d),m=wa(s,[n]),g=fc([[u],h,p]),y=va(f,g);let b=hc(y,m,r.shape[i]);const x=ba(g);return b=va(b,x),b},indices:()=>s}}};function dc(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function fc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const mc={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Xi(n),b:()=>Xi(r)}}},gc={kernelName:gt,gradFunc:e=>({x:()=>xs(e,"float32")})},yc={kernelName:xt,gradFunc:e=>({x:()=>Xi(e)})},bc={kernelName:wt,gradFunc:e=>({x:()=>Xi(e)})},xc={kernelName:vt,gradFunc:e=>({x:()=>Xi(e)})},wc={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,ha(n,1))}}},vc={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,xs(n,"float32"))}}},kc={kernelName:Tt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=pi(r);return $i(e,Ei(Ri(e,s,!0),t))}}}},Ic=Or({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return Cr.runKernelFunc((o=>o.LRNGrad(n,e,t,r,s,a,i)),o,null,"LRNBackprop",u)}}),Nc={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Ic(r,s,e,a,i,o,u)}}};function Sc(e,t,n,r){return t.rank<n.rank&&(t=wa(t,ma(t.shape,r))),e.rank<n.rank&&(e=wa(e,ma(e.shape,r))),{x:()=>Ei(e,xs(hi(n,t),e.dtype))}}const Cc={kernelName:At,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Sc(e,t[1],a,P(s,a.shape));return{x:()=>i.x()}}},Ec=Or({less_:function(e,t){let n=Dr(e,"a","less"),r=Dr(t,"b","less");[n,r]=xr(n,r),ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.less(n,r)),s,null,kt)}}),Tc={kernelName:_t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ei(e,xs(Si(n,r),"float32")),b:()=>Ei(e,xs(Ec(n,r),"float32"))}}},Ac=Or({maxPool3dBackprop_:function(e,t,n,r,s,a=[1,1,1],i,o){const u=Dr(e,"dy","maxPool3dBackprop"),l=Dr(t,"input","maxPool3dBackprop"),c=Dr(n,"output","maxPool3dBackprop");let h=u,p=l,d=c,f=!1;4===l.rank&&(f=!0,h=wa(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=wa(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=wa(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),A(5===h.rank,(()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+".")),A(5===p.rank,(()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+".")),A(5===d.rank,(()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+d.rank+".")),A(Ma(s,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&A(O(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:p,output:d},g={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},y=Cr.runKernelFunc((e=>{const t=Ea(p.shape,r,s,a,i,o);return e.maxPool3dBackprop(h,p,d,t)}),m,null,"MaxPool3DBackprop",g);return f?wa(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),_c={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Ac(e,r,s,a,i,c,u,l)}}},$c=Or({maxPoolBackprop_:function(e,t,n,r,s,a,i){const o=Dr(e,"dy","maxPoolBackprop"),u=Dr(t,"input","maxPoolBackprop"),l=Dr(n,"output","maxPoolBackprop");A(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),A(4===o.rank,(()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+o.rank+".")),A(4===u.rank,(()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+u.rank+".")),null!=i&&A(O(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Cr.runKernelFunc((e=>{const t=Ca(u.shape,r,s,1,a,i);return e.maxPoolBackprop(o,u,l,t)}),c,null,Rt,h)}}),Rc={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>$c(e,r,s,a,i,o)}}},Dc={kernelName:Mt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Sc(e,i,a,P(s,a.shape));return{x:()=>o.x()}}},Fc={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ei(e,xs(gu(n,r),"float32")),b:()=>Ei(e,xs(Ni(n,r),"float32"))}}},Oc={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>ho(e,a,r.shape)}}},Mc={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{const t=li(n.shape,s);return t.length>0?wa(Ri(e,t),n.shape):e},b:()=>{const t=Ei(e,Hi(yi(ii(n,r)))),a=li(r.shape,s);return a.length>0?wa(Ri(t,a),r.shape):t}}}},Lc={kernelName:Bt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{const t=Ei(e,xs(r,"float32")),a=li(n.shape,s);return a.length>0?wa(Ri(t,a),n.shape):t},b:()=>{const t=Ei(e,xs(n,"float32")),a=li(r.shape,s);return a.length>0?wa(Ri(t,a),r.shape):t}}}},zc={kernelName:Pt,gradFunc:e=>({x:()=>Hi(e)})},Bc={kernelName:jt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Li(n.shape,"float32")}}},Pc={kernelName:Gt,gradFunc:e=>({x:()=>Xi(e)})},Wc={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>ho(e,a,r.shape)}}},Vc={kernelName:Kt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ci(a.shape,i.shape);return{a:()=>{const t=xs(i,"float32");let n=Ei(e,Ei(t,bu(a,$i(t,ua(1)))));const r=li(a.shape,o);return r.length>0&&(n=Ri(n,r)),wa(n,a.shape)},b:()=>{const t=Ni(a,0),n=_o(t,Ai(a),Xi(a));let r=Ei(e,Ei(s,n));const u=li(i.shape,o);return u.length>0&&(r=Ri(r,u)),wa(r,i.shape)}}}},Uc={kernelName:Xt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Ni(n,0);return{x:()=>_o(s,e,Ei(e,r)),alpha:()=>{let t=_o(s,Xi(e),Ei(e,n));const a=li(r.shape,e.shape);return a.length>0&&(t=Ri(t,a)),wa(t,r.shape)}}}},Hc={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,Hi(Vi(n)))}}},Gc={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ei(gu(n,6),zo(n));return{x:()=>Ei(e,xs(r,"float32"))}}},jc={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,xs(zo(n),"float32"))}}},qc={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wa(e,n.shape)}}},Kc={kernelName:tn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s=t=>{const{alignCorners:s}=n;return t.resizeBilinearBackprop(e,r,s)},a={images:r};return{images:()=>Cr.runKernelFunc(s,a,null,"ResizeBilinearGrad",n)}}},Xc={kernelName:en,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s=t=>{const{alignCorners:s}=n;return t.resizeNearestNeighborBackprop(e,r,s)},a={images:r};return{images:()=>Cr.runKernelFunc(s,a,null,"ResizeNearestNeighborGrad",n)}}},Yc={kernelName:rn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=P(r,e.shape);return{x:()=>oo(e,s)}}},Jc={kernelName:sn,gradFunc:e=>({x:()=>Xi(e)})},Zc={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(ii(e,Ei(bu(n,1.5),2)))}}},Qc=Or({logicalNot_:function(e){const t=Dr(e,"x","logicalNot","bool"),n={x:t};return Cr.runKernelFunc((e=>e.logicalNot(t)),n,null,Et)}}),eh={kernelName:un,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>xs(Xi(n),"float32"),t:()=>Ei(e,xs(n,e.dtype)),e:()=>Ei(e,xs(Qc(n),e.dtype))}}},th={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ni(n,ua(0)),r=ua(Ku),s=ua(Xu),a=Ei(e,s),i=Ei(Ei(e,r),pi(xs(n,"float32")));return _o(t,a,i)}}}},nh={kernelName:fn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,Ei(n,$i(ua(1),n)))}}},rh={kernelName:dn,gradFunc:e=>({x:()=>Xi(e)})},sh=Or({cos_:function(e){const t=Dr(e,"x","cos"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.cos(t);return n([t]),r}),n,null,Ue)}}),ah={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(sh(xs(n,"float32")),e)}}},ih=Or({cosh_:function(e){const t=Dr(e,"x","cosh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.cosh(t);return n([t]),r}),n,null,He)}}),oh={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(ih(xs(n,"float32")),e)}}},uh={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=Ys(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Ji(e,l)}}},lh={kernelName:wn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Ei(e,r);return{logits:()=>$i(a,Ei(Ri(a,[s],!0),r))}}},ch={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,co(n))}}},hh=Or({batchToSpaceND_:function(e,t,n){const r=Dr(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));A(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),A(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),A(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Cr.runKernelFunc((e=>e.batchToSpaceND(r,t,n)),a,null,_e,i)}}),ph={kernelName:bn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>hh(e,r,s)}}},dh={kernelName:xn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ka(e,r)}}},fh=[xl,wl,vl,kl,Il,Nl,Sl,Cl,El,Tl,Al,_l,Rl,Fl,Ol,Ll,zl,Bl,Pl,Wl,Vl,Hl,Ul,ql,Xl,Jl,Ql,ec,tc,nc,rc,sc,ac,ic,uc,oc,cc,pc,mc,gc,yc,bc,xc,wc,vc,kc,Nc,Cc,Cc,Tc,_c,Rc,Dc,Fc,Oc,Mc,Lc,zc,Bc,Pc,Wc,Wc,Vc,Uc,Hc,Gc,jc,qc,Kc,Xc,Yc,Jc,Zc,eh,th,nh,rh,ah,oh,uh,lh,ch,ph,ph,dh,dh,{kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,Ei(vo(xs(n,"float32")),2))}}},{kernelName:vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ua(2);return{a:()=>Ei(e,Ei(s,$i(n,r))),b:()=>Ei(e,Ei(s,$i(r,n)))}}},{kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei(e,Ei(xs(n,"float32"),2))}}},{kernelName:Dn,gradFunc:e=>({x:()=>Xi(e)})},{kernelName:In,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ci(n.shape,r.shape);return{a:()=>{let t=e;const r=li(n.shape,s);return r.length>0&&(t=Ri(t,r)),wa(t,n.shape)},b:()=>{let t=e;const n=li(r.shape,s);return n.length>0&&(t=Ri(t,n)),wa(Hi(t),r.shape)}}}},{kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;P(a,r.shape).forEach((e=>{s[e]=1}));const i=wa(e,s),o=Ei(i,zi(r.shape,"float32"));return{x:()=>o}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ii(e,Vi(sh(n)))}}},{kernelName:Cn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ei($i(ua(1),Vi(n)),e)}}},{kernelName:En,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Xi(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ha(t,ho(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ha(t,ho(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=ha(t,ho(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ha(t,ho(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Tn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=ba(s);return{x:()=>va(e,a)}}},{kernelName:_n,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Io(e,s)}}},{kernelName:$n,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ci(t,Xi(t)),r=Ii(e,n);let s=Si(t,ua(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=di(s,e+1);s=Fi(s,zi(r.shape,"bool"));const i=Xi(r);return _o(s,r,i)}(e,n)}}},{kernelName:Rn,gradFunc:e=>({x:()=>Xi(e)})}];for(const e of fh)Gn(e);lr.prototype.abs=function(){return this.throwIfDisposed(),ca(this)};const mh=Or({acos_:function(e){const t=Dr(e,"x","acos"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.acos(t);return n([t]),r}),n,null,me)}});lr.prototype.acos=function(){return this.throwIfDisposed(),mh(this)};const gh=Or({acosh_:function(e){const t=Dr(e,"x","acosh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.acosh(t);return n([t]),r}),n,null,ge)}});lr.prototype.acosh=function(){return this.throwIfDisposed(),gh(this)};const yh=Or({mod_:function(e,t){let n=Dr(e,"a","mod"),r=Dr(t,"b","mod");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.mod(n,r);return t([n,r]),s}),s,null,"Mod")}}),bh=Or({addStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","addStrict"),r=Dr(t,"b","addStrict");return _(n.shape,r.shape,"Error in addStrict: "),ha(n,r)}}),xh=Or({divStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","div"),r=Dr(t,"b","div");return _(n.shape,r.shape,"Error in divideStrict: "),ii(n,r)}}),wh=Or({maximumStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","maximumStrict"),r=Dr(t,"b","maximumStrict");return _(n.shape,r.shape,"Error in maximumStrict: "),Ci(n,r)}}),vh=Or({minimumStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","minimumStrict"),r=Dr(t,"b","minimumStrict");return _(n.shape,r.shape,"Error in minimumStrict: "),Wi(n,r)}}),kh=Or({modStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","modStrict"),r=Dr(t,"b","modStrict");return _(n.shape,r.shape,"Error in modStrict: "),yh(n,r)}}),Ih=Or({mulStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","mul"),r=Dr(t,"b","mul");return _(n.shape,r.shape,"Error in multiplyStrict: "),Ei(n,r)}}),Nh=Or({powStrict_:function(e,t){return ea("strict variants of ops have been deprecated and will be removed in future"),_(e.shape,t.shape,"Error in powStrict: "),bu(e,t)}}),Sh=Or({squaredDifferenceStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","squaredDifferenceStrict"),r=Dr(t,"b","squaredDifferenceStrict");return _(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Cu(n,r)}}),Ch=Or({subStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","subStrict"),r=Dr(t,"b","subStrict");return _(n.shape,r.shape,"Error in subStrict: "),$i(n,r)}});lr.prototype.addStrict=function(e){return this.throwIfDisposed(),bh(this,e)},lr.prototype.add=function(e){return this.throwIfDisposed(),ha(this,e)},lr.prototype.all=function(e,t){return this.throwIfDisposed(),ka(this,e,t)},lr.prototype.any=function(e,t){return this.throwIfDisposed(),Ia(this,e,t)},lr.prototype.argMax=function(e){return this.throwIfDisposed(),Na(this,e)};const Eh=Or({argMin_:function(e,t=0){let n=Dr(e,"x","argMin");const r={x:n},s={axis:t};return Cr.runKernelFunc(((e,r)=>{r([n]),null==t&&(t=0);let s=P(t,n.shape);const a=ya(s,n.rank);return null!=a&&(n=va(n,a),s=xa(s.length,n.rank)),e.argMin(n,s[0])}),r,null,we,s)}});lr.prototype.argMin=function(e){return this.throwIfDisposed(),Eh(this,e)},lr.prototype.asScalar=function(){return this.throwIfDisposed(),A(1===this.size,(()=>"The array must have only 1 element.")),wa(this,[])},lr.prototype.asType=function(e){return this.throwIfDisposed(),xs(this,e)},lr.prototype.as1D=function(){return this.throwIfDisposed(),wa(this,[this.size])},lr.prototype.as2D=function(e,t){return this.throwIfDisposed(),wa(this,[e,t])},lr.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),wa(this,[e,t,n])},lr.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),wa(this,[e,t,n,r])},lr.prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),wa(this,[e,t,n,r,s])};const Th=Or({asin_:function(e){const t=Dr(e,"x","asin"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.asin(t);return n([t]),r}),n,null,ve)}});lr.prototype.asin=function(){return this.throwIfDisposed(),Th(this)};const Ah=Or({asinh_:function(e){const t=Dr(e,"x","asinh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.asinh(t);return n([t]),r}),n,null,ke)}});lr.prototype.asinh=function(){return this.throwIfDisposed(),Ah(this)};const _h=Or({atan_:function(e){const t=Dr(e,"x","atan"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.atan(t);return n([t]),r}),n,null,Ie)}});lr.prototype.atan=function(){return this.throwIfDisposed(),_h(this)};const $h=Or({atan2_:function(e,t){let n=Dr(e,"a","atan2"),r=Dr(t,"b","atan2");[n,r]=xr(n,r);const s={a:n,b:r};return Cr.runKernelFunc(((e,t)=>{const s=e.atan2(n,r);return t([n,r]),s}),s,null,Se)}});lr.prototype.atan2=function(e){return this.throwIfDisposed(),$h(this,e)};const Rh=Or({atanh_:function(e){const t=Dr(e,"x","atanh"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.atanh(t);return n([t]),r}),n,null,Ne)}});lr.prototype.atanh=function(){return this.throwIfDisposed(),Rh(this)},lr.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),za(this,e,t,n,r)},lr.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},lr.prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Wa(this,e,t,n,r,s)},lr.prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ao(this,e)},lr.prototype.cast=function(e){return this.throwIfDisposed(),xs(this,e)};const Dh=Or({ceil_:function(e){const t=Dr(e,"x","ceil"),n={x:t};return Cr.runKernelFunc((e=>e.ceil(t)),n,null,De)}});lr.prototype.ceil=function(){return this.throwIfDisposed(),Dh(this)},lr.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ga(this,e,t)},lr.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof lr&&(e=[e]),Ka([this,...e],t)},lr.prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ei(this,e,t,n,r,s,a)},lr.prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),ni(this,e,t,n,r,s)},lr.prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Qa(this,e,t,n,r,s,a)},lr.prototype.cos=function(){return this.throwIfDisposed(),sh(this)},lr.prototype.cosh=function(){return this.throwIfDisposed(),ih(this)},lr.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Zl(this,e,t,n)};const Fh=Or({depthToSpace_:function(e,t,n="NHWC"){const r=Dr(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];A(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),A(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),A(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return Cr.runKernelFunc((e=>e.depthToSpace(r,t,n)),o,null,qe,u)}});lr.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Fh(this,e,t)},lr.prototype.depthwiseConv2D=function(e,t,n,r,s,a){return ea("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),si(this,e,t,n,r,s,a)},lr.prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),si(this,e,t,n,r,s,a)};const Oh=Or({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Dr(e,"x","dilation2d"),o=Dr(t,"filter","dilation2d");A(3===i.rank||4===i.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+".")),A(3===o.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+".")),A("NHWC"===a,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a));let u=i,l=!1;3===i.rank&&(u=wa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},p=Cr.runKernel(Je,c,h);return l?wa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});lr.prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Oh(this,e,t,n,r,s)};const Mh=Or({divNoNan_:function(e,t){let n=Dr(e,"a","div"),r=Dr(t,"b","div");[n,r]=xr(n,r);const s=ii(n,r),a=Xi(s),i=hi(r,a);return _o(i,a,s)}});lr.prototype.divNoNan=function(e){return this.throwIfDisposed(),Mh(this,e)},lr.prototype.divStrict=function(e){return this.throwIfDisposed(),xh(this,e)},lr.prototype.div=function(e){return this.throwIfDisposed(),ii(this,e)};const Lh=Or({dot_:function(e,t){const n=Dr(e,"t1","dot"),r=Dr(t,"t2","dot");A(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(A(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=wa(n,[1,-1]),t=wa(r,[-1,1]),s=qo(e,t);return wa(s,[])}if(1===n.rank&&2===r.rank){const e=wa(n,[1,-1]),t=wa(r,[r.shape[0],r.shape[1]]),s=qo(e,t);return wa(s,[s.size])}if(2===n.rank&&1===r.rank){const e=wa(r,[-1,1]),t=qo(n,e);return wa(t,[t.size])}{const e=wa(r,[r.shape[0],r.shape[1]]);return qo(n,e)}}});lr.prototype.dot=function(e){return this.throwIfDisposed(),Lh(this,e)},lr.prototype.elu=function(){return this.throwIfDisposed(),oi(this)};const zh=Or({equalStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","equalStrict"),r=Dr(t,"b","equalStrict");return _(n.shape,r.shape,"Error in equalStrict: "),hi(n,r)}}),Bh=Or({greaterEqualStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","greaterEqualStrict"),r=Dr(t,"b","greaterEqualStrict");return _(n.shape,r.shape,"Error in greaterEqualStrict: "),Si(n,r)}}),Ph=Or({greaterStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","greaterStrict"),r=Dr(t,"b","greaterStrict");return _(n.shape,r.shape,"Error in greaterStrict: "),Ni(n,r)}}),Wh=Or({lessEqualStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","lessEqualStrict"),r=Dr(t,"b","lessEqualStrict");return _(n.shape,r.shape,"Error in lessEqualStrict: "),gu(n,r)}}),Vh=Or({lessStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","lessStrict"),r=Dr(t,"b","lessStrict");return _(n.shape,r.shape,"Error in lessStrict: "),Ec(n,r)}}),Uh=Or({notEqualStrict_:function(e,t){ea("strict variants of ops have been deprecated and will be removed in future");const n=Dr(e,"a","notEqualStrict"),r=Dr(t,"b","notEqualStrict");return _(n.shape,r.shape,"Error in notEqualStrict: "),Gi(n,r)}});lr.prototype.equalStrict=function(e){return this.throwIfDisposed(),zh(this,e)},lr.prototype.equal=function(e){return this.throwIfDisposed(),hi(this,e)};const Hh=Or({erf_:function(e){let t=Dr(e,"x","erf");A("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=xs(t,"float32"));const n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.erf(t);return n([t]),r}),n,null,nt)}});lr.prototype.erf=function(){return this.throwIfDisposed(),Hh(this)},lr.prototype.exp=function(){return this.throwIfDisposed(),pi(this)},lr.prototype.expandDims=function(e){return this.throwIfDisposed(),di(this,e)};const Gh=Or({expm1_:function(e){const t=Dr(e,"x","expm1"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.expm1(t);return n([t]),r}),n,null,at)}});lr.prototype.expm1=function(){return this.throwIfDisposed(),Gh(this)},lr.prototype.fft=function(){return this.throwIfDisposed(),Ro(this)},lr.prototype.flatten=function(){return this.throwIfDisposed(),wa(this,[this.size])},lr.prototype.floor=function(){return this.throwIfDisposed(),yi(this)},lr.prototype.floorDiv=function(e){return this.throwIfDisposed(),ai(this,e)},lr.prototype.gather=function(e,t){return this.throwIfDisposed(),Ii(this,e,t)},lr.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Bh(this,e)},lr.prototype.greaterEqual=function(e){return this.throwIfDisposed(),Si(this,e)},lr.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Ph(this,e)},lr.prototype.greater=function(e){return this.throwIfDisposed(),Ni(this,e)},lr.prototype.ifft=function(){return this.throwIfDisposed(),Fo(this)},lr.prototype.irfft=function(){return this.throwIfDisposed(),Oo(this)};const jh=Or({isFinite_:function(e){const t=Dr(e,"x","isFinite"),n={x:t};return Cr.runKernelFunc((e=>e.isFinite(t)),n,null,xt)}});lr.prototype.isFinite=function(){return this.throwIfDisposed(),jh(this)};const qh=Or({isInf_:function(e){const t=Dr(e,"x","isInf"),n={x:t};return Cr.runKernelFunc((e=>e.isInf(t)),n,null,wt)}});lr.prototype.isInf=function(){return this.throwIfDisposed(),qh(this)};const Kh=Or({isNaN_:function(e){const t=Dr(e,"x","isNaN"),n={x:t};return Cr.runKernelFunc((e=>e.isNaN(t)),n,null,vt)}});lr.prototype.isNaN=function(){return this.throwIfDisposed(),Kh(this)},lr.prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ti(this,e)},lr.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Wh(this,e)},lr.prototype.lessEqual=function(e){return this.throwIfDisposed(),gu(this,e)},lr.prototype.lessStrict=function(e){return this.throwIfDisposed(),Vh(this,e)},lr.prototype.less=function(e){return this.throwIfDisposed(),Ec(this,e)};const Xh=Or({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Dr(e,"x","localResponseNormalization");A(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),A(O(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=wa(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Cr.runKernelFunc(((e,a)=>{const o=e.localResponseNormalization4D(i,t,n,r,s);return a([i,o]),o}),u,null,"LRN",l);return o?wa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});lr.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Xh(this,e,t,n,r)};const Yh=Or({logSigmoid_:function(e){const t=Dr(e,"x","logSigmoid");return oa((e=>({value:Hi(bo(Hi(e))),gradFunc:t=>Ei(t,co(Hi(e)))})))(t)}});lr.prototype.logSigmoid=function(){return this.throwIfDisposed(),Yh(this)},lr.prototype.logSoftmax=function(e){return this.throwIfDisposed(),Di(this,e)},lr.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},lr.prototype.log=function(){return this.throwIfDisposed(),Ai(this)},lr.prototype.log1p=function(){return this.throwIfDisposed(),Eu(this)},lr.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fi(this,e)},lr.prototype.logicalNot=function(){return this.throwIfDisposed(),Qc(this)};const Jh=Or({logicalOr_:function(e,t){const n=Dr(e,"a","logicalOr","bool"),r=Dr(t,"b","logicalOr","bool");ci(n.shape,r.shape);const s={a:n,b:r};return Cr.runKernelFunc((e=>e.logicalOr(n,r)),s,null,"LogicalOr")}});lr.prototype.logicalOr=function(e){return this.throwIfDisposed(),Jh(this,e)};const Zh=Or({logicalXor_:function(e,t){const n=Dr(e,"a","logicalXor","bool"),r=Dr(t,"b","logicalXor","bool");return ci(n.shape,r.shape),Fi(Jh(e,t),Qc(Fi(e,t)))}});lr.prototype.logicalXor=function(e){return this.throwIfDisposed(),Zh(this,e)},lr.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),qo(this,e,t,n)},lr.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Oi(this,e,t,n,r)},lr.prototype.max=function(e,t){return this.throwIfDisposed(),_i(this,e,t)},lr.prototype.maximumStrict=function(e){return this.throwIfDisposed(),wh(this,e)},lr.prototype.maximum=function(e){return this.throwIfDisposed(),Ci(this,e)},lr.prototype.mean=function(e,t){return this.throwIfDisposed(),Bi(this,e,t)},lr.prototype.min=function(e,t){return this.throwIfDisposed(),Pi(this,e,t)},lr.prototype.minimumStrict=function(e){return this.throwIfDisposed(),vh(this,e)},lr.prototype.minimum=function(e){return this.throwIfDisposed(),Wi(this,e)};const Qh=Or({mirrorPad_:function(e,t,n){A("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Dr(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)A(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),A(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape `+r.shape));const a={paddings:t,mode:n},i={x:r};return Cr.runKernel(zt,i,a)}});lr.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)},lr.prototype.modStrict=function(e){return this.throwIfDisposed(),kh(this,e)},lr.prototype.mod=function(e){return this.throwIfDisposed(),yh(this,e)},lr.prototype.mulStrict=function(e){return this.throwIfDisposed(),Ih(this,e)},lr.prototype.mul=function(e){return this.throwIfDisposed(),Ei(this,e)},lr.prototype.neg=function(){return this.throwIfDisposed(),Hi(this)},lr.prototype.norm=function(e,t,n){return this.throwIfDisposed(),wu(this,e,t,n)},lr.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Uh(this,e)},lr.prototype.notEqual=function(e){return this.throwIfDisposed(),Gi(this,e)},lr.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ji(this,e,t,n)},lr.prototype.onesLike=function(){return this.throwIfDisposed(),Yi(this)},lr.prototype.pad=function(e,t){return this.throwIfDisposed(),Ji(this,e,t)};const ep=Or({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Dr(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=wa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(Ma(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const l=Ca(o.shape,t,a,s,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),m=p?r:"valid",g=p?o:Ml(o,c,d),y=("avg"===n?()=>za(g,t,a,m):()=>Oi(g,t,a,m))(),b=p?y:hh(y,c,f);return u?wa(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});lr.prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),ep(this,e,t,n,r,s)},lr.prototype.powStrict=function(e){return this.throwIfDisposed(),Nh(this,e)},lr.prototype.pow=function(e){return this.throwIfDisposed(),bu(this,e)},lr.prototype.prelu=function(e){return this.throwIfDisposed(),Zi(this,e)};const tp=Or({prod_:function(e,t=null,n=!1){let r=Dr(e,"x","prod");"bool"===r.dtype&&(r=xs(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Cr.runKernelFunc((e=>{const s=P(t,r.shape),a=ya(s,r.rank);let i=s,o=r;null!=a&&(o=va(r,a),i=xa(i.length,r.rank));let u=e.prod(o,i);if(n){const e=ma(u.shape,s);u=wa(u,e)}return u}),s,null,"Prod",a)}});lr.prototype.prod=function(e,t){return this.throwIfDisposed(),tp(this,e,t)};const np=Or({reciprocal_:function(e){const t=Dr(e,"x","reciprocal"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.reciprocal(t);return n([t]),r}),n,null,Jt)}});lr.prototype.reciprocal=function(){return this.throwIfDisposed(),np(this)},lr.prototype.relu=function(){return this.throwIfDisposed(),io(this)},lr.prototype.relu6=function(){return this.throwIfDisposed(),Lo(this)},lr.prototype.reshapeAs=function(e){return this.throwIfDisposed(),wa(this,e.shape)},lr.prototype.reshape=function(e){return this.throwIfDisposed(),wa(this,e)},lr.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},lr.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),mu(this,e,t)},lr.prototype.reverse=function(e){return this.throwIfDisposed(),oo(this,e)},lr.prototype.rfft=function(){return this.throwIfDisposed(),Do(this)};const rp=Or({round_:function(e){const t=Dr(e,"x","round"),n={x:t};return Cr.runKernelFunc((e=>e.round(t)),n,null,sn)}});lr.prototype.round=function(){return this.throwIfDisposed(),rp(this)},lr.prototype.rsqrt=function(){return this.throwIfDisposed(),lc(this)},lr.prototype.selu=function(){return this.throwIfDisposed(),uo(this)},lr.prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),lo(this,e,t,n,r,s,a)},lr.prototype.sigmoid=function(){return this.throwIfDisposed(),co(this)};const sp=Or({sign_:function(e){const t=Dr(e,"x","sign"),n={x:t};return Cr.runKernelFunc((e=>e.sign(t)),n,null,dn)}});lr.prototype.sign=function(){return this.throwIfDisposed(),sp(this)},lr.prototype.sin=function(){return this.throwIfDisposed(),Kl(this)},lr.prototype.sinh=function(){return this.throwIfDisposed(),Yl(this)},lr.prototype.slice=function(e,t){return this.throwIfDisposed(),ho(this,e,t)},lr.prototype.softmax=function(e){return this.throwIfDisposed(),yo(this,e)},lr.prototype.softplus=function(){return this.throwIfDisposed(),bo(this)},lr.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},lr.prototype.split=function(e,t){return this.throwIfDisposed(),wo(this,e,t)},lr.prototype.sqrt=function(){return this.throwIfDisposed(),vo(this)},lr.prototype.square=function(){return this.throwIfDisposed(),Vi(this)},lr.prototype.squaredDifference=function(e){return this.throwIfDisposed(),Cu(this,e)},lr.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Sh(this,e)},lr.prototype.squeeze=function(e){return this.throwIfDisposed(),ko(this,e)},lr.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof lr?[this,e]:[this,...e];return Io(n,t)},lr.prototype.step=function(e){return this.throwIfDisposed(),zo(this,e)};const ap=Or({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){let l=Dr(e,"x","stridedSlice");const c={x:l},h={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Cr.runKernelFunc((e=>{null==r&&(r=new Array(t.length));const c=Ls(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-t.length,p=Ls(o),d=l.shape.slice();p.forEach((e=>{t[e]=0,n[e]=1,d.splice(e,0,1)})),l=wa(l,d);const{begin:f,end:m,strides:g}=Vs(l.shape,c,h,t,n,r,s,a,i);t=f,n=m,r=g;const y=Ls(u);y.forEach((e=>{n[e]=t[e]+1,r[e]=1}));const b=zs(t,n,r),x=b.filter(((e,t)=>-1===y.indexOf(t)));if(r.every((e=>1===e)))return wa(ho(l,t,b),x);const w=e.stridedSlice(l,t,n,r);return wa(w,x)}),c,null,Nn,h)}});lr.prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),ap(this,e,t,n,r,s,a,i,o)},lr.prototype.subStrict=function(e){return this.throwIfDisposed(),Ch(this,e)},lr.prototype.sub=function(e){return this.throwIfDisposed(),$i(this,e)},lr.prototype.sum=function(e,t){return this.throwIfDisposed(),Ri(this,e,t)};const ip=Or({tan_:function(e){const t=Dr(e,"x","tan"),n={x:t};return Cr.runKernelFunc(((e,n)=>{const r=e.tan(t);return n([t]),r}),n,null,Sn)}});lr.prototype.tan=function(){return this.throwIfDisposed(),ip(this)},lr.prototype.tanh=function(){return this.throwIfDisposed(),No(this)},lr.prototype.tile=function(e){return this.throwIfDisposed(),fi(this,e)},lr.prototype.toBool=function(){return this.throwIfDisposed(),xs(this,"bool")},lr.prototype.toFloat=function(){return this.throwIfDisposed(),xs(this,"float32")},lr.prototype.toInt=function(){return this.throwIfDisposed(),xs(this,"int32")};const op=Or({topk_:function(e,t=1,n=!0){const r=Dr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const a={x:r},i={k:t,sorted:n},[o,u]=Cr.runKernelFunc((e=>e.topk(r,t,n)),a,null,"TopK",i);return{values:o,indices:u}}});lr.prototype.topk=function(e,t){return this.throwIfDisposed(),op(this,e,t)},lr.prototype.transpose=function(e){return this.throwIfDisposed(),va(this,e)};const up=Or({unique_:function(e,t=0){const n=Dr(e,"x","unique",null);A(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Cr.runKernel(An,r,s);return{values:a,indices:i}}});var lp,cp;let hp;lr.prototype.unique=function(e){return this.throwIfDisposed(),up(this,e)},lr.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),hc(this,e,t)},lr.prototype.unstack=function(e){return this.throwIfDisposed(),To(this,e)},lr.prototype.where=function(e,t){return this.throwIfDisposed(),_o(e,this,t)},lr.prototype.zerosLike=function(){return this.throwIfDisposed(),Xi(this)},function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(lp||(lp={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu"}(cp||(cp={}));const pp={kernelName:Mn,backendName:"wasm",setupFunc:function(e){hp=e.wasm.cwrap(Mn,null,["number","array","number","number","array","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t;if("float32"!==s.dtype||"float32"!==a.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c}=r,h=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(a.dataId).id;let d=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);d=e.id}const f=null==o?0:n.dataIdMap.get(o.dataId).id,m=cp[c];if(null==m)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");const g=u?s.shape[2]:s.shape[1],y=l?a.shape[1]:a.shape[2],b=s.shape[0],x=n.makeOutput([b,g,y],s.dtype),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(s.shape).buffer),k=new Uint8Array(new Int32Array(a.shape).buffer);return hp(h,v,s.shape.length,p,k,a.shape.length,u,l,m,d,f,w),x}};function dp(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,s=n.dataIdMap.get(r.dataId).id,a=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(a.dataId).id;return 0===D(a.shape)||t(s,i),a}}}const fp=dp(fe);function mp(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(s){const{backend:a,inputs:i}=s,{a:o,b:u}=i,l=a.dataIdMap.get(o.dataId).id,c=a.dataIdMap.get(u.dataId).id,h=null!=n?n:o.dtype,p=ci(o.shape,u.shape),d=a.makeOutput(p,h);if(0===D(p))return d;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=a.dataIdMap.get(d.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,lp[o.dtype],g);if(t&&"float32"===o.dtype)return y(),d;const b=ui(o.shape,p),x=ui(u.shape,p),w=b.every(((e,t)=>e===t)),v=x.every(((e,t)=>e===t));if(w&&v)return y(),d;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}const gp=mp(ye,!0);let yp;const bp={kernelName:be,backendName:"wasm",setupFunc:function(e){yp=e.wasm.cwrap(be,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===D(r.shape))return r;const s=t.map((e=>n.dataIdMap.get(e.dataId).id)),a=new Uint8Array(new Int32Array(s).buffer),i=n.dataIdMap.get(r.dataId).id;return yp(a,s.length,lp[r.dtype],i),r}};function xp(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}const wp={kernelName:gt,backendName:"wasm",kernelFunc:xp};let vp;function kp(e){const{inputs:t,backend:n,attrs:r}=e,[s,a]=function(e,t){const n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<a.length;e++)a[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(i){const e=xp({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return vp(c,d,u.shape.length,lp[u.dtype],h,p,a.length),l}const Ip={kernelName:Tn,backendName:"wasm",kernelFunc:kp,setupFunc:function(e){vp=e.wasm.cwrap(Tn,null,["number","array","number","number","number","array","number"])}};function Np(e,t,n){const r=e.shape,s=e.shape.length,a=P(t,r);let i=a;const o=ya(i,s);let u=null,l=!1;if(null!=o){const t=new Array(s);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=xa(i.length,s),u=kp({inputs:{x:e},attrs:{perm:o},backend:n});const a=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==a&&(l=!0)}return{transposed:u,originalAxes:a,axes:i,inputWasTransposed:l}}let Sp;const Cp={kernelName:xe,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:s}=r,{x:a}=n,i=t.dataIdMap.get(a.dataId).id;let o=i,u=a;const{transposed:l,axes:c,inputWasTransposed:h}=Np(a,s,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const p=u.shape.slice(0,-1),d=t.makeOutput(p,"int32"),f=t.dataIdMap.get(d.dataId).id,m=D(d.shape),g=u.shape[c[0]];return Sp(o,lp[u.dtype],m,g,f),h&&t.disposeData(l.dataId),d},setupFunc:function(e){Sp=e.wasm.cwrap(xe,null,["number","number","number","number","number"])}};let Ep;const Tp={kernelName:Ce,backendName:"wasm",setupFunc:function(e){Ep=e.wasm.cwrap(Ce,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ca(s.shape,i,o,1,u,l),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return Ep(a,s.shape[0],s.shape[1],s.shape[2],h,p,d,f,m,g,y,b,x,v),w}};function Ap(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=D(r.shape),i=B(s,a);return A(a===D(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),{dataId:r.dataId,shape:i,dtype:r.dtype}}const _p={kernelName:Qt,backendName:"wasm",kernelFunc:Ap};let $p;const Rp={kernelName:Ae,backendName:"wasm",setupFunc:function(e){$p=e.wasm.cwrap(Ae,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;if("float32"!==s.dtype||"float32"!==a.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=D(f),y=D(m);A(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);A(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=Ap({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=Ap({inputs:{x:a},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,N=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],C=Math.max(g,y),E=n.makeOutput([C,N,S],w.dtype),T=n.dataIdMap.get(E.dataId).id,_=new Uint8Array(new Int32Array(w.shape).buffer),$=new Uint8Array(new Int32Array(v.shape).buffer);return $p(k,_,w.shape.length,I,$,v.shape.length,i,o,T),E.shape=b,E}};function Dp(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,s=r.makeOutput(t.shape,n),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(s).set(a),s}const Fp={kernelName:Re,backendName:"wasm",kernelFunc:Dp};let Op;const Mp={kernelName:Fe,backendName:"wasm",setupFunc:function(e){Op=e.wasm.cwrap(Fe,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r,o=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(u.dataId).id;return Op(o,a,i,l),u}},Lp={kernelName:Me,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=P(e.attrs.axis,t[0].shape)[0],s=qa(t.map((e=>e.shape)),r),a=n.makeOutput(s,t[0].dtype);if(0===D(s))return a;const i=t.filter((e=>D(e.shape)>0));if(1===i.length)return i[0];ja(i.map((e=>e.shape)),r);const o=D(i[0].shape.slice(0,r));let u=0;const l=i.map((e=>{const t=D(e.shape.slice(r));return u+=t,t})),c=i.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(a);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const r=l[n],s=e*r,a=c[n].subarray(s,s+r);h.set(a,t),t+=r}}return a}};let zp;const Bp={kernelName:Le,backendName:"wasm",setupFunc:function(e){zp=e.wasm.cwrap(Le,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,i=r.dataIdMap.get(s.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:p}=n,d=La(p),f=Ta(s.shape,a.shape,u,l,c,h,!1,d),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,C=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+f.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(f.outShape,"float32"),A=r.dataIdMap.get(T.dataId).id;return zp(i,s.shape[0],s.shape[1],s.shape[2],o,m,g,y,b,x,w,E,v,k,I,N,S,C,A),T}};let Pp;const Wp={kernelName:Be,backendName:"wasm",setupFunc:function(e){Pp=e.wasm.cwrap(Be,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:s,filter:a}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=La(u),p=Ta(c,a.shape,i,1,o,l,!1,h),{batchSize:d,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=p,N=f-1-p.padInfo.top,S=m-1-p.padInfo.left,C="channelsLast"===p.dataFormat,E=Z(p.inShape),T=Z(s.shape),[A,_,$]=Z(a.shape),R=E[0],D=C?E[1]:E[2],F=C?E[2]:1,O=C?1:E[1],M=T[0],L=C?T[1]:T[2],z=C?T[2]:1,B=C?1:T[1],P=t.makeOutput(p.inShape,"float32"),W=t.dataIdMap.get(P.dataId).id,V=t.dataIdMap.get(s.dataId).id,U=t.dataIdMap.get(a.dataId).id;return Pp(V,U,d,f,m,y,b,g,w,v,x,k,I,N,S,A,_,$,R,D,F,O,M,L,z,B,W),P}},Vp=dp(Ue);var Up;let Hp,Gp,jp,qp,Kp,Xp,Yp,Jp,Zp,Qp,ed,td,nd,rd,sd,ad,id,od,ud,ld,cd,hd,pd,dd,fd,md,gd,yd,bd;function xd(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],s=n[1],a=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:s,pSelectedScores:a,pValidOutputs:i}}function wd(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[a,i]=Ys(t,n,r),o=Ks(t.shape,a,i),u=s.typedArrayFromHeap(t),l=s.makeOutput(i,t.dtype),c=s.typedArrayFromHeap(l),h=Z(t.shape);if(o){const e=Xs(a,h);return c.set(u.subarray(e,e+D(i))),l}const p=t.shape.length;return 2===p?function(e,t,n,r,s){let a=0;const i=r[0],o=r[1],u=i+s[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+s[1]),a),a+=s[1]}}(u,h[0],c,a,i):3===p?function(e,t,n,r,s,a){let i=0;const o=s[0],u=s[1],l=s[2],c=o+a[0],h=u+a[1];for(let s=o;s<c;s++)for(let o=u;o<h;o++){const u=s*t+o*n+l;r.set(e.subarray(u,u+a[2]),i),i+=a[2]}}(u,h[0],h[1],c,a,i):4===p?function(e,t,n,r,s,a,i){let o=0;const u=a[0],l=a[1],c=a[2],h=u+i[0],p=l+i[1],d=c+i[2],f=a[3];for(let a=u;a<h;a++)for(let u=l;u<p;u++)for(let l=c;l<d;l++){const c=a*t+u*n+l*r+f;s.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,h[0],h[1],h[2],c,a,i):function(e,t,n,r,s){const a=bs(s,t.dtype,n),i=bs(t.shape,t.dtype,e);for(let e=0;e<a.size;++e){const t=a.indexToLoc(e).map(((e,t)=>e+r[t]));n[e]=i.get(...t)}}(u,t,c,a,i),l}!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Up||(Up={}));const vd=[fp,gp,bp,Cp,Tp,Rp,Fp,Mp,Lp,Bp,Wp,Vp,{kernelName:je,backendName:"wasm",setupFunc:function(e){Hp=e.wasm.cwrap(je,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:s,extrapolationValue:a,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,p]=i,d=[c,h,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=Dp({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(d,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return Hp(g,y,b,c,v,h,p,Up[s],a,w),null!=f&&t.disposeData(f.dataId),x}},{kernelName:Ge,backendName:"wasm",setupFunc:function(e){Gp=e.wasm.cwrap(Ge,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,u=s.shape.length;A("float32"===s.dtype||"int32"===s.dtype,(()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`));const l=ya([a],u);let c=s;null!==l&&(c=kp({inputs:{x:s},attrs:{perm:l},backend:n}));const h=xa(1,u)[0];ga("cumsum",[h],u);const p=n.makeOutput(c.shape,c.dtype),d=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;Gp(f,i?1:0,o?1:0,d,m,lp[s.dtype]);let g=p;return null!==l&&(g=kp({inputs:{x:p},attrs:{perm:ba(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)),g}},{kernelName:qe,backendName:"wasm",setupFunc:function(e){jp=e.wasm.cwrap(qe,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{blockSize:a,dataFormat:i}=r;A(a>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+a));const o=s.shape[0],u="NHWC"===i?s.shape[1]:s.shape[2],l="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=u*a,p=l*a,d=c/(a*a),f="NHWC"===i?[o,h,p,d]:[o,d,h,p],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(Z(s.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Z(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return jp(g,a,"NHWC"===i?1:0,y,s.shape.length-1,b,x,f.length,w),m}},{kernelName:Ke,backendName:"wasm",setupFunc:function(e){qp=e.wasm.cwrap(Ke,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,i=r.dataIdMap.get(s.dataId).id,o=r.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,p=null==l?[1,1]:l,d=Ta(s.shape,a.shape,u,p,c,h,!0),f=d.filterHeight,m=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,b=d.padInfo.bottom,x=d.padInfo.left,w=d.dilationHeight,v=d.dilationWidth,k=d.strideHeight,I=d.strideWidth,N=d.inChannels,S=d.outChannels,C="SAME"===d.padInfo.type?1:0;if("channelsLast"!==d.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+d.dataFormat+"'. Please use 'channelsLast'.");const E=r.makeOutput(d.outShape,"float32"),T=r.dataIdMap.get(E.dataId).id;return qp(i,s.shape[0],s.shape[1],s.shape[2],o,f,m,g,y,b,x,C,w,v,k,I,N,S,T),E}},mp(et,!0),mp(rt,!1,"bool"),dp(st),{kernelName:ot,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:s}=e,a=s.makeOutput(t,r);return s.typedArrayFromHeap(a).fill(n),a}},{kernelName:ut,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,s=n.makeOutput(r.shape,r.dtype),a=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,[o,u,l,c]=r.shape;return Kp(a,o,u,l,c,i),s},setupFunc:function(e){Kp=e.wasm.cwrap(ut,null,["number","number","number","number","number","number"])}},mp(ct,!1),pp,{kernelName:ht,backendName:"wasm",setupFunc:function(e){Xp=e.wasm.cwrap(ht,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:s}=r,{x:a,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(0===D(a.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return Xp(c,h,p,d,f,s,g),m}},{kernelName:Ln,backendName:"wasm",setupFunc:function(e){Yp=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d}=n,f=Ta(s.shape,a.shape,u,c,l,p),m=cp[d];if(null==m)throw new Error(d+" activation not yet supported for FusedConv2D in the wasm backend.");const g=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,b=f.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const w=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,N=f.padInfo.bottom,S=f.padInfo.left,C=f.dilationHeight,E=f.dilationWidth,T=f.strideHeight,A=f.strideWidth,_=f.inChannels,$="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==h)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+h+"'. Please use 'NHWC'.");const O=r.makeOutput(f.outShape,"float32"),M=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return Yp(g,R,D,F,y,w,v,x,k,I,N,S,$,C,E,T,A,_,b,m,L,M),O}},{kernelName:zn,backendName:"wasm",setupFunc:function(e){Jp=e.wasm.cwrap(zn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d}=n,f=Ta(s.shape,a.shape,u,c,l,p,!0),m=cp[d];if(null==m)throw new Error(d+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const g=r.dataIdMap.get(s.dataId).id,y=r.dataIdMap.get(a.dataId).id,b=f.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const w=f.filterHeight,v=f.filterWidth,k=f.padInfo.top,I=f.padInfo.right,N=f.padInfo.bottom,S=f.padInfo.left,C=f.dilationHeight,E=f.dilationWidth,T=f.strideHeight,A=f.strideWidth,_=f.inChannels,$="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,F=f.inWidth;if("NHWC"!==h)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+h+"'. Please use 'NHWC'.");const O=r.makeOutput(f.outShape,"float32"),M=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return Jp(g,R,D,F,y,w,v,x,k,I,N,S,$,C,E,T,A,_,b,m,L,M),O}},{kernelName:dt,backendName:"wasm",setupFunc:function(e){Zp=e.wasm.cwrap(dt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:s}=n,[a,i,o,u]=Rs(r,s),l=t.makeOutput(a,r.dtype);if(0===i)return l;const c=s.shape,h=c[c.length-1],p=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return Zp(p,lp[r.dtype],d,i,h,o,f,m),l}},{kernelName:pt,backendName:"wasm",setupFunc:function(e){Qp=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s,indices:a}=n,{axis:i}=r,o=s.shape.slice();o[i]=D(a.shape);const u=s.shape.length-1,l=t.makeOutput(o,s.dtype);if(0===D(s.shape))return l;const c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(Z(s.shape)).buffer),f=new Uint8Array(new Int32Array(Z(o)).buffer);Qp(c,lp[s.dtype],d,u,h,i,f,p);const m=ki(s,a,P(i,s.shape)[0]);return l.shape=m.outputShape,l}},mp(ft,!1,"bool"),mp(mt,!1,"bool"),wp,mp(kt,!1,"bool"),mp(It,!1,"bool"),dp(Nt),mp(Ct,!1,"bool"),{kernelName:At,backendName:"wasm",setupFunc:function(e){ed=e.wasm.cwrap(At,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:s,keepDims:a}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:p}=Np(i,s,t);p&&(u=l,o=t.dataIdMap.get(l.dataId).id),ga("max",c,u.shape.length);const[d,f]=fa(u.shape,c),m=D(f),g=t.makeOutput(d,i.dtype);if(0!==D(u.shape)){const e=t.dataIdMap.get(g.dataId).id;ed(o,m,e)}if(p&&t.disposeData(l.dataId),a){const e=ma(g.shape,h);g.shape=e}return g}},mp(_t,!1),{kernelName:$t,backendName:"wasm",setupFunc:function(e){td=e.wasm.cwrap($t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Ca(s.shape,i,o,1,u,l),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");const I=r.makeOutput(c.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return td(a,s.shape[0],s.shape[1],s.shape[2],h,p,d,f,m,g,y,b,x,w,v,k,N),I}},{kernelName:Mt,backendName:"wasm",setupFunc:function(e){nd=e.wasm.cwrap(Mt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=Np(i,s,t);if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}ga("min",h,l.shape.length);const[f,m]=fa(l.shape,h),g=D(m),y=t.makeOutput(f,l.dtype);if(0!==D(l.shape)){const e=t.dataIdMap.get(y.dataId).id;nd(u,g,e)}if(d&&t.disposeData(c.dataId),a){const e=ma(y.shape,p);y.shape=e}return y}},mp(Lt,!1),mp(Bt,!0),dp(Pt),{kernelName:Vt,backendName:"wasm",setupFunc:function(e){rd=e.wasm.cwrap(Vt,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=rd(l,c,a,s,i),{pSelectedIndices:p,selectedSize:d,pSelectedScores:f,pValidOutputs:m}=xd(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([d],"int32",p)}},{kernelName:Ut,backendName:"wasm",setupFunc:function(e){sd=e.wasm.cwrap(Ut,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=sd(c,h,a,s,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=xd(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",d),t.makeOutput([],"int32",g)]}},{kernelName:Ht,backendName:"wasm",setupFunc:function(e){ad=e.wasm.cwrap(Ht,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=ad(c,h,a,s,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=xd(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",d),t.makeOutput([f],"float32",m)]}},mp(Wt,!1,"bool"),{kernelName:jt,backendName:"wasm",setupFunc:function(e){id=e.wasm.cwrap(jt,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,u=n.makeOutput([...s.shape,a],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(s.dataId).id;return id(c,a,i,o,l),u}},{kernelName:Gt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:qt,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:s}}=e,a=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(h).buffer);return od(i,l,t.shape.length,lp[t.dtype],p,d,s,u),o},setupFunc:function(e){od=e.wasm.cwrap(qt,null,["number","array","number","number","array","array","number","number"])}},mp(Kt,!1),{kernelName:Xt,backendName:"wasm",setupFunc:function(e){ud=e.wasm.cwrap(Xt,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return ud(a,i,u),o}},dp(Zt),dp(nn),_p,{kernelName:tn,backendName:"wasm",setupFunc:function(e){ld=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:s}=n,{alignCorners:a,size:i}=r,[o,u]=i,[l,c,h,p]=s.shape,d=[l,o,u,p];let f,m=t.dataIdMap.get(s.dataId);"float32"!==m.dtype&&(f=Dp({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.makeOutput(d,"float32");if(0===D(s.shape))return y;const b=t.dataIdMap.get(y.dataId).id;return ld(g,l,c,h,p,o,u,a?1:0,b),null!=f&&t.disposeData(f.dataId),y}},{kernelName:rn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=P(a,s.shape);if(0===s.shape.length)return xp({inputs:{x:s},backend:n});const o=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(s.shape).buffer);return cd(u,c,i.length,h,s.shape.length,l),Ap({inputs:{x:o},attrs:{shape:s.shape},backend:n})},setupFunc:function(e){cd=e.wasm.cwrap(rn,null,["number","array","number","array","number","number"])}},{kernelName:On,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{radians:a,fillValue:i,center:o}=r,u=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,p,d,f]=s.shape,[m,g]=Vu(o,p,d),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return hd(l,h,p,d,f,a,m,g,b,y.length,c),u},setupFunc:function(e){hd=e.wasm.cwrap(On,null,["number","number","number","number","number","number","number","number","array","number","number"])}},dp(an),{kernelName:on,backendName:"wasm",setupFunc:function(e){pd=e.wasm.cwrap(on,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:s,updates:a}=n,{shape:i}=r,o=t.makeOutput(i,a.dtype);if(0===D(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Os(0,s,i),d=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return pd(d,f,lp[a.dtype],u,l,c,m,p,g),o}},{kernelName:un,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,p=s.shape.length,d=0===h||h>1||1===p?1:D(s.shape.slice(1));return dd(i,o,u,d,c),l},setupFunc:function(e){dd=e.wasm.cwrap(un,null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){fd=e.wasm.cwrap(fn,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(s.dataId).id;return 0===D(s.shape)||fd(r,a),s}},dp(hn),{kernelName:cn,backendName:"wasm",kernelFunc:wd},{kernelName:wn,backendName:"wasm",setupFunc:function(e){md=e.wasm.cwrap(wn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,s=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id,o=n.shape[r],u=D(n.shape)/o;return 0===D(a.shape)||md(s,i,o,u),a}},{kernelName:xn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=n,o=P(i,s.shape)[0],u=xo(s,a,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=wd({inputs:{x:s},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},dp(gn),dp(kn),mp(vn,!0),{kernelName:Nn,backendName:"wasm",setupFunc:function(e){gd=e.wasm.cwrap(Nn,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s}=n;let{begin:a,end:i,strides:o}=r;null==o&&(o=new Array(a.length));const{beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,d=Ls(c);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==p)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=s.shape.length-a.length,m=Ls(h),g=s.shape.slice();m.forEach((e=>{a[e]=0,i[e]=1,g.splice(e,0,1)}));const y=Ap({inputs:{x:s},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:w}=Vs(y.shape,d,f,a,i,o,u,l,c);a=b,i=x,o=w;const v=Ls(p);v.forEach((e=>{i[e]=a[e]+1,o[e]=1}));const k=zs(a,i,o),I=k.filter(((e,t)=>-1===v.indexOf(t)));if(o.every((e=>1===e)))return Ap({inputs:{x:wd({inputs:{x:s},attrs:{begin:a,size:k},backend:t})},attrs:{shape:I},backend:t});const N=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){const e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(Z(y.shape)).buffer),r=new Uint8Array(new Int32Array(a).buffer),s=new Uint8Array(new Int32Array(i).buffer),u=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(I).buffer),c=new Uint8Array(new Int32Array(Z(I)).buffer),h=t.dataIdMap.get(N.dataId).id;gd(e,n,y.shape.length,r,s,u,l,c,I.length,h)}return Ap({inputs:{x:N},attrs:{shape:I},backend:t})}},mp(In,!0),{kernelName:yn,backendName:"wasm",setupFunc:function(e){yd=e.wasm.cwrap(yn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=Np(i,s,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=xa(f.length,l.shape.length))}ga("sum",f,l.shape.length);const[m,g]=fa(l.shape,f),y=D(g),b=t.makeOutput(m,l.dtype);if(0!==D(l.shape)){const e=t.dataIdMap.get(b.dataId).id;yd(u,y,e)}if(d&&t.disposeData(c.dataId),a){const e=ma(b.shape,p);b.shape=e}return b}},dp(Cn),{kernelName:En,backendName:"wasm",setupFunc:function(e){bd=e.wasm.cwrap(En,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,a=n.dataIdMap.get(s.dataId).id,{reps:i}=r,o=new Array(s.shape.length);for(let e=0;e<o.length;e++)o[e]=s.shape[e]*i[e];const u=new Uint8Array(new Int32Array(s.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,s.dtype),h=n.dataIdMap.get(c.dataId).id;return bd(a,u,s.shape.length,l,o.length,lp[c.dtype],h),c}},Ip,{kernelName:_n,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r,i=s.shape[a],o=s.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i),h=new Array(o).fill(0),p=s.shape.slice();p[a]=1;for(let e=0;e<c.length;e++)h[a]=e,c[e]=wd({inputs:{x:s},attrs:{begin:h,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:Rn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of vd)Hn(e);const kd=le();kd.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),kd.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(kd.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Id=n(349),Nd=n.n(Id);var Sd=n(234),Cd=n.n(Sd);class Ed extends N{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new I(this,ta())}write(e,t,n){const r={};return this.move(r,e,t,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=nr();return e(),{kernelMs:nr()-t}}move(e,t,n,r){const s=this.dataIdNextNumber++;if("string"===r){const a=t;return void this.dataIdMap.set(e,{id:s,stringBytes:a,shape:n,dtype:r,memoryOffset:null})}const a=D(n),i=a*j(r),o=this.wasm._malloc(i);this.dataIdMap.set(e,{id:s,memoryOffset:o,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(s,a,o),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),o)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:s}=this.dataIdMap.get(e);return"string"===n?s:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+D(r)*j(n)).buffer,n)}disposeData(e){const t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{r={};const s=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:s,memoryOffset:n,shape:e,dtype:t});const a=D(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=D(e);switch(t){case"float32":return new Float32Array(r,s,a);case"int32":return new Int32Array(r,s,a);case"bool":return new Uint8Array(r,s,a);default:throw new Error("Unknown dtype "+t)}}}function Td(e,t,n){if(null!=$d)return $d;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Dd&&null!=Dd[r]?Dd[r]:n+r}ia("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([le().getAsync("WASM_HAS_SIMD_SUPPORT"),le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const s={};var a;let i;s.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Td(e,t,null!=Rd?Rd:r):r+n},Od&&(s.instantiateWasm=(a=Td(e,t,null!=Rd?Rd:""),(e,t)=>(function(e,t){return le().platform.fetch(e,{credentials:"same-origin"})}(a).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${a}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance)}))}))})),{}))),t&&e&&null==$d?(i=Nd()(s),i.mainScriptUrlOrBlob=new Blob(["var _scriptDir = undefined; var WasmBackendModuleThreadedSimd = "+Nd().toString()],{type:"text/javascript"})):i=Cd()(s);i.tfjs={init:i.cwrap("init",null,[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",null,["number"]),dispose:i.cwrap("dispose",null,[])};let o=!1;i.onRuntimeInitialized=()=>{o=!0,Fd=!1,n({wasm:i})},i.onAbort=()=>{o||Fd||(Fd=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}}))}();return new Ed(e)}),2);const Ad=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let _d,$d=null,Rd=null,Dd={},Fd=!1,Od=!1;function Md(){return null==_d&&(_d=Cr.backend.epsilon()),_d}class Ld extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ld.prototype)}}class zd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zd.prototype)}}class Bd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bd.prototype)}}class Pd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pd.prototype)}}class Wd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wd.prototype)}}function Vd(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Ud(e,t){if(!e)throw new Wd(t)}function Hd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Gd(e){return 1===e.length?e[0]:e}function jd(e){return Array.isArray(e)?e:[e]}function qd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Xd={};function Yd(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Jd(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Jd(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Jd(t):e[n]=t.value)}}}function Zd(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Xd)a=Xd[s];else if(a=t[s],null==a)throw new Bd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Bd(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Xd?[o,u]=Xd.className:i in t&&([o,u]=t[i]),null==o)throw new Bd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Xd))e[t]=Xd[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Xd);for(const e of Object.keys(n))Xd[e]=n[e];Jd(a.config);const r=u(o,a.config,n,s);return Xd=Object.assign({},t),r}{const e=Object.assign({},Xd);for(const e of Object.keys(n))Xd[e]=n[e];const t=new o(a.config);return Xd=Object.assign({},e),t}}}function Qd(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ef(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function tf(e){if(null==e)throw new Bd("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function nf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Bd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function rf(e,t,n=0,r=1/0){return Ud(n>=0),Ud(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function sf(e,t){Array.isArray(e)?(A(e.length>0,(()=>t+" is unexpectedly an empty array.")),e.forEach(((e,n)=>sf(e,`element ${n+1} of ${t}`)))):A(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got `+af(e)+"."))}function af(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>af(e))).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function of(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function uf(e,t){return ra((()=>vo(Ri(Ei(e,e),t,!0))))}class lf extends Js{getConfig(){return{}}}class cf extends lf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ra((()=>{const t=uf(e,this.axis),n=Ga(t,0,this.maxValue);return Ei(e,ii(n,ha(Md(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}cf.className="MaxNorm",Qs(cf);class hf extends lf{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ra((()=>ii(e,ha(Md(),uf(e,this.axis)))))}getConfig(){return{axis:this.axis}}}hf.className="UnitNorm",Qs(hf);class pf extends lf{apply(e){return io(e)}}pf.className="NonNeg",Qs(pf);class df extends lf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ra((()=>{const t=uf(e,this.axis),n=ha(Ei(this.rate,Ga(t,this.minValue,this.maxValue)),Ei(1-this.rate,t));return Ei(e,ii(n,ha(Md(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}df.className="MinMaxNorm",Qs(df);const ff={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function mf(e){return Yd(e)}function gf(e,t={}){return Zd(e,Zs.getMap().classNameMap,t,"constraint")}function yf(e){return null==e?null:"string"==typeof e?gf({className:e in ff?ff[e]:e,config:{}}):e instanceof lf?e:gf(e)}const bf=["channelsFirst","channelsLast"],xf=["valid","same","causal"],wf=["max","avg"],vf=["sum","mul","concat","ave"],kf=new Map;function If(e){nf(bf,"DataFormat",e)}function Nf(e){nf(xf,"PaddingMode",e)}function Sf(e){nf(wf,"PoolMode",e)}const Cf=[];function Ef(e,t){Cf.push(e);try{const e=t();return Cf.pop(),e}catch(e){throw Cf.pop(),e}}function Tf(e){if(!$f(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Cf.length?"":Cf.join("/")+"/")+e}function Af(e){if(!$f(e))throw new Error("Not a valid tensor name: '"+e+"'");kf.has(e)||kf.set(e,0);const t=kf.get(e);if(kf.set(e,kf.get(e)+1),t>0){const n=`${e}_${t}`;return kf.set(n,1),n}return e}const _f=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function $f(e){return!!e.match(_f)}function Rf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Df(e){return so(e=Array.isArray(e)?new Float32Array(e):e)}function Ff(e){return Pi(Df(e)).dataSync()[0]}function Of(e){return _i(Df(e)).dataSync()[0]}function Mf(e,t){if(t<e)throw new Bd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Lf(e,t){return e.asType(t)}function zf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Bf(e,t,n){return ra((()=>{switch(e.rank){case 1:return po(e,t,n);case 2:return fo(e,[t,0],[n,e.shape[1]]);case 3:return mo(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return go(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ho(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ho(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Bd("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}))}function Pf(e,t,n){return ra((()=>{switch(e.rank){case 1:return po(e,t,n);case 2:return fo(e,[0,t],[e.shape[0],n]);case 3:return mo(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return go(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Bd("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function Wf(e,t,n,r){return ra((()=>{switch(e.rank){case 1:return po(e,t,n);case 2:switch(r){case 1:return Bf(e,t,n);case 2:return Pf(e,t,n);default:throw new Bd("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Bf(e,t,n);case 2:return mo(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Pf(e,t,n);default:throw new Bd("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Bf(e,t,n);case 2:return go(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return go(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Pf(e,t,n);default:throw new Bd("The axis is not within the rank of the tensor "+r)}default:throw new Bd("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function Vf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ka(e,t)}function Uf(e,t){switch(e.rank){case 1:return Xa([e,t]);case 2:return Ya([e,t],0);case 3:return Ja([e,t],0);case 4:return Za([e,t],0);default:throw new Bd("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Hf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Bd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return fi(e,t)}function Gf(e,t=0,n=1,r,s){return no(e,t,n,r,s)}function jf(e,t,n,r){if(e.rank<2||t.rank<2)throw new Pd(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Pd(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape);if(2===e.rank&&2===t.rank)return Ko({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Xf(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([u,-1]);const h=[...s,...l];return Ko({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Xf(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function qf(e,t,n){return ra((()=>(t=Array.isArray(t)?so(t,"int32"):t.toInt(),Ii(e,t,n))))}function Kf(e){return Ei(e,e)}function Xf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Bd("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Bd("Unsupported input rank by biasAdd: "+t.rank)}function Yf(e,t,n){return ra((()=>(null==n&&(n="channelsLast"),If(n),e.add(Xf(e.rank,t,n)))))}function Jf(e,t,n,r){return ra((()=>$o(e,t,n,r)))}function Zf(e,t,n=!1){return n?e():t()}const Qf=["fanIn","fanOut","fanAvg"],em=["normal","uniform","truncatedNormal"];class tm extends Js{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class nm extends tm{apply(e,t){return Li(e,t)}}nm.className="Zeros",Qs(nm);class rm extends tm{apply(e,t){return zi(e,t)}}rm.className="Ones",Qs(rm);class sm extends tm{constructor(e){if(super(),"object"!=typeof e)throw new Bd("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new Bd("config must have value set but got "+e);this.value=e.value}apply(e,t){return ra((()=>Ei(ua(this.value),zi(e,t))))}getConfig(){return{value:this.value}}}sm.className="Constant",Qs(sm);class am extends tm{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ro(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}am.className="RandomUniform",Qs(am);class im extends tm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`randomNormal does not support dType ${t}.`);return Gf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}im.className="RandomNormal",Qs(im);class om extends tm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`truncatedNormal does not support dType ${t}.`);return Eo(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}om.className="TruncatedNormal",Qs(om);class um extends tm{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ra((()=>{if(2!==e.length||e[0]!==e[1])throw new Bd("Identity matrix initializer can only be used for 2D square matrices.");return Ei(this.gain,mi(e[0]))}))}getConfig(){return{gain:this.gain}}}um.className="Identity",Qs(um);class lm extends tm{constructor(e){if(super(),e.scale<0)throw new Bd("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,nf(Qf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){nf(em,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(If(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Rf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Rf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Rf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`${this.getClassName()} does not support dType ${t}.`);return Eo(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return ro(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}lm.className="VarianceScaling",Qs(lm);class cm extends lm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lm.className}}cm.className="GlorotUniform",Qs(cm);class hm extends lm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lm.className}}hm.className="GlorotNormal",Qs(hm);class pm extends lm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lm.className}}pm.className="HeNormal",Qs(pm);class dm extends lm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lm.className}}dm.className="HeUniform",Qs(dm);class fm extends lm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lm.className}}fm.className="LeCunNormal",Qs(fm);class mm extends lm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lm.className}}mm.className="LeCunNormal",Qs(mm);class gm extends tm{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Pd("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ra((()=>{if(e.length<2)throw new Pd("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Gf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=_u.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Ei(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}gm.className="Orthogonal",Qs(gm);const ym={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function bm(e,t={}){return Zd(e,Zs.getMap().classNameMap,t,"initializer")}function xm(e){return Yd(e)}function wm(e){if("string"==typeof e){const t=e in ym?ym[e]:e;if("GlorotNormal"===t)return new hm;if("GlorotUniform"===t)return new cm;if("HeNormal"===t)return new pm;if("HeUniform"===t)return new dm;if("LeCunNormal"===t)return new fm;if("LeCunUniform"===t)return new mm;{const e={};return e.className=t,e.config={},bm(e)}}return e instanceof tm?e:bm(e)}let vm=0;function km(){return vm++}const Im={};function Nm(e=""){return e in Im||(Im[e]=0),Im[e]+=1,e+Im[e].toString()}function Sm(e){return Array.isArray(e)&&Array.isArray(e[0])}function Cm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Em(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Bd("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function Tm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Bd("Expected exactly 1 Shape; got "+e.length)}return e}function Am(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class _m{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=km(),n=null==n?"Variable":n,this.originalName=Tf(n),this.name=Af(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return Cr.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function $m(e){return e.map((e=>e.read()))}function Rm(e){e.forEach((e=>{e[0].write(e[1])}))}class Dm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Fm{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=km(),null!=a&&(this.originalName=Tf(a),this.name=Af(this.originalName)),this.rank=t.length}}let Om=0;class Mm{constructor(e,t){this.callArgs=t,this.id=Om++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Lm=0;class zm extends Js{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Lm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=qd(e)+"_"+Nm(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new zd(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Bd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Gd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Gd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ld("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Ld("Layer "+this.name+" is not connected, no input to return.");return Gd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ld("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Ld("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Gd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=jd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=jd(this.inputSpec);if(e.length!==t.length)throw new Bd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Bd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Bd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=jd(e);let r=!0;for(const e of n)if(!(e instanceof Fm)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Fm){s=!1;break}if(r===s)throw new Bd("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ef(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of jd(e))t.push(n.shape);this.build(Gd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=jd(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Gd(a),null!=this.activityRegularizer)throw new Pd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=jd(e);const t=[];for(const n of e)t.push(n.shape);return Gd(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Fm(a,n,this,jd(e),t,this.name,r))):new Fm(a,r,this,jd(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Pd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ld(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ld(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new zd(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Am(this.weights)}build(e){this.built=!0}getWeights(e=!1){return $m(e?this.trainableWeights:this.weights)}setWeights(e){ra((()=>{const t=this.weights;if(t.length!==e.length)throw new Bd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=$m(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!F(a.shape,o.shape))throw new Bd(`Layer weight shape ${a.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Rm(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Bd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=wm("zeros"));const o=r.apply(t,n),u=new _m(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=jd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=jd(e);t=jd(t),n=jd(n),r=jd(r),s=Cm(s),a=Cm(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Mm({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Bm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Bm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Pm extends zm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Nm("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Bd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Bd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Bd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Fm(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Bd("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Wm(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];sa(r)}}function Vm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Um;Pm.className="InputLayer",Qs(Pm),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Um||(Um={}));class Hm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Gm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class jm extends Hm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=ra((()=>ha(this.totals[e],Ei(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ra((()=>{const n=Ei(ii(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),aa(t[e])})))}}class qm extends Hm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Km extends Hm{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");K(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=nr();return(...s)=>{const a=nr();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Wm(n),r.push(this.yield(e,t,n))),r.push(Wu()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Wm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Wm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Wu()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Wm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Wm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Wu()):K(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Wm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Wm(e),await this.trainEnd(e))}}function Xm(e,t){return null==e&&(e={}),e instanceof Hm?[e]:Array.isArray(e)&&e[0]instanceof Hm?e:jd(e).map((e=>new Km(e,t)))}class Ym{constructor(){}static registerCallbackConstructor(e,t){A(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, but got "+e)),Ym.checkForDuplicate(t),null==Ym.constructors[e]&&(Ym.constructors[e]=[]),Ym.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ym.constructors)Ym.constructors[+t].forEach((t=>{if(t===e)throw new Bd("Duplicate callback constructor.")}))}static clear(){Ym.constructors={}}static createCallbacks(e){const t=[];for(const n in Ym.constructors){const r=+n;e>=r&&t.push(...Ym.constructors[r])}return t.map((e=>new e))}}function Jm(e,t,n,r,s,a,i,o,u){const l=new qm,c=[new jm,...Ym.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Gm(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Zm(e,t={},n=!1){return Zd(e,Zs.getMap().classNameMap,t,"layer",n)}function Qm(e,t){return ra((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Ri(Kf(e),t,!0),r=gi(n.shape,Md()),s=vo(Ci(n,r));return ii(e,s)}))}function eg(e,t){return ra((()=>Bi(Kf($i(t,e)),-1)))}function tg(e,t){return ra((()=>Bi(ca($i(t,e)),-1)))}function ng(e,t){return ra((()=>{const n=$i(e,t),r=Ga(ca(e),Md(),Number.MAX_VALUE),s=ca(ii(n,r));return Ei(100,Bi(s,-1))}))}function rg(e,t,n=!1){return ra((()=>{if(n)t=yo(t);else{const e=Ri(t,t.shape.length-1,!0);t=ii(t,e)}return t=Ga(t,Md(),1-Md()),Hi(Ri(Ei(e.toFloat(),Ai(t)),t.shape.length-1))}))}function sg(e,t,n=!1){return ra((()=>{const r=yi(function(e){const t=[Rf(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Ga(t,Md(),1-Md())).shape;return rg(ji(r,s[s.length-1]).reshape(s),t,n)}))}function ag(e,t){return ra((()=>{let n;return n=Ga(t,Md(),1-Md()),n=Ai(ii(n,$i(1,n))),Bi(function(e,t){if(!F(e.shape,t.shape))throw new Bd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ra((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function ig(e,t){return ra((()=>{const n=Qm(e,-1),r=Qm(t,-1),s=Ei(n,r);return Hi(Ri(s,-1))}))}Ym.constructors={};const og={meanSquaredError:eg,meanAbsoluteError:tg,meanAbsolutePercentageError:ng,meanSquaredLogarithmicError:function(e,t){return ra((()=>{const n=Ga(t,Md(),Number.MAX_VALUE),r=Ai(ha(1,n)),s=Ga(e,Md(),Number.MAX_VALUE),a=Ai(ha(1,s));return Bi(Kf($i(r,a)),-1)}))},squaredHinge:function(e,t){return ra((()=>{const n=Ci(0,$i(1,Ei(e,t)));return Bi(Kf(n),-1)}))},hinge:function(e,t){return ra((()=>{const n=Ci(0,$i(1,Ei(e,t)));return Bi(n,-1)}))},categoricalHinge:function(e,t){return ra((()=>{const n=Ri(Ei(e,t),-1),r=_i(Ei($i(1,e),t),-1);return Ci(0,ha(1,$i(r,n)))}))},logcosh:function(e,t){return ra((()=>{const n=Math.log(2),r=$i(t,e),s=$i(ha(r,bo(Ei(-2,r))),n);return Bi(s,-1)}))},categoricalCrossentropy:rg,sparseCategoricalCrossentropy:sg,binaryCrossentropy:ag,kullbackLeiblerDivergence:function(e,t){return ra((()=>{const n=Ga(e,Md(),1),r=Ga(t,Md(),1);return Ri(Ei(e,Ai(ii(n,r))),-1)}))},poisson:function(e,t){return ra((()=>{const n=Ai(ha(Md(),t));return Bi($i(t,Ei(e,n)),-1)}))},cosineProximity:ig};function ug(e){if("string"==typeof e){if(e in og)return og[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Bd(t)}return e}function lg(e,t){return ra((()=>{const n=Ei(.5,Yi(t)),r=Lf(Ni(t,n),e.dtype);return Bi(hi(e,r),-1)}))}function cg(e,t){return ra((()=>Lf(hi(Na(e,-1),Na(t,-1)),"float32")))}function hg(e,t){return ag(e,t)}function pg(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),hi(e,t).asType("float32")}const dg=rg,fg=sg,mg={binaryAccuracy:lg,categoricalAccuracy:cg,precision:function(e,t){return ra((()=>{const n=function(e,t){return ra((()=>Fi(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return ra((()=>Fi(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return _o(Ni(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:dg,sparseCategoricalCrossentropy:fg,mse:eg,MSE:eg,mae:tg,MAE:tg,mape:ng,MAPE:ng,cosine:ig};function gg(e){if("string"==typeof e&&e in mg)return mg[e];if("string"!=typeof e&&null!=e)return e;throw new Bd("Unknown metric "+e)}function yg(e){if(Ud(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(og))if(og[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(mg))if(mg[n]===e){t=n;break}return void 0!==t?t:e.name}}function bg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!xg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function xg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!xg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!xg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function wg(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function vg(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}wg([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function kg(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];wg([`${i} (${o})`,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)wg(["","","",a[e]],t,r)}function Ig(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ng(e,t){if(null===e)return null;if("string"==typeof e)return Kd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Ig(t,s,r)?n.push(r):n.push(Ng(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Kd(n);t[e]=Ng(r,e)}}return t}}function Sg(e,t){if(null==e)return null;if("string"==typeof e)return qd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Ig(t,s,r)?n.push(r):n.push(Sg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[qd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Sg(r,n):r}return t}}class Cg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Cg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Bd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return xs(t,e.dtype)}catch(n){throw new Bd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Fm){if(null==this.id2Value[e.id])throw new Bd("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bd("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof Fm){if(null==this.id2Value[e.id])throw new Bd("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bd("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&sa(this.id2Mask)}}const Eg={},Tg={};function Ag(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==Eg[c]){const e=function(e,t){A(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=$g(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=$g(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:_g(r)}}(i,t);h=e.sorted,p=e.recipientCounts,Eg[c]=h,Tg[c]=p}h=Eg[c],p={},s||Object.assign(p,Tg[c]);const d=new Cg(t);for(let e=0;e<h.length;++e){if(null!=r){const e=na().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof Pm)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=jd(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Rg(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||sa(f)}return d.disposeMasks(),a?u:u[0]}function _g(e){const t={};for(const n in e)t[n]=e[n].size;return t}function $g(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Rg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Dg extends zm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Nm(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ef(this.inputs).length!==this.inputs.length)throw new Bd("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((e=>e.name)));ef(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((e=>e.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Ud(0===n,"input layer has >1 nodes"),Ud(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Pm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new zd(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Dg.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Qd);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Dg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Qd);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new zd("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+m);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new zd(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Bd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Bd("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Bd("Provided weight data has no target variable: "+r);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Bd(`${e.length} of ${r} weights are not set: `+e)}Rm(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 2.7.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Sg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ra((()=>{e=jd(e);const n=new Cg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ag(this.outputs,n,t)}))}computeMask(e,t){return ra((()=>{let n;return e=jd(e),n=null==t?Vd(null,e.length):jd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Cm(e);if(t.length!==this.inputLayers.length)throw new Bd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qd);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Cm(t.computeOutputShape(Gd(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Ud(t in n),s.push(n[t])}return Gd(s)}runInternalGraph(e,t){null==t&&(t=Vd(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qd);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=jd(t.call(e,l)),u=jd(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=jd(t.call(r,l)),u=jd(t.computeMask(r,i));if(t.activityRegularizer)throw new Pd("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Ud(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Dg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Dg.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Bd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Bd("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Bd("No such layer: "+e)}calculateLosses(){return ra((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Dg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Dg.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Dg.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Dg.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Dg.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Gd(n),r)}function u(e){const n=e.name,a=Zm(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Bd("Corrupted configuration, expected array for nodeData: "+e);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!tf(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Ud(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Ud(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Bd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ra((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Og(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ra((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());sa(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),so(s,"float32")}return null}function Mg(e,t){return Ei(e,t)}function Lg(e,t){let n,r;const s=t;n=s.xs,r=s.ys,A(null!=n&&null!=r,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t));const a=zg("input",e.inputNames,n),i=zg("output",e.outputNames,r),o=a[0].shape[0];A(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")")),A(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")"));for(let t=0;t<a.length;t++)A(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)A(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function zg(e,t,n){if(n instanceof lr)return[n];if(Array.isArray(n))return A(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Bd(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Bg(e){return"function"==typeof e.iterator}function Pg(e){A(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got "+e))}function Wg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Bf(e,t,n-t))):Bf(e,t,n-t)}function Vg(e,t){return ra((()=>null==e?null:Array.isArray(e)?e.map((e=>Vg(e,t))):qf(e,"int32"===t.dtype?t:t.toInt())))}function Ug(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Hg(e){const t=[];e instanceof lr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(zf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Gg(e,t){if(null==e)return;const n=[];if(t instanceof lr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof lr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function jg(e){return Array.isArray(e)}function qg(e){return!function(e){return e instanceof lr}(e)&&!jg(e)}function Kg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(jg(e)&&e.length>0)t=!0;else if(qg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Bd(`Error when checking model ${s} expected no data, but got `+e)}return[]}if(null==e)return t.map((e=>null));let a;if(qg(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Bd(`No data provided for "${n}". Need data for each key in: `+t);a.push(e[n])}}else if(jg(e)){if((e=e).length!==t.length)throw new Bd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);a=e}else{if(e=e,t.length>1)throw new Bd(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);a=[e]}if(a=Hg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Bd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u>=0&&o!==u)throw new Bd(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function Xg(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Bd(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Bd(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Bd(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new Bd(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Yg extends Dg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Bd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),wg(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?vg(o[e],n,r):kg(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Am(e.collectedTrainableWeights):Am(e.trainableWeights),t}(e),l=Am(e.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Bu.adagrad(.01),Adadelta:()=>Bu.adadelta(1,.95,Md()),Adam:()=>Bu.adam(.001,.9,.999,Md()),Adamax:()=>Bu.adamax(.002,.9,.999,Md(),0),RMSProp:()=>Bu.rmsprop(.001,.9,0,Md()),SGD:()=>Bu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Bd("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof la))throw new Bd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Bd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>ug(e)))}else{const n=ug(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Bd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ug(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ef("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ef("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===ag?-1!==["accuracy","acc"].indexOf(i)?r=lg:-1!==["crossentropy","ce"].indexOf(i)&&(r=hg):this.lossFunctions[e]===sg?-1!==["accuracy","acc"].indexOf(i)?r=pg:-1!==["crossentropy","ce"].indexOf(i)&&(r=fg):-1!==["accuracy","acc"].indexOf(i)?r=cg:-1!==["crossentropy","ce"].indexOf(i)&&(r=dg),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=gg(i);a=e,n=""+yg(i)}let t;Ef(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Pg(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Gd(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Gg(s[0],e),Gg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Pd("Verbose mode is not implemented yet.");A(!r||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=ra((()=>{if(t.value){const{xs:n,ys:r}=Lg(e,t.value),i=n.concat(r),l=ra((()=>s(i)));if(sa(i),0===u)for(let e=0;e<l.length;++e)a.push(ua(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=ra((()=>ha(a[e],Ei(c,t)))),u>0&&sa(n)}sa(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=ii(a[e],o),sa(t)}return Gd(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Bd(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new Bd("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Bd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Cg;if(e instanceof lr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Bd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Bd("No value is provided for the model's input "+t.name);a.add(t,n)}const i=Ag(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Vd(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Bd("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return ra((()=>{const r=this.checkNumSamples(e);if(n)throw new Pd("Verbose predictLoop() is not implemented yet.");const s=Ug(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)ra((()=>{const n=s[t][0],r=s[t][1],a=Wg(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Cg(i);return Ag(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Gd(a.map((e=>Ka(e,0))))}))}predict(e,t={}){const n=Hg(e);Xg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Pg(r),this.predictLoop(n,r)}finally{Gg(n,e)}}predictOnBatch(e){Xg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new zd("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===sg?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=ef(e.map((e=>e.shape[0])));r.sort();const s=ef(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Bd("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((e=>e.shape))));if(s.length>1)throw new Bd("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((e=>e.shape))));if(r.length>0&&s.length>0&&!F(r,s))throw new Bd(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Kg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Kg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[eg,ag,rg];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===rg&&1===a.shape[a.shape.length-1])throw new Bd(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Bd(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Bd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Fg(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Og(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return ra((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Pd("Verbose mode is not implemented yet.");if(null!=s)throw new Pd("steps mode in testLoop() is not implemented yet");{const r=Ug(a,n),s=so(Mf(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=Bf(s,a,o-a),l=Vg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(ua(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ha(i[e],Ei(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=ii(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Hd(e,r)>1&&(s+="_"+Hd(e.slice(0,n),r)),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Cg(e),o=Ag(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Mg(n,s[e]));const a=Bi(n);t.push(a),u=0===e?n:ha(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Bi(t(r[s],o[s]))}aa(n),a.push(n)}return u=Bi(u),this.calculateLosses().forEach((e=>{u=ha(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ra((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Cg(a),o=Ag(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Bi(r(s[e],o[e]));n=0===e?a:ha(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Bi(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,l,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Pg(h);const p=!1,d=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,h);s=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Pd("validationData including sample weights is not supported yet."):new Bd("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];u=Wg(s,e,t),s=Wg(s,0,e),l=Wg(a,e,t),a=Wg(a,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const v=Xm(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,i,o,u,l,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=Mf(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Jm(o,i,a,p,g,d,s,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new Pd("batch shuffling is not implemneted yet");c&&C(y);const i=so(y),o=Ug(g,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),ra((()=>{const p=o[c][0],d=o[c][1],f=Bf(i,p,d-p);h.batch=c,h.size=d-p;const g=Vg(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,aa(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];aa(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),Vm(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{e.isTraining=!1,Gg(s,t),Gg(a,n),Gg(u,i),Gg(l,o),null!=c&&sa(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(A(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),A(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),A(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),A(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),A(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Bg(n.validationData))A(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const e=function(e){if(3===e.length)throw new Pd("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Xm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Jm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Lg(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Fg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Og(s[e],null,t[e]))}const l=r.concat(s).concat(i),d=o(l);sa(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,aa(n)}await p.onBatchEnd(h,a),Vm(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Bg(n.validationData)?jd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):jd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return sa(a),Gd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=na().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-na().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=qd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>qd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=qd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[qd(yg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>qd(yg(e))));{const e={};for(const t in this.metrics)e[t]=qd(yg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Zm(Ng(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Kd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Kd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Kd(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Kd(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Kd(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Kr(e);if(0===t.length)throw new Bd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Bd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Bd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Pr(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await Pr(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Hr([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;bg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){bg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Yg.className="Model",Qs(Yg);class Jg extends Yg{}Jg.className="Functional",Qs(Jg);class Zg extends Yg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Nm("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Bd("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof Zg||e instanceof Yg;let n;if(t){if(n=e,1!==n.outputs.length)throw new Bd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Bd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Bd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Bd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Pm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Bd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Bd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Bm(this.outputs[0])}this.inboundNodes=[],new Mm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Vd(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Tm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new zd("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new zd("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new zd("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new zd("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Bd("Legacy serialization format not supported yet.");s=t}else A(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Zg))throw new Pd("Sequential.fromConfig called on non-Sequential input: "+i);for(const e of s){const t=Zm(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Bd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Bd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Zg.className="Sequential",Qs(Zg);class Qg extends Js{getConfig(){return{}}}class ey extends Qg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Pd(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return oi(e)}(e,t)}}ey.className="elu",Qs(ey);class ty extends Qg{apply(e){return uo(e)}}ty.className="selu",Qs(ty);class ny extends Qg{apply(e){return io(e)}}ny.className="relu",Qs(ny);class ry extends Qg{apply(e){return ra((()=>Wi(6,io(e))))}}ry.className="relu6",Qs(ry);class sy extends Qg{apply(e){return e}}sy.className="linear",Qs(sy);class ay extends Qg{apply(e){return co(e)}}ay.className="sigmoid",Qs(ay);class iy extends Qg{apply(e){return function(e){return ra((()=>{const t=ha(.5,Ei(.2,e));return Ga(t,0,1)}))}(e)}}iy.className="hardSigmoid",Qs(iy);class oy extends Qg{apply(e){return bo(e)}}oy.className="softplus",Qs(oy);class uy extends Qg{apply(e){return function(e){return ra((()=>ii(e,ca(e).add(1))))}(e)}}uy.className="softsign",Qs(uy);class ly extends Qg{apply(e){return No(e)}}ly.className="tanh",Qs(ly);class cy extends Qg{apply(e,t=-1){return yo(e,t)}}cy.className="softmax",Qs(cy);class hy extends Qg{apply(e,t=-1){return Di(e,t)}}hy.className="logSoftmax",Qs(hy);class py extends Qg{apply(e,t=1){return ra((()=>co(e.mul(t)).mul(e)))}}function dy(e){return e.getClassName()}function fy(e,t={}){return Zd(e,Zs.getMap().classNameMap,t,"activation")}function my(e){if(null==e){return fy({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},fy(t)}return e instanceof Qg?e:fy(e)}py.className="swish",Qs(py);class gy extends Js{}class yy extends gy{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ra((()=>{let t=Li([1]);return this.hasL1&&(t=ha(t,Ri(Ei(this.l1,ca(e))))),this.hasL2&&(t=ha(t,Ri(Ei(this.l2,Kf(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}yy.className="L1L2",Qs(yy);const by={l1l2:"L1L2"};function xy(e){return Yd(e)}function wy(e,t={}){return Zd(e,Zs.getMap().classNameMap,t,"regularizer")}function vy(e){return null==e?null:"string"==typeof e?wy({className:e in by?by[e]:e,config:{}}):e instanceof gy?e:wy(e)}class ky extends zm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Em(e);let n=io(e);return null!=this.maxValue&&(n=Ga(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ky.className="ReLU",Qs(ky);class Iy extends zm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Em(e);return Ti(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Iy.className="LeakyReLU",Qs(Iy);class Ny extends zm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vy(e.alphaRegularizer),this.alphaConstraint=yf(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Bd("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Tm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Dm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Em(e),Zi(e,this.alpha.read())}getConfig(){const e={alphaInitializer:xm(this.alphaInitializer),alphaRegularizer:xy(this.alphaRegularizer),alphaConstraint:mf(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ny.className="PReLU",Qs(Ny);class Sy extends zm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Pd(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Em(e);return oi(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="ELU",Qs(Sy);class Cy extends zm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Em(e);return n.mul(Lf(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Cy.className="ThresholdedReLU",Qs(Cy);class Ey extends zm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new cy).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Em(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ty(e,t,n){if("number"==typeof e)return Vd(e,t);if(e.length!==t)throw new Bd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Bd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+a)}return e;var r}function Ay(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function _y(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Of([n-t,0]);else{if("same"!==r)throw new Bd(`Unsupport padding mode: ${r}.`);e*=t}return e}function $y(e,t){return ra((()=>(If(t),"channelsFirst"===t?va(e,[0,2,3,1]):e)))}function Ry(e,t){return ra((()=>(If(t),"channelsFirst"===t?va(e,[0,2,3,4,1]):e)))}function Dy(e,t,n,r=[1,1],s="valid",a,i,o=null){return ra((()=>{if(null==a&&(a="channelsLast"),If(a),3!==e.rank&&4!==e.rank)throw new Bd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Bd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=$y(e,a);if("causal"===s)throw new Pd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Uo({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=va(u,[0,3,1,2])),u}))}Ey.className="Softmax",Qs(Ey);class Fy extends zm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Fy.verifyArgs(t),this.rank=e,sf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pd(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ty(t.kernelSize,e,"kernelSize"),this.strides=Ty(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Nf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,If(this.dataFormat),this.activation=my(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=wm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=yf(t.biasConstraint),this.biasRegularizer=vy(t.biasRegularizer),this.activityRegularizer=vy(t.activityRegularizer),this.dilationRate=Ty(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Bd("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Bd("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Bd("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(Ud("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,3))throw new Bd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:dy(this.activation),useBias:this.useBias,biasInitializer:xm(this.biasInitializer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),biasConstraint:mf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Oy extends Fy{constructor(e,t){super(e,t),this.kernel=null,Oy.verifyArgs(t),this.filters=t.filters,sf(this.filters,"filters"),this.kernelInitializer=wm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=yf(t.kernelConstraint),this.kernelRegularizer=vy(t.kernelRegularizer)}build(e){e=Tm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bd("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ra((()=>{let t;e=Em(e);const n=null==this.bias?null:this.bias.read(),r=of(this.activation.getClassName());if(null!=r&&2===this.rank)t=Dy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return ra((()=>{if(null==a&&(a="channelsLast"),If(a),3!==e.shape.length)throw new Bd("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new Bd("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new Bd("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===a&&(e=va(e,[0,2,1])),"causal"===s)throw new Pd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ei(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Yf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Dy(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pd("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return ra((()=>{if(null==a&&(a="channelsLast"),If(a),4!==e.rank&&5!==e.rank)throw new Bd("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new Bd("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=Ry(e,a);if("causal"===s)throw new Pd("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ri(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Yf(o,n)),"channelsFirst"===a&&(o=va(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Tm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Ay(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:xm(this.kernelInitializer),kernelRegularizer:xy(this.kernelRegularizer),kernelConstraint:mf(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Bd("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class My extends Oy{constructor(e){super(2,e),My.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,2))throw new Bd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}My.className="Conv2D",Qs(My);class Ly extends Oy{constructor(e){super(3,e),Ly.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Bd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ly.className="Conv3D",Qs(Ly);class zy extends My{constructor(e){if(super(e),this.inputSpec=[new Dm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Bd("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=Tm(e)).length)throw new Bd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Dm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ra((()=>{let t=Em(e);if(4!==t.shape.length)throw new Bd("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,_y(i,c,u,this.padding),_y(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=va(t,[0,2,3,1]));let d=ni(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=va(d,[0,3,1,2])),null!=this.bias&&(d=Yf(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Tm(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=_y(t[r],o,a,this.padding),t[s]=_y(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zy.className="Conv2DTranspose",Qs(zy);class By extends Oy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Bd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Bd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Bd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=wm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vy(t.depthwiseRegularizer),this.depthwiseConstraint=yf(t.depthwiseConstraint),this.pointwiseInitializer=wm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vy(t.pointwiseRegularizer),this.pointwiseConstraint=yf(t.pointwiseConstraint)}build(e){if((e=Tm(e)).length<this.rank+2)throw new Bd(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Bd("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Dm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ra((()=>{let t;if(e=Em(e),1===this.rank)throw new Pd("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=va(e,[0,2,3,1])),t=lo(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Yf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=va(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xm(this.depthwiseInitializer),e.pointwiseInitializer=xm(this.pointwiseInitializer),e.depthwiseRegularizer=xy(this.depthwiseRegularizer),e.pointwiseRegularizer=xy(this.pointwiseRegularizer),e.depthwiseConstraint=mf(this.depthwiseConstraint),e.pointwiseConstraint=mf(this.pointwiseConstraint),e}}By.className="SeparableConv";class Py extends By{constructor(e){super(2,e)}}Py.className="SeparableConv2D",Qs(Py);class Wy extends Oy{constructor(e){super(1,e),Wy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,1))throw new Bd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Wy.className="Conv1D",Qs(Wy);class Vy extends zm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ra((()=>{if(e=Em(e),"channelsLast"===this.dataFormat){const t=Wf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Wf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Wf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Wf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Vy.className="Cropping2D",Qs(Vy);class Uy extends zm{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ra((()=>{let t=Em(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=va(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s=t.resizeNearestNeighbor([e,r]);return va(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return t.resizeNearestNeighbor([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Uy.className="UpSampling2D",Qs(Uy);class Hy extends Fy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=wm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=yf(e.depthwiseConstraint),this.depthwiseRegularizer=vy(e.depthwiseRegularizer)}build(e){if((e=Tm(e)).length<4)throw new Bd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Bd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ra((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return ra((()=>{null==s&&(s="channelsLast"),If(s);let i=$y(e,s);if(4!==e.rank)throw new Bd("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new Bd("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=si(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=va(i,[0,3,1,2])),i}))}(e=Em(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Yf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Tm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ay(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ay(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xm(this.depthwiseInitializer),e.depthwiseRegularizer=xy(this.depthwiseRegularizer),e.depthwiseConstraint=mf(this.depthwiseRegularizer),e}}function Gy(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Bd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function jy(e,t,n,r=!1,s,a,i=!1,o=!1){return ra((()=>{const u=t.shape.length;if(u<3)throw new Bd(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Mf(2,u));if(t=va(t,l),null!=a)throw new Pd("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=di(s,-1)),s=va(s,l)),r&&(t=oo(t,0),null!=s&&(s=oo(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=To(t);let m,g;null!=s&&(m=To(s));for(let t=0;t<d;++t){const n=f[t],r=ra((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=ra((()=>{const e=m[t],n=Yi(e).sub(e);return{output:r[0].mul(e).add(p[0].mul(n)),newStates:p.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Io(c,1)),[h,g,p]}))}Hy.className="DepthwiseConv2D",Qs(Hy);class qy extends zm{constructor(e){let t;if(super(e),null==e.cell)throw new Bd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new tb({cells:e.cell}):e.cell,null==t.stateSize)throw new Bd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Dm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Mf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Sm(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ra((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Pd("Constants support is not implemented in RNN yet.");Sm(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Dm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!F(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Bd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map((e=>new Dm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ra((()=>{if(!this.stateful)throw new Ld("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Bd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Li([n,e]))):this.states_=[Li([n,this.cell.stateSize])];else if(null==e)sa(this.states_),null!=this.keptStates&&(sa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Li([n,e]))):this.states_[0]=Li([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):sa(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!F(r.shape,a))throw new Bd(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>aa(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Gy(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Dm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Fm){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ra((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Em(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Bd(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=jy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ra((()=>{let t=Li(e.shape);return t=Ri(t,[1,2]),t=zf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Hf(t,[1,e]):t)):this.cell.stateSize>1?[Hf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===qy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Zm(t.cell,n);return new e(Object.assign(t,{cell:r}))}}qy.className="RNN",Qs(qy);class Ky extends zm{}class Xy extends Ky{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,sf(this.units,"units"),this.activation=my(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=yf(e.kernelConstraint),this.recurrentConstraint=yf(e.recurrentConstraint),this.biasConstraint=yf(e.biasConstraint),this.dropout=Ff([1,Of([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ff([1,Of([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Tm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ra((()=>{if(2!==(e=e).length)throw new Bd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nb({ones:()=>Yi(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nb({ones:()=>Yi(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=jf(null!=a?Ei(e,a):e,this.kernel.read()),null!=this.bias&&(s=Yf(s,this.bias.read())),null!=i&&(n=Ei(n,i));let o=ha(s,jf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:dy(this.activation),useBias:this.useBias,kernelInitializer:xm(this.kernelInitializer),recurrentInitializer:xm(this.recurrentInitializer),biasInitializer:xm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:mf(this.kernelConstraint),recurrentConstraint:mf(this.recurrentConstraint),biasConstraint:mf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Xy.className="SimpleRNNCell",Qs(Xy);class Yy extends qy{constructor(e){e.cell=new Xy(e),super(e)}call(e,t){return ra((()=>{null!=this.cell.dropoutMask&&(sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Yy.className="SimpleRNN",Qs(Yy);class Jy extends Ky{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Bd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,sf(this.units,"units"),this.activation=my(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=my(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=yf(e.kernelConstraint),this.recurrentConstraint=yf(e.recurrentConstraint),this.biasConstraint=yf(e.biasConstraint),this.dropout=Ff([1,Of([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ff([1,Of([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Tm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ra((()=>{if(2!==(e=e).length)throw new Bd("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nb({ones:()=>Yi(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nb({ones:()=>Yi(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Ei(e,s[0]));let l=jf(e,this.kernel.read());this.useBias&&(l=Yf(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ei(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=wo(c,[2*this.units,this.units],c.rank-1),d=jf(r,h),[f,m,g]=wo(l,3,l.rank-1),[y,b]=wo(d,2,d.rank-1);i=this.recurrentActivation.apply(ha(f,y)),o=this.recurrentActivation.apply(ha(m,b));const x=jf(Ei(o,r),p);u=this.activation.apply(ha(g,x));const w=ha(Ei(i,r),Ei(ha(1,Hi(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:dy(this.activation),recurrentActivation:dy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xm(this.kernelInitializer),recurrentInitializer:xm(this.recurrentInitializer),biasInitializer:xm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:mf(this.kernelConstraint),recurrentConstraint:mf(this.recurrentConstraint),biasConstraint:mf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Jy.className="GRUCell",Qs(Jy);class Zy extends qy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Jy(e),super(e)}call(e,t){return ra((()=>{null!=this.cell.dropoutMask&&(sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Zy.className="GRU",Qs(Zy);class Qy extends Ky{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,sf(this.units,"units"),this.activation=my(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=my(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vy(e.kernelRegularizer),this.recurrentRegularizer=vy(e.recurrentRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.kernelConstraint=yf(e.kernelConstraint),this.recurrentConstraint=yf(e.recurrentConstraint),this.biasConstraint=yf(e.biasConstraint),this.dropout=Ff([1,Of([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ff([1,Of([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Tm(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends tm{apply(t,r){const s=e.apply([n]),a=(new rm).apply([n]),i=e.apply([2*n]);return Uf(Uf(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ra((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Bd("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nb({ones:()=>Yi(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nb({ones:()=>Yi(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Ei(e,a[0]));let h=jf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ei(r,i[0])),h=ha(h,jf(r,this.recurrentKernel.read())),this.useBias&&(h=Yf(h,this.bias.read()));const[p,d,f,m]=wo(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=ha(Ei(u,s),Ei(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ei(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:dy(this.activation),recurrentActivation:dy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xm(this.kernelInitializer),recurrentInitializer:xm(this.recurrentInitializer),biasInitializer:xm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xy(this.kernelRegularizer),recurrentRegularizer:xy(this.recurrentRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:mf(this.kernelConstraint),recurrentConstraint:mf(this.recurrentConstraint),biasConstraint:mf(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Qy.className="LSTMCell",Qs(Qy);class eb extends qy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qy(e),super(e)}call(e,t){return ra((()=>{null!=this.cell.dropoutMask&&(sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}eb.className="LSTM",Qs(eb);class tb extends Ky{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ra((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Sm(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ef("RNNCell_"+r,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Zm(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $m(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Rm(t)}}function nb(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>Jf(t(),n),i=()=>Zf(a,t,r);return!s||s<=1?aa(i().clone()):Array(s).fill(void 0).map(i).map((e=>aa(e.clone())))}tb.className="StackedRNNCells",Qs(tb);var rb,sb;class ab extends qy{constructor(e){if(e.unroll)throw new Pd("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pd("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Dm({ndim:5})]}call(e,t){return ra((()=>{if(null!=this.cell.dropoutMask&&(sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Bd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ra((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Li([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){ra((()=>{if(!this.stateful)throw new Ld("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Bd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Li(s))):this.states_=[Li(s)];else if(null==e)sa(this.states_),null!=this.keptStates&&(sa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Li(s))):this.states_[0]=Li(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):sa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!F(n.shape,r))throw new Bd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>aa(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Ay(u,r[0],s,a[0],i[0]),h=Ay(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ab.className="ConvRNN2D";class ib extends Qy{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,sf(this.filters,"filters"),this.kernelSize=Ty(n,2,"kernelSize"),this.kernelSize.forEach((e=>sf(e,"kernelSize"))),this.strides=Ty(r||1,2,"strides"),this.strides.forEach((e=>sf(e,"strides"))),this.padding=s||"valid",Nf(this.padding),this.dataFormat=a||"channelsLast",If(this.dataFormat),this.dilationRate=Ty(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>sf(e,"dilationRate")))}build(e){var t;e=Tm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Bd("The channel dimension of the input should be defined. Found "+e[n]);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends tm{apply(e,t){return Vf([n.apply([r]),zi([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ra((()=>{if(3!==e.length)throw new Bd("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nb({ones:()=>Yi(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ei(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nb({ones:()=>Yi(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=wo(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?wo(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,C,E,T]=wo(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,E),g=this.recurrentConv(g,T);const A=this.recurrentActivation.apply(ha(u,d)),_=this.recurrentActivation.apply(ha(l,f)),$=ha(Ei(_,a),Ei(A,this.activation.apply(ha(c,m)))),R=Ei(this.recurrentActivation.apply(ha(h,g)),this.activation.apply($));return[R,R,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Qa(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Yf(s,n,this.dataFormat):s}recurrentConv(e,t){return Qa(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ib.className="ConvLSTM2DCell",Qs(ib);class ob extends ab{constructor(e){const t=new ib(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ob.className="ConvLSTM2D",Qs(ob);class ub extends zm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Zf((()=>Jf(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ub.className="Dropout",Qs(ub);class lb extends ub{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}lb.className="SpatialDropout1D",Qs(lb);class cb extends zm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,sf(this.units,"units"),this.activation=my(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=wm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=yf(e.kernelConstraint),this.biasConstraint=yf(e.biasConstraint),this.kernelRegularizer=vy(e.kernelRegularizer),this.biasRegularizer=vy(e.biasRegularizer),this.activityRegularizer=vy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Tm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Tm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e),r=of(this.activation.getClassName());let s;return null!=r?s=jf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=jf(n,this.kernel.read()),null!=this.bias&&(s=Yf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:dy(this.activation),useBias:this.useBias,kernelInitializer:xm(this.kernelInitializer),biasInitializer:xm(this.biasInitializer),kernelRegularizer:xy(this.kernelRegularizer),biasRegularizer:xy(this.biasRegularizer),activityRegularizer:xy(this.activityRegularizer),kernelConstraint:mf(this.kernelConstraint),biasConstraint:mf(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}cb.className="Dense",Qs(cb);class hb extends zm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Tm(e);for(const t of e.slice(1))if(null==t)throw new Bd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Rf(e,1)]}call(e,t){return ra((()=>{this.invokeCallHook(e,t);let n=Em(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Bd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Rf(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}hb.className="Flatten",Qs(hb);class pb extends zm{constructor(e){super(e),this.supportsMasking=!0,this.activation=my(e.activation)}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e);return this.activation.apply(n)}))}getConfig(){const e={activation:dy(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}pb.className="Activation",Qs(pb);class db extends zm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ra((()=>{return e=Em(e),t=e,n=this.n,ra((()=>{if(2!==t.shape.length)throw new Bd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Hf(zf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}db.className="RepeatVector",Qs(db);class fb extends zm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Bd("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Rf(e);if(null!==a){if(0===s||i%s!=0)throw new Bd(n);r[a]=i/s}else if(i!==s)throw new Bd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}fb.className="Reshape",Qs(fb);class mb extends zm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=Mf(1,e.dims.length+1);if(!F(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Dm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Tm(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return va(Em(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}mb.className="Permute",Qs(mb);class gb extends zm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Em(e);return Ia(Gi(n,this.maskValue),-1)}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e),r=Ia(Gi(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}gb.className="Masking",Qs(gb);class yb extends zm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(jd(e.inputLength))}this.inputDim=e.inputDim,sf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,sf(this.outputDim,"outputDim"),this.embeddingsInitializer=wm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vy(e.embeddingsRegularizer),this.activityRegularizer=vy(e.activityRegularizer),this.embeddingsConstraint=yf(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ra((()=>this.maskZero?(e=Em(e),Gi(e,Xi(e))):null))}computeOutputShape(e){if(e=Tm(e),null==this.inputLength)return[...e,this.outputDim];const t=jd(this.inputLength);if(t.length!==e.length-1)throw new Bd(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Bd(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ra((()=>{this.invokeCallHook(e,t);let n=Em(e);return"int32"!==n.dtype&&(n=Lf(n,"int32")),qf(this.embeddings.read(),n.as1D()).reshape(Tm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xm(this.embeddingsInitializer),embeddingsRegularizer:xy(this.embeddingsRegularizer),activityRegularizer:xy(this.activityRegularizer),embeddingsConstraint:mf(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}yb.className="Embedding",Qs(yb);class bb extends zm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pd}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Bd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Tm(e)]),(e=e).length<2)throw new Bd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ef(t),t.length>1)throw new Bd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ef(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ra((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Of(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=zf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(Rf(e.slice(1))));i=va(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=Mf(1,e).concat([0]);t.push(va(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=va(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Mf(0,s-1));r=va(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ef(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ra((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Bd("`mask` should be an Array");if(!Array.isArray(e))throw new Bd("`inputs` should be an Array");if(t.length!==e.length)throw new Bd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:di(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Fi(n,t[e]);return n}))}}class xb extends bb{constructor(e){super(e)}mergeFunction(e){return ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ha(t,e[n]);return t}))}}xb.className="Add",Qs(xb);class wb extends bb{constructor(e){super(e)}mergeFunction(e){return ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ei(t,e[n]);return t}))}}wb.className="Multiply",Qs(wb);class vb extends bb{constructor(e){super(e)}mergeFunction(e){return ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ha(t,e[n]);return Ei(1/e.length,t)}))}}vb.className="Average",Qs(vb);class kb extends bb{constructor(e){super(e)}mergeFunction(e){return ra((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ci(t,e[n]);return t}))}}kb.className="Maximum",Qs(kb);class Ib extends bb{constructor(e){super(e)}mergeFunction(e){return ra((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Wi(t,e[n]);return t}))}}Ib.className="Minimum",Qs(Ib);class Nb extends bb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Bd("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(F(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Bd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ra((()=>Vf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Bd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Bd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Bd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Bd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ra((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Yi(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(di(t[n],-1)):r.push(t[n]);const s=Ka(r,this.axis);return ka(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Sb(e,t){for(;e<0;)e+=t;return e}Nb.className="Concatenate",Qs(Nb);class Cb extends bb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Bd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Bd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Sb(t,e[n].shape.length))):[Sb(this.axes,n.shape.length),Sb(this.axes,r.shape.length)],this.normalize&&(n=Qm(n,t[0]),r=Qm(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pd("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length)),A(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Pd("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ra((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Sb(this.axes,e.length),Sb(this.axes,t.length)],n}computeOutputShape(e){A(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Cb.className="Dot",Qs(Cb);class Eb extends zm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e);return Zf((()=>Gf(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}Eb.className="GaussianNoise",Qs(Eb);class Tb extends zm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ra((()=>{this.invokeCallHook(e,t);const n=Em(e);return this.rate>0&&this.rate<1?Zf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Gf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Tb.className="GaussianDropout",Qs(Tb);class Ab extends zm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Em(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ra((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Zf((()=>{const t=Em(e),r=-1.7580993408473766;let s=Si(ro(n),this.rate);s=Lf(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>Em(e)),t.training||!1)}return e}))}}function _b(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Va(e,t,n,r,s,a);else if(3===e.rank)i=Ua(e,t,n,r,s,a);else{if(4!==e.rank)throw new Pd(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ha(e,t,n,r,s,a)}return i}Ab.className="AlphaDropout",Qs(Ab);class $b extends zm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wm(e.betaInitializer||"zeros"),this.gammaInitializer=wm(e.gammaInitializer||"ones"),this.movingMeanInitializer=wm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wm(e.movingVarianceInitializer||"ones"),this.betaConstraint=yf(e.betaConstraint),this.gammaConstraint=yf(e.gammaConstraint),this.betaRegularizer=vy(e.betaRegularizer),this.gammaRegularizer=vy(e.gammaRegularizer)}build(e){e=Tm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Bd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new Dm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ra((()=>{const n=null!=t.training&&t.training,r=Em(e),s=r.shape,a=s.length,i=Mf(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Vd(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!F(l,Mf(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return _b(r,e,t,n,s,this.epsilon)}return _b(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,s=.001){return F(r.slice().sort(),Mf(0,e.rank-1))?function(e,t,n,r,s=.001){return ra((()=>{const a=Ui(e,r),i=a.mean,o=a.variance;return[_b(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return ra((()=>{const a=Ui(e,r),i=a.mean,o=a.variance,u=[];for(const t of Mf(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),h=null==t?null:t.reshape(u),p=null==n?null:n.reshape(u);return[_b(e,l,c,p,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ra((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xm(this.betaInitializer),gammaInitializer:xm(this.gammaInitializer),movingMeanInitializer:xm(this.movingMeanInitializer),movingVarianceInitializer:xm(this.movingVarianceInitializer),betaRegularizer:xy(this.betaRegularizer),gammaRegularizer:xy(this.gammaRegularizer),betaConstraint:mf(this.betaConstraint),gammaConstraint:mf(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$b.className="BatchNormalization",Qs($b);class Rb extends zm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=wm(e.betaInitializer||"zeros"),this.gammaInitializer=wm(e.gammaInitializer||"ones"),this.betaRegularizer=vy(e.betaRegularizer),this.gammaRegularizer=vy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Tm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error("Invalid axis: "+e);if(this.axis.length!==ef(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Em(e),r=n.shape,s=r.length;return ra((()=>{let{mean:e,variance:t}=Ui(n,this.axis,!0);const a=Vd(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),_b(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xm(this.betaInitializer),gammaInitializer:xm(this.gammaInitializer),betaRegularizer:xy(this.betaRegularizer),gammaRegularizer:xy(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Rb.className="LayerNormalization",Qs(Rb);class Db extends zm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Bd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Bd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Bd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){let t,n;return e=Tm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ra((()=>{return t=Em(e),n=this.padding,r=this.dataFormat,ra((()=>{if(4!==t.rank)throw new Bd("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Bd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Bd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ji(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Fb(e,t,n,r,s,a){return ra((()=>{let i;If(s),Sf(a),Nf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=$y(e,s);const o="same"===r?"same":"valid";return i="max"===a?Oi(e,t,n,o):za(e,t,n,o),"channelsFirst"===s&&(i=va(i,[0,3,1,2])),i}))}function Ob(e,t,n,r,s,a){return ra((()=>{let i;If(s),Sf(a),Nf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Ry(e,s);const o="same"===r?"same":"valid";return i="max"===a?Mi(e,t,n,o):Ba(e,t,n,o),"channelsFirst"===s&&(i=va(i,[0,4,1,2,3])),i}))}Db.className="ZeroPadding2D",Qs(Db);class Mb extends zm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Bd("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(sf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Bd("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Nf(this.padding),this.inputSpec=[new Dm({ndim:3})]}computeOutputShape(e){const t=Ay((e=Tm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ra((()=>{this.invokeCallHook(e,t),e=zf(Em(e),2);const n=this.poolingFunction(Em(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ko(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Lb extends Mb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Fb(e,t,n,r,s,"max")}}Lb.className="MaxPooling1D",Qs(Lb);class zb extends Mb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Fb(e,t,n,r,s,"avg")}}zb.className="AveragePooling1D",Qs(zb);class Bb extends zm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Bd("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];sf(this.poolSize,"poolSize"),sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,If(this.dataFormat),Nf(this.padding),this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){e=Tm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ay(t,this.poolSize[0],this.padding,this.strides[0]),n=Ay(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ra((()=>(this.invokeCallHook(e,t),this.poolingFunction(Em(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Pb extends Bb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Fb(e,t,n,r,s,"max")}}Pb.className="MaxPooling2D",Qs(Pb);class Wb extends Bb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Fb(e,t,n,r,s,"avg")}}Wb.className="AveragePooling2D",Qs(Wb);class Vb extends zm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Bd("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];sf(this.poolSize,"poolSize"),sf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,If(this.dataFormat),Nf(this.padding),this.inputSpec=[new Dm({ndim:5})]}computeOutputShape(e){e=Tm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ay(t,this.poolSize[0],this.padding,this.strides[0]),n=Ay(n,this.poolSize[1],this.padding,this.strides[1]),r=Ay(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ra((()=>(this.invokeCallHook(e,t),this.poolingFunction(Em(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ub extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Ob(e,t,n,r,s,"max")}}Ub.className="MaxPooling3D",Qs(Ub);class Hb extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return If(s),Nf(r),Ob(e,t,n,r,s,"avg")}}Hb.className="AveragePooling3D",Qs(Hb);class Gb extends zm{constructor(e){super(e),this.inputSpec=[new Dm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pd}}class jb extends Gb{constructor(e){super(e||{})}call(e,t){return ra((()=>{const t=Em(e);return Bi(t,1)}))}}jb.className="GlobalAveragePooling1D",Qs(jb);class qb extends Gb{constructor(e){super(e||{})}call(e,t){return ra((()=>{const t=Em(e);return _i(t,1)}))}}qb.className="GlobalMaxPooling1D",Qs(qb);class Kb extends zm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,If(this.dataFormat),this.inputSpec=[new Dm({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pd}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Xb extends Kb{call(e,t){return ra((()=>{const t=Em(e);return"channelsLast"===this.dataFormat?Bi(t,[1,2]):Bi(t,[2,3])}))}}Xb.className="GlobalAveragePooling2D",Qs(Xb);class Yb extends Kb{call(e,t){return ra((()=>{const t=Em(e);return"channelsLast"===this.dataFormat?_i(t,[1,2]):_i(t,[2,3])}))}}Yb.className="GlobalMaxPooling2D",Qs(Yb);class Jb extends zm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Zm(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Zb extends Jb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Tm(e)).length<3)throw new Bd("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Tm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ra((()=>jy(((e,n)=>[Em(this.layer.call(e,t)),[]]),e=Em(e),[],!1,null,null,!1,!0)[1]))}}Zb.className="TimeDistributed",Qs(Zb);class Qb extends Jb{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Zm(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Zm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,nf(vf,"BidirectionalMergeMode",s),e.weights)throw new Pd("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Gd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Gy(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Bd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Dm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Pd("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Fm;for(const e of a)if(e instanceof Fm!==o)throw new Bd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ra((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=oo(s,1)),"concat"===this.mergeMode?i=Vf([r,s]):"sum"===this.mergeMode?i=ha(r,s):"ave"===this.mergeMode?i=Ei(.5,ha(r,s)):"mul"===this.mergeMode?i=Ei(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ef(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ef(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Zm(t.layer);if(delete t.layer,null!=t.numConstants)throw new Pd("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Qb.className="Bidirectional",Qs(Qb),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(rb||(rb={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(sb||(sb={}));const ex={};function tx(e){return ex[e]}function nx(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return rx(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>rx(e,n,r,s)));const o=rx(t.inputNames.slice(e)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:ee(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function rx(e,t,n,r){const[s,a]=ix(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[ax(s,e)]));return void 0!==i?t[ax(s,i)][a]:void 0}function sx(e,t){const[n,r]=ix(e);return[ax(n,t&&t.currentContextId),r]}function ax(e,t){return t?`${e}-${t}`:e}function ix(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function ox(e,t,n){let r=nx("pad",e,t,n);if("explicit"===r){r=nx("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function ux(e){return e.kept?e:ws(e)}const lx=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cx=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hx=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],px=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],dx=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],fx=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mx=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],gx=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],yx=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],bx=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],xx=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wx=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vx=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],kx=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ix=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Nx=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Sx=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Cx{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[s,a,i,o,u,l,c,f,d,h,m,g,y,b,x,w,p].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=sx(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=sx(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=sx(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=tx(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s=void 0;switch(n.type){case"string":s=Tx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Tx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=zx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=zx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=_x(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=_x(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Lx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Lx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Ax(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ax(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Px(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Px(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=Mx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Mx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Bx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Bx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Dx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Dx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=Fx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Fx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Rx(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Rx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=sx(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:$x(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=sx(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=sx(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Ex(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=le().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Tx(e,t,n,r=!1){const s=e[t];return null!=s?Ex(s.s,r):n}function Ax(e,t,n){const r=e[t];return r?r.b:n}function _x(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function $x(e){switch("string"==typeof e&&(e=rb[e]),e){case rb.DT_FLOAT:return"float32";case rb.DT_INT32:case rb.DT_INT64:case rb.DT_INT8:case rb.DT_UINT8:return"int32";case rb.DT_BOOL:return"bool";case rb.DT_DOUBLE:return"float32";case rb.DT_STRING:return"string";default:return null}}function Rx(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Dx(e,t,n){const r=e[t];return r&&r.type?$x(r.type):n}function Fx(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>$x(e))):n}function Ox(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Mx(e,t,n){const r=e[t];return r&&r.shape?Ox(r.shape):n}function Lx(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function zx(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>Ex(e,r))):n}function Bx(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Ox(e))):n}function Px(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Wx{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return rx(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return rx(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return _x(this.node.rawAttrs,e,t);if(null!=n.s)return Tx(this.node.rawAttrs,e,t);if(null!=n.b)return Ax(this.node.rawAttrs,e,t);if(null!=n.shape)return Mx(this.node.rawAttrs,e,t);if(null!=n.type)return Dx(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Lx(this.node.rawAttrs,e,t);if(null!=n.list.s)return zx(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Bx(this.node.rawAttrs,e,t);if(null!=n.list.b)return Px(this.node.rawAttrs,e,t);if(null!=n.list.type)return Fx(this.node.rawAttrs,e,t)}return t}}const Vx=Or({addN_:function(e){A(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),A(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+e.length));const t=e.map(((e,t)=>Dr(e,"tensors"+t,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!F(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Cr.runKernelFunc(((e,n)=>{const r=e.addN(t);return n(t),r}),r,null,be)}});function Ux(e,t,n=""){A(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class Hx{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ua(0),aa(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Ux(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,aa(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return zr([],[0].concat(this.elementShape));const n=this.readMany(e);return Ux(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Io(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return zr([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Ux(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ka(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,To(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];ra((()=>{t=wa(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=wa(ho(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class Gx{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Ux(t,e.shape,"TensorList shape mismatch: "),aa(e)})),this.idTensor=ua(0),this.maxNumElements=r,aa(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Gx([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Ux(e,this.elementShape,"TensorList shape mismatch: "),ra((()=>{const t=this.tensors.map((t=>wa(t,e)));return Io(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Ux(n.shape,e,"TensorList shape mismatch: "),wa(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ux(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");aa(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return Ux(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ux(this.elementShape,t.shape,"TensorList shape mismatch: "),aa(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return Ux(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?zr([],[0].concat(this.elementShape)):ra((()=>{const t=e.map((e=>wa(this.tensors[e],n)));return Io(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return Ux(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?zr([],[0].concat(this.elementShape)):ra((()=>{const e=this.tensors.map((e=>wa(e,t)));return Ka(e,0)}))}}const jx=Or({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Dr(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Cr.runKernel(Ft,a,i);return{result:o[0],indexes:o[1]}}});function qx(e,t,n){const[r,s]=nx("fusedOps",e,t,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=nx("numArgs",e,t,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=nx("strides",e,t,n),c=ox(e,t,n),h=nx("dataFormat",e,t,n).toUpperCase(),p=nx("dilations",e,t,n),[d,f]=nx("args",e,t,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s}}function Kx(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Cr.runKernelFunc((r=>r.linspace(e,t,n)),{},null,"LinSpace",r)}const Xx=Or({multinomial_:function(e,t,n,r=!1){const s=Dr(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?wa(s,[1,-1]):s,u=Cr.runKernelFunc((e=>e.multinomial(o,r,t,n)),{logits2D:o});return 1===i?wa(u,[u.size]):u}}),Yx=async function(e){const t=Dr(e,"condition","whereAsync","bool"),n=await t.data(),r=bl(t.shape,n);return e!==t&&t.dispose(),r};function Jx(e,t,n){return{boxes:nx("boxes",e,t,n),scores:nx("scores",e,t,n),maxOutputSize:nx("maxOutputSize",e,t,n),iouThreshold:nx("iouThreshold",e,t,n),scoreThreshold:nx("scoreThreshold",e,t,n),softNmsSigma:nx("softNmsSigma",e,t,n)}}class Zx{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ua(0),this.tensorMap=new Map,aa(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ra((()=>{const e=To(t),r=n.length,s=e.length;A(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];aa(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ra((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Io(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}const Qx=Or({sparseToDense_:function(e,t,n,r=0){const s=Dr(e,"sparseIndices","sparseToDense","int32"),a=Dr(t,"sparseValues","sparseToDense"),i=Dr(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return Cr.runKernelFunc((e=>e.sparseToDense(s,a,n,i)),o,null,"SparseToDense",u)}}),ew=Or({scatterND_:function(e,t,n){const r=Dr(e,"indices","scatterND","int32"),s=Dr(t,"updates","scatterND");Fs(s,r,n);const a={indices:r,updates:s},i={shape:n};return Cr.runKernelFunc((e=>e.scatterND(r,s,n)),a,null,on,i)}}),tw=Or({gatherND_:function(e,t){const n=Dr(t,"indices","gatherND","int32"),r=Dr(e,"x","gatherND"),s={params:r,indices:n};return Cr.runKernelFunc((e=>e.gatherND(r,n)),s,null,dt)}});function nw(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return ra((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ha(nx("a",e,t,n),nx("b",e,t,n))];case"AddN":return[Vx(nx("tensors",e,t,n))];case"FloorMod":case"Mod":return[yh(nx("a",e,t,n),nx("b",e,t,n))];case"Mul":return[Ei(nx("a",e,t,n),nx("b",e,t,n))];case"RealDiv":case"Div":return[ii(nx("a",e,t,n),nx("b",e,t,n))];case"DivNoNan":return[Mh(nx("a",e,t,n),nx("b",e,t,n))];case"FloorDiv":return[ai(nx("a",e,t,n),nx("b",e,t,n))];case"Sub":return[$i(nx("a",e,t,n),nx("b",e,t,n))];case"Minimum":return[Wi(nx("a",e,t,n),nx("b",e,t,n))];case"Maximum":return[Ci(nx("a",e,t,n),nx("b",e,t,n))];case"Pow":return[bu(nx("a",e,t,n),nx("b",e,t,n))];case"SquaredDifference":return[Cu(nx("a",e,t,n),nx("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return ra((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[ca(nx("x",e,t,n))];case"Acos":return[mh(nx("x",e,t,n))];case"Acosh":return[gh(nx("x",e,t,n))];case"Asin":return[Th(nx("x",e,t,n))];case"Asinh":return[Ah(nx("x",e,t,n))];case"Atan":return[_h(nx("x",e,t,n))];case"Atan2":return[$h(nx("x",e,t,n),nx("y",e,t,n))];case"Atanh":return[Rh(nx("x",e,t,n))];case"Ceil":return[Dh(nx("x",e,t,n))];case"Complex":return[Mr(nx("real",e,t,n),nx("imag",e,t,n))];case"Cos":return[sh(nx("x",e,t,n))];case"Cosh":return[ih(nx("x",e,t,n))];case"Elu":return[oi(nx("x",e,t,n))];case"Erf":return[Hh(nx("x",e,t,n))];case"Exp":return[pi(nx("x",e,t,n))];case"Expm1":return[Gh(nx("x",e,t,n))];case"Floor":return[yi(nx("x",e,t,n))];case"Log":return[Ai(nx("x",e,t,n))];case"Log1p":return[Eu(nx("x",e,t,n))];case"Imag":return[qi(nx("x",e,t,n))];case"Neg":return[Hi(nx("x",e,t,n))];case"Reciprocal":return[np(nx("x",e,t,n))];case"Real":return[Ki(nx("x",e,t,n))];case"Relu":return[io(nx("x",e,t,n))];case"Round":return[rp(nx("x",e,t,n))];case"Selu":return[uo(nx("x",e,t,n))];case"Sigmoid":return[co(nx("x",e,t,n))];case"Sin":return[Kl(nx("x",e,t,n))];case"Sign":return[sp(nx("x",e,t,n))];case"Sinh":return[Yl(nx("x",e,t,n))];case"Softplus":return[bo(nx("x",e,t,n))];case"Sqrt":return[vo(nx("x",e,t,n))];case"Square":return[Vi(nx("x",e,t,n))];case"Tanh":return[No(nx("x",e,t,n))];case"Tan":return[ip(nx("x",e,t,n))];case"Relu6":case"ClipByValue":return[Ga(nx("x",e,t,n),nx("clipValueMin",e,t,n),nx("clipValueMax",e,t,n))];case"Rsqrt":return[lc(rx(e.inputNames[0],t,n))];case"Prod":return[tp(nx("x",e,t,n),nx("axes",e,t,n))];case"LeakyRelu":return[Ti(nx("x",e,t,n),nx("alpha",e,t,n))];case"Prelu":return[Zi(nx("x",e,t,n),nx("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=nx("thenBranch",e,t,n),s=nx("elseBranch",e,t,n),a=nx("cond",e,t,n),i=nx("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=nx("body",e,t,n),s=nx("cond",e,t,n),a=nx("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[ux(nx("pred",e,t,n))];case"Switch":{const r=nx("pred",e,t,n);let s=nx("data",e,t,n);return s.kept||(s=ux(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==rx(e,t,n)));return r?[ux(rx(r,t,n))]:void 0}case"Enter":{const r=nx("frameName",e,t,n),s=nx("tensor",e,t,n);return n.enterFrame(r),[ux(s)]}case"Exit":{const r=nx("tensor",e,t,n);return n.exitFrame(),[ux(r)]}case"NextIteration":{const r=nx("tensor",e,t,n);return n.nextIteration(),[ux(r)]}case"TensorArrayV3":{const r=nx("size",e,t,n),s=nx("dtype",e,t,n),a=nx("elementShape",e,t,n),i=nx("dynamicSize",e,t,n),o=nx("clearAfterRead",e,t,n),u=nx("identicalElementShapes",e,t,n),l=nx("name",e,t,n),c=new Hx(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,ua(1)]}case"TensorArrayWriteV3":{const r=nx("tensorArrayId",e,t,n),s=nx("index",e,t,n),a=nx("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=nx("tensorArrayId",e,t,n),s=nx("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=nx("tensorArrayId",e,t,n),s=nx("indices",e,t,n),a=nx("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=nx("tensorArrayId",e,t,n),s=nx("indices",e,t,n),a=nx("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=nx("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=nx("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=nx("tensorArrayId",e,t,n),s=nx("tensor",e,t,n),a=nx("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=nx("tensorArrayId",e,t,n);return[ua(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=nx("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=nx("tensorListId",e,t,n),s=nx("index",e,t,n),a=nx("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=nx("tensorListId",e,t,n),s=nx("index",e,t,n),a=nx("elementShape",e,t,n),i=nx("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=nx("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Gx([],n,e.dtype,r),i=To(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(nx("tensor",e,t,n),r,nx("elementShape",e,t,n),nx("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":{const i=(r=nx("elementShape",e,t,n),s=nx("elementDType",e,t,n),a=nx("numElements",e,t,n),new Gx([],r,s,a));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=nx("tensorListId",e,t,n),s=nx("indices",e,t,n),a=nx("elementShape",e,t,n),i=nx("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=nx("tensorListId",e,t,n),s=nx("elementShape",e,t,n),a=nx("elementDType",e,t,n),i=nx("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Ux(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=To(e);return new Gx(s,t,r)}(nx("tensor",e,t,n),nx("elementShape",e,t,n),nx("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=nx("tensorListId",e,t,n),s=n.getTensorList(r.id),a=nx("dtype",e,t,n),i=nx("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=nx("tensorListId",e,t,n),s=nx("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=nx("tensorListId",e,t,n),s=nx("elementShape",e,t,n),a=nx("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=nx("tensor",e,t,n),s=nx("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=0===r?0:e.size/r,i=ra((()=>{const i=[];e=wa(e,[1,r,a]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],a];i[r]=wa(ho(e,o,u),n)}return e.dispose(),i})),o=new Gx([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(r,nx("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}var r,s,a})(e,t,n);case"convolution":return ra((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=nx("stride",e,t,n),s=nx("pad",e,t,n),a=nx("dataFormat",e,t,n).toUpperCase(),i=nx("dilation",e,t,n);return[ei(nx("x",e,t,n),nx("filter",e,t,n),r,s,a,i)]}case"Conv2D":{const r=nx("strides",e,t,n),s=ox(e,t,n),a=nx("dataFormat",e,t,n).toUpperCase(),i=nx("dilations",e,t,n);return[Qa(nx("x",e,t,n),nx("filter",e,t,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=qx(e,t,n);return[Uo({x:nx("x",e,t,n),filter:nx("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=qx(e,t,n);return[jo({x:nx("x",e,t,n),filter:nx("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=nx("outputShape",e,t,n),s=nx("strides",e,t,n),a=ox(e,t,n);return[ni(nx("x",e,t,n),nx("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=nx("strides",e,t,n),s=ox(e,t,n),a=nx("dilations",e,t,n),i=nx("dataFormat",e,t,n).toUpperCase();return[si(nx("input",e,t,n),nx("filter",e,t,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("dataFormat",e,t,n).toUpperCase(),i=nx("dilations",e,t,n);return[ri(nx("x",e,t,n),nx("filter",e,t,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("kernelSize",e,t,n);return[za(nx("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("kernelSize",e,t,n);return[Oi(nx("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("kernelSize",e,t,n),i=nx("includeBatchInIndex",e,t,n),{result:o,indexes:u}=jx(nx("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("kernelSize",e,t,n);return[Ba(nx("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("kernelSize",e,t,n);return[Mi(nx("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=nx("strides",e,t,n),s=nx("pad",e,t,n),a=nx("dilations",e,t,n),i=r[1],o=r[2],u=a[1],l=a[2];return[Oh(nx("x",e,t,n),nx("filter",e,t,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return ra((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=nx("shape",e,t,n),s=nx("dtype",e,t,n);return[gi(r,nx("value",e,t,n),s)]}case"LinSpace":return[Kx(nx("start",e,t,n),nx("stop",e,t,n),nx("num",e,t,n))];case"Multinomial":{const r=nx("logits",e,t,n),s=nx("numSamples",e,t,n),a=nx("seed",e,t,n);return[Xx(r,s,a)]}case"OneHot":{const r=nx("indices",e,t,n),s=nx("depth",e,t,n),a=nx("onValue",e,t,n),i=nx("offValue",e,t,n);return[ji(r,s,a,i)]}case"Ones":return[zi(nx("shape",e,t,n),nx("dtype",e,t,n))];case"OnesLike":return[Yi(nx("x",e,t,n))];case"RandomUniform":return[ro(nx("shape",e,t,n),nx("minval",e,t,n),nx("maxval",e,t,n),nx("dtype",e,t,n))];case"Range":return[ao(nx("start",e,t,n),nx("stop",e,t,n),nx("step",e,t,n),nx("dtype",e,t,n))];case"TruncatedNormal":{const r=nx("shape",e,t,n),s=nx("mean",e,t,n),a=nx("stdDev",e,t,n),i=nx("seed",e,t,n);return[Eo(r,s,a,nx("dtype",e,t,n),i)]}case"Zeros":return[Li(nx("shape",e,t,n),nx("dtype",e,t,n))];case"ZerosLike":return[Xi(nx("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Jx(e,t,n),l=await Au.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Jx(e,t,n),u=nx("padToMaxOutputSize",e,t,n),l=await Au.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Jx(e,t,n);return[await Au.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=xs(nx("condition",e,t,n),"bool"),s=[await Yx(r)];return r.dispose(),s}case"ListDiff":return async function(e,t){const n=Dr(e,"x","setdiff1d"),r=Dr(t,"y","setdiff1d");A(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),A(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),A(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new ar([o],n.dtype),l=new ar([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}(nx("x",e,t,n),nx("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return ra((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=nx("x",e,t,n),s=nx("k",e,t,n),a=nx("sorted",e,t,n),i=op(r,s,a);return[i.values,i.indices]}case"Unique":{const r=nx("x",e,t,n),s=up(r);return[s.values,s.indices]}case"UniqueV2":{const r=nx("x",e,t,n),s=nx("axis",e,t,n),a=up(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return ra((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=nx("images",e,t,n),s=nx("size",e,t,n),a=nx("alignCorners",e,t,n);return[Au.resizeBilinear(r,[s[0],s[1]],a)]}case"ResizeNearestNeighbor":{const r=nx("images",e,t,n),s=nx("size",e,t,n),a=nx("alignCorners",e,t,n);return[Au.resizeNearestNeighbor(r,[s[0],s[1]],a)]}case"CropAndResize":{const r=nx("image",e,t,n),s=nx("boxes",e,t,n),a=nx("boxInd",e,t,n),i=nx("cropSize",e,t,n),o=nx("method",e,t,n),u=nx("extrapolationValue",e,t,n);return[Au.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return ra((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=nx("default",e,t,n);return[rx(e.name,t,n)||r];case"Placeholder":return[rx(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[ux(nx("x",e,t,n))];case"IdentityN":return nx("x",e,t,n).map((e=>ux(e)));case"Snapshot":return[ux(nx("x",e,t,n))];case"Shape":return[so(nx("x",e,t,n).shape,"int32")];case"ShapeN":return nx("x",e,t,n).map((e=>so(e.shape)));case"Size":return[ua(nx("x",e,t,n).size,"int32")];case"Rank":return[ua(nx("x",e,t,n).rank,"int32")];case"NoOp":return[ua(1)];case"Print":const s=nx("x",e,t,n),a=nx("data",e,t,n),i=nx("message",e,t,n),o=nx("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return ra((()=>((e,t,n)=>{switch(e.op){case"Equal":return[hi(nx("a",e,t,n),nx("b",e,t,n))];case"NotEqual":return[Gi(nx("a",e,t,n),nx("b",e,t,n))];case"Greater":return[Ni(nx("a",e,t,n),nx("b",e,t,n))];case"GreaterEqual":return[Si(nx("a",e,t,n),nx("b",e,t,n))];case"Less":return[Ec(nx("a",e,t,n),nx("b",e,t,n))];case"LessEqual":return[gu(nx("a",e,t,n),nx("b",e,t,n))];case"LogicalAnd":return[Fi(nx("a",e,t,n),nx("b",e,t,n))];case"LogicalNot":return[Qc(nx("a",e,t,n))];case"LogicalOr":return[Jh(nx("a",e,t,n),nx("b",e,t,n))];case"Select":case"SelectV2":return[_o(nx("condition",e,t,n),nx("a",e,t,n),nx("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return ra((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[qo(nx("a",e,t,n),nx("b",e,t,n),nx("transposeA",e,t,n),nx("transposeB",e,t,n))];case"Transpose":return[va(nx("x",e,t,n),nx("perm",e,t,n))];case"_FusedMatMul":const[r,s]=nx("fusedOps",e,t,n),a="biasadd"===r,i="prelu"===s,o=nx("numArgs",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=nx("args",e,t,n);return[Ko({a:nx("a",e,t,n),b:nx("b",e,t,n),transposeA:nx("transposeA",e,t,n),transposeB:nx("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return ra((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Wa(nx("x",e,t,n),nx("mean",e,t,n),nx("variance",e,t,n),nx("offset",e,t,n),nx("scale",e,t,n),nx("epsilon",e,t,n))];case"LRN":return[Xh(nx("x",e,t,n),nx("radius",e,t,n),nx("bias",e,t,n),nx("alpha",e,t,n),nx("beta",e,t,n))];case"Softmax":return[yo(nx("x",e,t,n))];case"LogSoftmax":return[Di(nx("x",e,t,n))];case"SparseToDense":return[Qx(nx("sparseIndices",e,t,n),nx("outputShape",e,t,n),nx("sparseValues",e,t,n),nx("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return ra((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[_i(nx("x",e,t,n),r,s)]}case"Mean":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[Bi(nx("x",e,t,n),r,s)]}case"Min":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[Pi(nx("x",e,t,n),r,s)]}case"Sum":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[Ri(nx("x",e,t,n),r,s)]}case"All":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[ka(nx("x",e,t,n),r,s)]}case"Any":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[Ia(nx("x",e,t,n),r,s)]}case"ArgMax":{const r=nx("axis",e,t,n);return[Na(nx("x",e,t,n),r)]}case"ArgMin":{const r=nx("axis",e,t,n);return[Eh(nx("x",e,t,n),r)]}case"Prod":{const r=nx("axis",e,t,n),s=nx("keepDims",e,t,n);return[tp(nx("x",e,t,n),r,s)]}case"Cumsum":{const r=nx("axis",e,t,n),s=nx("exclusive",e,t,n),a=nx("reverse",e,t,n);return[Zl(nx("x",e,t,n),r,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return ra((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=nx("n",e,t,n),s=nx("axis",e,t,n);let a=nx("tensors",e,t,n);return a=a.slice(0,r),[Ka(a,s)]}case"GatherV2":case"Gather":{const r=nx("axis",e,t,n),s=nx("x",e,t,n),a=nx("indices",e,t,n);return[Ii(s,xs(a,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=nx("axis",e,t,n),s=nx("x",e,t,n);return[oo(s,r)]}case"Slice":{const r=nx("begin",e,t,n),s=nx("size",e,t,n);return[ho(nx("x",e,t,n),r,s)]}case"StridedSlice":{const r=nx("begin",e,t,n),s=nx("end",e,t,n),a=nx("strides",e,t,n),i=nx("beginMask",e,t,n),o=nx("endMask",e,t,n),u=nx("ellipsisMask",e,t,n),l=nx("newAxisMask",e,t,n),c=nx("shrinkAxisMask",e,t,n),h=nx("x",e,t,n);return[ap(h,r,s,a,i,o,u,l,c)]}case"Pack":return ra((()=>{const r=nx("axis",e,t,n),s=nx("tensors",e,t,n),a=s[0].shape,i=ko(s[0]).shape,o=s.map((e=>{const t=F(e.shape,a);if(!t&&!F(ko(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:wa(e,a)}));return[Io(o,r)]}));case"Unpack":{const r=nx("axis",e,t,n),s=nx("tensor",e,t,n);return To(s,r)}case"Tile":{const r=nx("reps",e,t,n);return[fi(nx("x",e,t,n),r)]}case"Split":case"SplitV":{const r=nx("axis",e,t,n),s=nx("numOrSizeSplits",e,t,n),a=nx("x",e,t,n);return wo(a,s,r)}case"ScatterNd":{const r=nx("indices",e,t,n),s=nx("values",e,t,n),a=nx("shape",e,t,n);return[ew(r,s,a)]}case"GatherNd":{const r=nx("x",e,t,n),s=nx("indices",e,t,n);return[tw(r,s)]}case"SparseToDense":{const r=nx("sparseIndices",e,t,n),s=nx("outputShape",e,t,n),a=nx("sparseValues",e,t,n),i=nx("defaultValue",e,t,n);return[Qx(r,a,s,a.dtype===i.dtype?i:xs(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return ra((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ro(nx("x",e,t,n))];case"IFFT":return[Fo(nx("x",e,t,n))];case"RFFT":return[Do(nx("x",e,t,n))];case"IRFFT":return[Oo(nx("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return ra((()=>((e,t,n)=>{switch(e.op){case"Cast":return[xs(nx("x",e,t,n),nx("dtype",e,t,n))];case"ExpandDims":{const r=nx("axis",e,t,n);return[di(nx("x",e,t,n),r)]}case"Squeeze":{const r=nx("axis",e,t,n);return[ko(nx("x",e,t,n),r)]}case"Reshape":return[wa(nx("x",e,t,n),nx("shape",e,t,n))];case"MirrorPad":return[Qh(nx("x",e,t,n),nx("padding",e,t,n),nx("mode",e,t,n))];case"PadV2":case"Pad":return[Ji(nx("x",e,t,n),nx("padding",e,t,n),nx("constantValue",e,t,n))];case"SpaceToBatchND":{const r=nx("blockShape",e,t,n),s=nx("paddings",e,t,n);return[Ml(nx("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=nx("blockShape",e,t,n),s=nx("crops",e,t,n);return[hh(nx("x",e,t,n),r,s)]}case"DepthToSpace":{const r=nx("blockSize",e,t,n),s=nx("dataFormat",e,t,n).toUpperCase();return[Fh(nx("x",e,t,n),r,s)]}case"BroadcastTo":return[Ao(nx("x",e,t,n),nx("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=nx("keyDType",e,t,n),a=nx("valueDType",e,t,n),i=new Zx(s,a);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=nx("tableHandle",e,t,n,r),a=nx("keys",e,t,n),i=nx("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=nx("tableHandle",e,t,n,r),a=nx("keys",e,t,n),i=nx("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=tx(e.op);if(s&&s.customExecutor)return s.customExecutor(new Wx(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return oe(s)?s.then((e=>[].concat(e))):[].concat(s)}class rw{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function sw(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>ix(e)[0]));let c=[];null!=r&&(c=r.map((e=>ix(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(uw(e)||lw(e)||cw(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const aw=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],iw=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ow=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function uw(e){return aw.indexOf(e.op)>=0}function lw(e){return iw.indexOf(e.op)>=0}function cw(e){return ow.indexOf(e.op)>=0}class hw{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new hw(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=sw(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((e=>ix(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[ix(e)[0]])),s=t.map((e=>ix(e)[0]));let a=s.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return ra((()=>{const n=new rw(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=ix(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=nw(t,r,n,this._resourceManager);if(oe(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),t.map((e=>rx(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[ax(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!s.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new rw(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>rx(e,i,a))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[ix(e)[0]])),i=n.map((e=>ix(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=sw(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=ix(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!uw(e)&&!rx(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&nx("isConstant",e.node,r,n)&&([c]=sx(e.node.name,n)),null==r[e.node.name]){const h=nw(e.node,r,n,this._resourceManager);c||([c]=sx(e.node.name,n));const p=n.currentContext;oe(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=sx(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!rx(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!rx(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=ix(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;A(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&A(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=ix(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=ix(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class pw{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class dw{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new pw}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=As(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,qr.getLoadHandlers(t,n));if(0===r.length)r.push(As(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=D(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Br[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=jr()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=D(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=Br[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=zr(e,o,"float32"),i=zr(r,o,"float32");n[t]=Mr(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=zr(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hw(Cx.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer){const t=Cx.Instance.transformGraph(e.modelInitializer);this.initializer=new hw(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Kr(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof lr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}function fw(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(bw(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=fw(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,s.value),s.value}function mw(e,t=yw){return gw(e,t)}function gw(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(bw(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=gw(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error("Can't recurse into non-iterable type: "+r)}return s.value}function yw(e){return null===e?null:bw(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function bw(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof lr))}function xw(e){return fw(e,ww)}function ww(e){return e instanceof lr?{value:e.clone(),recurse:!1}:bw(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class vw{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class kw extends vw{constructor(){super(kw.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}kw.INITIAL_CAPACITY=32;class Iw{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Rw(this,e)}filter(e){return new _w(this,e)}map(e){return new $w(this,e)}mapAsync(e){return new Dw(this,e)}serialMapAsync(e){return new Dw(this,e).serial()}flatmap(e){return new Ow(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Aw(this,e,t)}columnMajorBatch(e,t=!0,n=yw){return this.rowMajorBatch(e,t).map((e=>mw(e,n)))}concatenate(e,t){return new Mw(new Nw([this,e]),t)}take(e){return e<0||null==e?this:new Tw(this,e)}skip(e){return e<0||null==e?this:new Ew(this,e)}prefetch(e){return new Bw(this,e)}shuffle(e,t){return new Pw(this,e,t)}serial(){return new Cw(this)}}class Nw extends Iw{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:xw(e),done:!1}}}class Sw extends Iw{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class Cw extends Iw{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ew extends Iw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;sa(e.value)}return this.upstream.next()}}class Tw extends Iw{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Aw extends Iw{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class _w extends Iw{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;sa(e.value)}}}class $w extends Iw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vr(e.value),n=this.transform(e.value),r=vr(n);for(const e of t)wr(e,r)||e.dispose();return{value:n,done:!1}}}class Rw extends Iw{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Dw extends Iw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vr(e.value),n=await this.transform(e.value),r=vr(n);for(const e of t)wr(e,r)||e.dispose();return{value:n,done:!1}}}class Fw extends Iw{constructor(){super(),this.outputQueue=new kw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ow extends Fw{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=vr(e.value),n=this.transform(e.value),r=vr(n);this.outputQueue.pushAll(n);for(const e of t)wr(e,r)||e.dispose();return!0}}class Mw extends Iw{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Lw,zw;(zw=Lw||(Lw={}))[zw.FAIL=0]="FAIL",zw[zw.SHORTEST=1]="SHORTEST",zw[zw.LONGEST=2]="LONGEST";class Bw extends Iw{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new vw(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Pw extends Bw{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Qi.alea(n||nr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ww{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return A(e>0,(()=>"batchSize needs to be positive, but it is\n      "+e)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Vw((async()=>(await n.iterator()).columnMajorBatch(e,t,Uw)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Vw((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Vw((async()=>(await t.iterator()).filter((t=>ra((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Vw((async()=>(await t.iterator()).map((t=>ra((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Vw((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Vw((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Vw((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Sw(s)).take(e),new Mw(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Vw((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Qi.alea(t||nr().toString());return Vw((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Vw((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Vw(e,t=null){return new class extends Ww{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Uw(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof lr||G(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof lr?Io(e):zr(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Hw(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the CPU backend."))}))}Ww.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Gw=au,jw=ml,qw=gl,Kw=yl,Xw=bl;class Yw extends N{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new I(this,ta())}write(e,t,n){this.firstUse&&(this.firstUse=!1,le().get("IS_NODE")&&nl("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&q(n[0])){const s=n.map((e=>rr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?sl(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>sr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return bs(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return ta().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=nr();return e(),{kernelMs:nr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(e,t,n,r){Hw(e,"stridedSlice");const s=zs(t,n,r);if(s.some((e=>0===e)))return zr([],s);const a=bs(s,e.dtype),i=this.bufferSync(e);for(let e=0;e<a.size;e++){const n=a.indexToLoc(e),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[e]*r[e]+t[e];a.set(i.get(...s),...n)}return a.toTensor()}diag(e){const t=this.readSync(e.dataId),n=bs([e.size,e.size],e.dtype),r=n.values;for(let n=0;n<t.length;n++)r[n*e.size+n]=t[n];return n.toTensor()}unstack(e,t){const n=e.shape[t],r=new Array(e.rank-1);let s=0;for(let n=0;n<e.rank;n++)n!==t&&(r[s++]=e.shape[n]);const a=new Array(e.rank).fill(0),i=e.shape.slice();i[t]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[t]=n,o[n]=ho(e,a,i).reshape(r);return o}reverse(e,t){Hw(e,"reverse");const n=bs(e.shape,e.dtype),r=this.bufferSync(e);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();t.forEach((t=>i[t]=e.shape[t]-1-i[t])),n.set(r.get(...i),...a)}return n.toTensor()}neg(e){return Hw(e,"neg"),Ei(ua(-1),e)}addN(e){Hw(e,"addN");const t=e.map((e=>this.readSync(e.dataId))),n=bs(e[0].shape,e[0].dtype),r=n.values;for(let n=0;n<e.length;n++){const e=t[n];for(let t=0;t<r.length;t++)r[t]+=e[t]}return n.toTensor()}softmax(e,t){const n=P([t],e.shape),r=_i(e,n),s=ma(r.shape,n),a=$i(e,r.reshape(s)),i=pi(a),o=this.sum(i,n).reshape(s);return ii(i,o)}pow(e,t){return Hw([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.pow(e,t)))}floorDiv(e,t){return Hw([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",((e,t)=>Math.floor(e/t)))}sum(e,t){Hw(e,"sum"),ga("sum",t,e.rank);const[n,r]=fa(e.shape,t),s=Li(n,yr(e.dtype,"int32")),a=D(r),i=this.readSync(s.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*a;let n=0;for(let e=0;e<a;++e)n+=o[t+e];i[e]=n}return s}prod(e,t){Hw(e,"sum");const[n,r]=fa(e.shape,t),s=Li(n,yr(e.dtype,"int32")),a=D(r),i=this.readSync(s.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*a;let n=1;for(let e=0;e<a;++e)n*=o[t+e];i[e]=n}return s}unsortedSegmentSum(e,t,n){Hw(e,"unsortedSegmentSum");const r=[],s=e.rank-t.rank;for(let e=0;e<s;++e)t=t.expandDims(e+1);for(let s=0;s<n;++s){const n=ua(s,"int32"),a=hi(n,t).asType("float32").mul(e).sum(0);r.push(a)}return Io(r)}argMin(e,t){Hw(e,"argMin");const n=[t];ga("argMin",n,e.rank);const[r,s]=fa(e.shape,n),a=Li(r,"int32"),i=D(s),o=this.readSync(a.dataId),u=this.readSync(e.dataId);for(let e=0;e<o.length;++e){const t=e*i;let n=u[t],r=0;for(let e=0;e<i;++e){const s=u[t+e];s<n&&(n=s,r=e)}o[e]=r}return a}argMax(e,t){Hw(e,"argMax");const n=[t];ga("argMax",n,e.rank);const[r,s]=fa(e.shape,n),a=Li(r,"int32"),i=D(s),o=this.readSync(a.dataId),u=this.readSync(e.dataId);for(let e=0;e<o.length;++e){const t=e*i;let n=u[t],r=0;for(let e=0;e<i;++e){const s=u[t+e];s>n&&(n=s,r=e)}o[e]=r}return a}cumsum(e,t,n,r){if(Hw(e,"cumsum"),t!==e.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${e.rank-1} but got axis=`+t);const s=yr(e.dtype,"int32"),a=Li(e.shape,s),i=this.readSync(a.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?(e,t)=>e+u-t-1:(e,t)=>e+t;for(let e=0;e<o.length;e+=u)for(let t=0;t<u;t++){const r=l(e,t);if(0===t)i[r]=n?0:o[r];else{const s=l(e,t-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(e,t){return Hw([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e===t?1:0))}notEqual(e,t){return Hw([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e!==t?1:0))}less(e,t){return Hw([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<t?1:0))}lessEqual(e,t){return Hw([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<=t?1:0))}greater(e,t){return Hw([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>t?1:0))}greaterEqual(e,t){return Hw([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>=t?1:0))}logicalAnd(e,t){return Hw([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e&&t))}logicalOr(e,t){return Hw([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e||t))}select(e,t,n){Hw([e,t,n],"select");const r=this.readSync(e.dataId),s=this.readSync(t.dataId),a=this.readSync(n.dataId),i=Li(t.shape,yr(t.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===e.rank||e.rank>1||1===t.rank?1:D(t.shape.slice(1));for(let e=0;e<r.length;e++)for(let t=0;t<l;t++)1===r[e]?o[u++]=s[e]:o[u++]=a[e];return i}where(e){Hw([e],"where");const t=this.readSync(e.dataId);return Xw(e.shape,t)}topk(e,t,n){Hw(e,"topk");const r=this.readSync(e.dataId);return Kw(r,e.shape,e.dtype,t,n)}min(e,t){Hw(e,"min"),ga("min",t,e.rank);const[n,r]=fa(e.shape,t),s=Li(n,e.dtype),a=D(r),i=this.readSync(s.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*a;let n=o[t];for(let e=0;e<a;++e){const r=o[t+e];r<n&&(n=r)}i[e]=n}return s}minimum(e,t){return Hw([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.min(e,t)))}mod(e,t){return Hw([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))}maximum(e,t){return Hw([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.max(e,t)))}all(e,t){Hw(e,"all"),ga("all",t,e.rank);const[n,r]=fa(e.shape,t),s=Li(n,e.dtype),a=D(r),i=this.readSync(s.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*a;let n=o[t];for(let e=0;e<a;++e){const r=o[t+e];n=n&&r}i[e]=n}return s}any(e,t){Hw(e,"any"),ga("any",t,e.rank);const[n,r]=fa(e.shape,t),s=Li(n,e.dtype),a=D(r),i=this.readSync(s.dataId),o=this.readSync(e.dataId);for(let e=0;e<i.length;++e){const t=e*a;let n=o[t];for(let e=0;e<a;++e){const r=o[t+e];n=n||r}i[e]=n}return s}squaredDifference(e,t){return Hw([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e-t;return n*n}))}eluDer(e,t){Hw([e,t],"eluDer");const n=new Float32Array(t.size),r=this.readSync(t.dataId),s=this.readSync(e.dataId);for(let e=0;e<r.length;++e){const t=r[e];n[e]=t>=1?s[e]:s[e]*(t+1)}return this.makeOutput(n,t.shape,"float32")}atan2(e,t){return Hw([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.atan2(e,t)))}tile(e,t){return Hw(e,"tile"),qw(this.bufferSync(e),t)}gather(e,t,n){Hw([e,t],"gather");const r=e.shape.slice(),s=this.readSync(t.dataId);r[n]=s.length;const a=bs(r,e.dtype),i=this.bufferSync(e);for(let e=0;e<a.size;++e){const t=a.indexToLoc(e),r=t.slice();r[n]=s[t[n]];const o=i.locToIndex(r);a.values[e]=i.values[o]}return a.toTensor()}batchToSpaceND(e,t,n){Hw([e],"batchToSpaceND");const r=t.reduce(((e,t)=>e*t)),s=Uu(e.shape,t,r),a=Hu(s.length,t.length),i=Gu(e.shape,t,r),o=ju(n,t.length),u=qu(i,n,t.length);return va(e.reshape(s),a).reshape(i).slice(o,u)}pool3d(e,t,n){Hw(e,"pool3d");const r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),y=bs(t.outShape,e.dtype),b=y.values,x=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],w=t.outShape[2]*t.outShape[3]*t.outShape[4],v=t.outShape[3]*t.outShape[4],k=t.outShape[4];for(let y=0;y<t.batchSize;++y){const I=y*x,N=y*e.strides[0];for(let y=0;y<t.inChannels;++y)for(let x=0;x<t.outDepth;++x){const S=x*r-p;let C=S;for(;C<0;)C+=i;const E=Math.min(t.inDepth,l+S),T=I+x*w;for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const x=Math.min(t.inHeight,c+l),w=T+r*v;for(let r=0;r<t.outWidth;++r){const s=r*a-f;let l=s;for(;l<0;)l+=u;const c=Math.min(t.inWidth,h+s),d=w+r*k;let v=m,I=0,S=0;for(let t=C;t<E;t+=i){const r=N+t*e.strides[1];for(let t=p;t<x;t+=o){const s=r+t*e.strides[2];for(let t=l;t<c;t+=u){const r=g[s+t*e.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&(I+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[d+y]="avg"===n?I/S:v}}}}return y.toTensor()}avgPool3d(e,t){return Hw(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()}avgPool3dBackprop(e,t,n){Hw([e,t],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,y=d-1-n.padInfo.top,b=bs(t.shape,"float32"),x=1/(i*o*u),w=this.bufferSync(e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const v=i-m,k=o-y,I=u-g;let N=0;for(let i=0;i<p;i+=l){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<d;r+=c){const i=(k+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(I+r)/a;s<0||s>=n.outWidth||Math.floor(s)!==s||(N+=w.get(e,o,i,s,t))}}}b.set(N*x,e,i,o,u,t)}return b.toTensor()}maxPool3d(e,t){return Hw(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()}maxPool3dPositions(e,t){const n=bs(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e);for(let e=0;e<t.batchSize;++e)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-d,o=m.get(e,t,r,a,g);o>=N&&(N=o,S=n*c*h+s*c+i)}}}n.set(S,e,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(e,t,n,r){Hw([t,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(t,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,y=bs(t.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,k=s-g,I=w-m;let N=0;for(let n=0;n<h;n+=u){const s=(v+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=l){const u=(k+a)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<d;i+=c){const l=(I+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=h*p*d-1-b.get(e,s,u,l,t)===n*p*d+a*d+i?1:0;0!==c&&(N+=x.get(e,s,u,l,t)*c)}}}y.set(N,e,n,s,w,t)}return y.toTensor()}resizeBilinear(e,t,n,r){Hw(e,"resizeBilinear");const[s,a,i,o]=e.shape,u=this.readSync(e.dataId),l=new Float32Array(D([s,t,n,o])),c=[r&&t>1?a-1:a,r&&n>1?i-1:i],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p=0;const d=c[0]/h[0],f=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<t;s++){const t=d*s,c=Math.floor(t),h=t-c,m=Math.min(a-1,Math.ceil(t)),g=r*e.strides[0]+c*e.strides[1],y=r*e.strides[0]+m*e.strides[1];for(let t=0;t<n;t++){const n=f*t,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*e.strides[2],d=y+r*e.strides[2],m=g+a*e.strides[2],b=y+a*e.strides[2];for(let e=0;e<o;e++){const t=u[c+e],n=u[d+e],r=t+(u[m+e]-t)*s,a=r+(n+(u[b+e]-n)*s-r)*h;l[p++]=a}}}return zr(l,[s,t,n,o])}resizeBilinearBackprop(e,t,n){Hw([e,t],"resizeBilinearBackprop");const[r,s,a,i]=t.shape,[,o,u]=e.shape,l=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&u>1?a-1:a],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=c[0]/h[0],d=c[1]/h[1],f=this.readSync(e.dataId);let m=0;for(let e=0;e<r;e++){const n=e*t.strides[0];for(let e=0;e<o;e++){const r=e*p,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*t.strides[1],g=n+c*t.strides[1],y=r-o,b=1-y;for(let e=0;e<u;e++){const n=e*d,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,u=1-o,c=h+r*t.strides[2],p=h+s*t.strides[2],x=g+r*t.strides[2],w=g+s*t.strides[2],v=b*u,k=b*o,I=y*u,N=y*o;for(let e=0;e<i;e++){const t=f[m++];l[c+e]+=t*v,l[p+e]+=t*k,l[x+e]+=t*I,l[w+e]+=t*N}}}}return Co(l,[r,a,s,i],t.dtype)}resizeNearestNeighbor(e,t,n,r){Hw(e,"resizeNearestNeighbor");const[s,a,i,o]=e.shape,u=this.readSync(e.dataId),l=new Float32Array(s*t*n*o),c=[r&&t>1?a-1:a,r&&n>1?i-1:i],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=c[0]/h[0],d=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*e.strides[0];for(let c=0;c<t;c++){const t=p*c,h=s+Math.min(a-1,r?Math.round(t):Math.floor(t))*e.strides[1];for(let t=0;t<n;t++){const n=d*t,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*e.strides[2];for(let e=0;e<o;e++){const t=u[s+e];l[f++]=t}}}}return zr(l,[s,t,n,o],e.dtype)}resizeNearestNeighborBackprop(e,t,n){Hw([e,t],"resizeNearestNeighborBackprop");const[r,s,a,i]=t.shape,[,o,u]=e.shape,l=new Float32Array(r*s*a*i),c=this.readSync(e.dataId),h=[n&&o>1?s-1:s,n&&u>1?a-1:a],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],d=h[0]/p[0],f=h[1]/p[1],m=1/d,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*t.strides[0];for(let h=0;h<s;h++){const p=r+h*t.strides[1],x=Math.floor(h*m),w=Math.floor(x-y/2);for(let m=0;m<a;m++){const x=p+m*t.strides[2],v=Math.floor(m*g),k=Math.floor(v-b/2);for(let t=0;t<i;t++){let i=0;for(let l=0;l<y;l++){const p=l+w;if(p<0||p>=o)continue;const g=r+p*e.strides[1],y=p*d;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+k;if(s<0||s>=u)continue;const o=g+s*e.strides[2],l=s*f;m===Math.min(a-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+t])}}l[x+t]=i}}}}return Co(l,t.shape,t.dtype)}localResponseNormalization4D(e,t,n,r,s){Hw(e,"localResponseNormalization4D");const a=e.shape[3],i=a-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){const n=e%a;let r=e-n+Math.max(0,n-t);const s=e-n+Math.min(n+t,i);let u=0;for(;r<=s;r++){const e=o[r];u+=e*e}return u}for(let e=0;e<u;e++){const t=c(e),a=o[e]*Math.pow(n+r*t,-s);l[e]=a}return Co(l,e.shape)}LRNGrad(e,t,n,r,s,a,i){Hw(e,"LRNGrad");const o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),h=new Float32Array(e.size),p=e.size;for(let e=0;e<p;e++){const t=e%o,n=e-t+Math.max(0,t-r),p=e-t+Math.min(o,t+r+1);let d=0;for(let e=n;e<p;e++)d+=Math.pow(l[e],2);d=a*d+s;for(let t=n;t<p;t++){let n=-2*a*i*l[t]*c[e]/d;e===t&&(n+=Math.pow(d,-i)),n*=u[e],h[t]+=n}}return Co(h,e.shape)}multinomial(e,t,n,r){Hw(e,"multinomial");const s=t?e:yo(e),a=s.shape[0],i=s.shape[1],o=Li([a,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(s.dataId);for(let e=0;e<a;++e){const t=e*i,s=new Float32Array(i-1);s[0]=l[t];for(let e=1;e<s.length;++e)s[e]=s[e-1]+l[t+e];const a=Qi.alea(r.toString()),o=e*n;for(let e=0;e<n;++e){const t=a();u[o+e]=s.length;for(let n=0;n<s.length;n++)if(t<s[n]){u[o+e]=n;break}}}return o}oneHot(e,t,n,r){Hw(e,"oneHot");const s=new Float32Array(e.size*t);s.fill(r);const a=this.readSync(e.dataId);for(let r=0;r<e.size;++r)a[r]>=0&&a[r]<t&&(s[r*t+a[r]]=n);return So(s,[e.size,t],"int32")}nonMaxSuppression(e,t,n,r,s){Hw(e,"nonMaxSuppression");const a=this.readSync(e.dataId),i=this.readSync(t.dataId);return Gw(a,i,n,r,s)}depthToSpace(e,t,n){A("NHWC"===n,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n)),A(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+t));const r=e.shape[0],s=e.shape[1],a=e.shape[2],i=e.shape[3],o=s*t,u=a*t,l=i/(t*t),c=this.readSync(e.dataId),h=new Float32Array(r*o*u*l);let p=0;for(let e=0;e<r;++e)for(let n=0;n<o;++n){const r=Math.floor(n/t),o=n%t;for(let n=0;n<u;++n){const u=Math.floor(n/t),d=(o*t+n%t)*l;for(let t=0;t<l;++t){const n=t+d+i*(u+a*(r+s*e));h[p++]=c[n]}}}return Co(h,[r,o,u,l])}broadcastedBinaryOp(e,t,n,r){const s=ci(e.shape,t.shape),a=bs(s,n),i=this.readSync(e.dataId),o=this.readSync(t.dataId),u=ui(e.shape,s),l=ui(t.shape,s),c=a.values;if(u.length+l.length===0)for(let e=0;e<c.length;++e)c[e]=r(i[e%i.length],o[e%o.length]);else{const n=this.bufferSync(e),s=this.bufferSync(t);for(let h=0;h<c.length;++h){const p=a.indexToLoc(h),d=p.slice(-e.rank);u.forEach((e=>d[e]=0));const f=n.locToIndex(d),m=p.slice(-t.rank);l.forEach((e=>m[e]=0));const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}split(e,t,n){return jw(e,t,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(e,t,n,r,s,a){const[i,o,u,l]=e.shape,c=t.shape[0],[h,p]=r,d=bs([c,h,p,l],"float32"),f=this.readSync(t.dataId),m=this.readSync(n.dataId),g=this.readSync(e.dataId),y=e.strides,b=d.strides;for(let e=0;e<c;e++){const t=4*e,n=f[t],r=f[t+1],c=f[t+2],x=f[t+3],w=m[e];if(w>=i)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,k=p>1?(x-r)*(u-1)/(p-1):0;for(let t=0;t<h;t++){const i=h>1?n*(o-1)+t*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<p;n++)for(let r=0;r<l;r++){const s=r+n*b[2]+t*b[1]+e*b[0];d.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<p;i++){const c=p>1?r*(u-1)+i*k:.5*(r+x)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+t*b[1]+e*b[0];d.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<l;r++){let a=r+h*y[2]+n*y[1]+w*y[0];const u=g[a];a=r+f*y[2]+n*y[1]+w*y[0];const l=g[a];a=r+h*y[2]+s*y[1]+w*y[0];const c=g[a];a=r+f*y[2]+s*y[1]+w*y[0];const p=u+(l-u)*m,x=c+(g[a]-c)*m;a=r+i*b[2]+t*b[1]+e*b[0],d.values[a]=p+(x-p)*o}}}else for(let n=0;n<p;++n){const s=p>1?r*(u-1)+n*k:.5*(r+x)*(u-1);if(s<0||s>u-1){for(let r=0;r<l;r++){const s=r+n*b[2]+t*b[1]+e*b[0];d.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<l;r++){const s=r+o*y[2]+c*y[1]+w*y[0],a=r+n*b[2]+t*b[1]+e*b[0];d.values[a]=g[s]}}}}return d.toTensor()}sparseToDense(e,t,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=Os(0,e,n);return this.scatter(e,t,n,u,i,a,s,o,r,!1)}gatherND(e,t){const n=t.shape,r=n[n.length-1],[s,a,i,o]=Rs(e,t);if(0===a)return zr([],s,e.dtype);const u=new ar([a,i],e.dtype),l=this.readSync(t.dataId),c=this.readSync(e.dataId);for(let t=0;t<a;t++){const n=[];let s=0;for(let e=0;e<r;e++){const a=l[t*r+e];s+=a*o[e],n.push(a)}if(s<0||s>=e.size/i)throw new Error(`Invalid indices: ${n} does not index into ${e.shape}`);for(let e=0;e<i;e++)u.values[t*i+e]=c[s*i+e]}return u.toTensor().reshape(s)}scatterND(e,t,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Os(0,e,n),u=ua(0);return this.scatter(e,t,n,o,a,s,r,i,u,!0)}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return gi(e.shape,1,e.dtype)}zerosLike(e){const t=U(e.dtype,D(e.shape));return this.makeOutput(t,e.shape,e.dtype)}linspace(e,t,n){return fl(e,t,n)}scatter(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=this.readSync(e.dataId),p=this.readSync(t.dataId);if(0===r)return zr([],n,t.dtype);const d=new ar(c,t.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[e*s+n]:d.values[u*s+n]=0===t.rank?p[0]:p[e*s+n]}return d.toTensor().reshape(n)}}function Jw(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Hw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=D(i.shape),c=n||i.dtype,h=U(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,h)}}function Zw(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Hw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}ia("cpu",(()=>new Yw),1);const Qw=Jw(tt,(e=>e>=0?e:Math.exp(e)-1)),ev={kernelName:tt,backendName:"cpu",kernelFunc:Qw};function tv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const nv={kernelName:gt,backendName:"cpu",kernelFunc:tv};function rv(e){return(t,n,r,s,a)=>{const i=ci(t,n),o=i.length,u=Z(i),l=V(a,D(i)),c=t.length,h=n.length,p=Z(t),d=Z(n),f=ui(t,i),m=ui(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=ie(t,o,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=ae(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=ae(g,h,d);l[t]=e(r[i],s[y])}return[l,i]}}const sv=rv(((e,t)=>e<0?t*e:e));function av(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Hw([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=sv(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const iv={kernelName:Xt,backendName:"cpu",kernelFunc:av},ov=Jw(Zt,(e=>Math.max(0,e))),uv={kernelName:Zt,backendName:"cpu",kernelFunc:ov},lv=Jw(nn,(e=>Math.min(Math.max(0,e),6))),cv={kernelName:nn,backendName:"cpu",kernelFunc:lv};function hv(e,t,n,r){if("linear"===n)return tv({inputs:{x:t},backend:e});if("relu"===n)return ov({inputs:{x:t},backend:e});if("elu"===n)return Qw({inputs:{x:t},backend:e});if("relu6"===n)return lv({inputs:{x:t},backend:e});if("prelu"===n)return av({inputs:{x:t,alpha:r},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function pv(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const dv={kernelName:Oe,backendName:"cpu",kernelFunc:pv};function fv(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const mv={kernelName:Yt,backendName:"cpu",kernelFunc:fv};function gv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return tv({inputs:{x:s},backend:n});const e=Li(s.shape),t=gv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=pv({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=fv({inputs:{input:s},backend:n}),t=gv({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!H(s.dtype,a)){const e=tv({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=tr([0],s.dtype),[r,a]=rv(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const yv={kernelName:Re,backendName:"cpu",kernelFunc:gv};function bv(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;Hw([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=t(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=gv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=gv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=pv({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function xv(e){return(t,n,r,s,a,i)=>{const o=ci(t,n),u=D(o),l=o.length,c=Z(o),h=V("float32",u),p=V("float32",u),d=ui(t,o),f=ui(n,o),m=sl(r,s),g=sl(a,i),y=t.length,b=Z(t),x=n.length,w=Z(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=ie(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=ae(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=ae(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const wv=rv(((e,t)=>e+t)),vv=xv(((e,t,n,r)=>({real:e+n,imag:t+r}))),kv=bv(ye,wv,vv),Iv={kernelName:ye,backendName:"cpu",kernelFunc:kv};function Nv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=D(s.shape),o=B(a,i),u=D(o);A(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Sv={kernelName:Qt,backendName:"cpu",kernelFunc:Nv};function Cv(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Hw([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=D(f),y=D(m);A(u>=2&&l>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);A(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=Nv({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=Nv({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),C=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,T=Z(w.shape),_=Z(v.shape),[$,R,F]=i?[T[0],1,T[1]]:[T[0],T[1],1],[O,M,L]=o?[1,_[1],_[0]]:[_[1],1,_[0]],z=I*N,B=bs([S,I,N],w.dtype),P=B.values,W=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=W)for(let n=0;n<N;n+=W)for(let r=0;r<k;r+=W){const s=Math.min(t+W,I),a=Math.min(n+W,N),i=Math.min(r+W,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,g-1)*$,a=Math.min(e,y-1)*L;n+=C[r+o*R+s*F]*E[s*O+t*M+a]}P[e*z+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,B.dtype,B.values)}const Ev={kernelName:Ae,backendName:"cpu",kernelFunc:Cv},Tv={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c}=r;let h,p,d;const f=[];h=Cv({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=kv({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(d=hv(n,h,c,o),f.push(h),h=d);for(const e of f)n.disposeIntermediateTensorInfo(e);return h}};function Av(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const _v={kernelName:fe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;let r=new Float32Array(D(t.shape));if("complex64"!==t.dtype)r=Av(n.data.get(t.dataId).values);else{const e=n.data.get(t.dataId),s=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=o[e];r[e]=Math.hypot(t,n)}}return n.makeOutput(r,t.shape,"float32")}},$v=Jw(me,(e=>Math.acos(e))),Rv={kernelName:me,backendName:"cpu",kernelFunc:$v},Dv=Jw(ge,(e=>Math.acosh(e))),Fv={kernelName:ge,backendName:"cpu",kernelFunc:Dv},Ov=Jw(ve,(e=>Math.asin(e))),Mv={kernelName:ve,backendName:"cpu",kernelFunc:Ov},Lv=Jw(ke,(e=>Math.asinh(e))),zv={kernelName:ke,backendName:"cpu",kernelFunc:Lv},Bv=Jw(Ie,(e=>Math.atan(e))),Pv={kernelName:Ie,backendName:"cpu",kernelFunc:Bv},Wv=Jw(Ne,(e=>Math.atanh(e))),Vv={kernelName:Ne,backendName:"cpu",kernelFunc:Wv};function Uv(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=bs(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function Hv(e,t,n,r,s=!1,a=!1){const i=bs(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=bs(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(v,e,n,o,t)}}return i}const Gv={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Hw(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;A(Ma(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ca(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&F(l.inShape,l.outShape))c=tv({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Z(s.shape),r=Uv(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},jv={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Hw([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=Ca(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=bs(i.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,N=bs(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=N.get(e,r,s,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},qv={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;A(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Hw([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[k++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function Kv(e){return(t,n,r)=>{const s=V(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const Xv=Kv((e=>Math.ceil(e))),Yv=Zw(De,Xv),Jv={kernelName:De,backendName:"cpu",kernelFunc:Yv},Zv=Jw(Fe,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Qv={kernelName:Fe,backendName:"cpu",kernelFunc:Zv};function ek(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const tk={kernelName:bt,backendName:"cpu",kernelFunc:ek};function nk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=P(s,t[0].shape)[0];let i=qa(t.map((e=>e.shape)),a);if(0===D(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>D(e.shape)>0));if(1===o.length)return o[0];if(ja(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>fv({inputs:{input:e},backend:n}))),t=o.map((e=>ek({inputs:{input:e},backend:n}))),r=nk({inputs:e,backend:n,attrs:{axis:a}}),s=nk({inputs:t,backend:n,attrs:{axis:a}}),i=pv({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((e=>{const t=D(e.shape.slice(a));return Nv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}));i=qa(u.map((e=>e.shape)),1);const l=V(o[0].dtype,D(i));if(1===u[0].shape[0]){let e=0;u.forEach((t=>{const r=n.data.get(t.dataId).values,s=D(t.shape);l.set(r,e),e+=s}))}else{let e=0;u.forEach((t=>{const r=n.data.get(t.dataId).values;let s=0;for(let n=0;n<t.shape[0];++n){const a=n*i[1]+e;for(let e=0;e<t.shape[1];++e)l[a+e]=r[s++]}e+=t.shape[1]}))}const c=qa(o.map((e=>e.shape)),a),h=n.makeTensorInfo(c,t[0].dtype,l);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const rk={kernelName:Me,backendName:"cpu",kernelFunc:nk};function sk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Hw([s,a],"conv2d");const h=La(u),p=Ta(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new ar(p.outShape,s.dtype),v=Z(s.shape),k=Z(a.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],E=w.strides[0],T=x?w.strides[1]:w.strides[2],A=x?w.strides[2]:1,_=x?1:w.strides[1],$=n.data.get(s.dataId).values,R=n.data.get(a.dataId).values,D=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<p.outHeight;++e){const r=n+e*T,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*A,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=$[s+e*C];for(let e=0;e<p.outChannels;++e)D[t+e*_]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const ak={kernelName:Le,backendName:"cpu",kernelFunc:sk},ik={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Hw([s,a],"conv2dBackpropFilter");const h=La(u),p=Ta(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ar(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new ar(s.shape,s.dtype,v),N=new ar(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},ok={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Hw([s,a],"conv2dBackpropInput");const h=Z(a.shape),p=Z(s.shape);let d=La(l);const f=Ta(i,a.shape,o,1,u,c,!1,d),m=new ar(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:E,outChannels:T,outHeight:A,outWidth:_,strideHeight:$,strideWidth:R}=f;d=f.dataFormat;const D=I-1-f.padInfo.top,F=N-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,B=O?1:m.strides[1],P=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const r=n-D,s=Math.max(0,Math.ceil(r/$)),a=Math.min(A,(I+r)/$);for(let i=0;i<E;++i){const o=i-F,u=Math.max(0,Math.ceil(o/R)),l=Math.min(_,(N+o)/R);let c=0;for(let n=s;n<a;++n){const s=n*$-r;for(let r=u;r<l;++r){const a=P*e+W*n+V*r,i=x*(I-1-s)+w*(N-1-(r*R-o))+v*t;for(let e=0;e<T;++e)c+=y[a+U*e]*b[i+e]}}g[M*e+L*n+z*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},uk={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;Hw([s,a],"conv3d");const l=Aa(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new ar(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=w.values,N=Z(s.shape),S=Z(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const a=e*S[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*S[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*S[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},lk={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;Hw([s,a],"conv3dBackpropFilterV2");const l=Z(s.shape),c=Z(a.shape),h=Aa(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ar(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,C,E,T]=c,A=n.data.get(s.dataId).values,[_,$,R,D]=l,F=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(h.outDepth,(h.inDepth+F-e)/p),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/d)),i=Math.min(h.outHeight,(h.inHeight+M-s)/d),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*_,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-F)*$+h,n=m*C+y;for(let e=a;e<i;++e){const a=(s+e*d-M)*R+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*T+i;g+=A[(r+e*f-O)*D+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},ck={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;Hw([s],"conv3dBackpropInputV2");const l=Z(s.shape),c=Z(a.shape),h=Aa(u,a.shape,o,1,i),p=new ar(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,I=n.data.get(a.dataId).values,[N,S,C,E]=c,{batchSize:T,filterDepth:A,filterHeight:_,filterWidth:$,inChannels:R,inDepth:D,inHeight:F,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=A-1-h.padInfo.front,H=_-1-h.padInfo.top,G=$-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<R;++t)for(let n=0;n<D;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,(A+r)/P);for(let i=0;i<F;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(_+o)/W);for(let c=0;c<O;++c){const h=c-G,p=Math.max(0,Math.ceil(h/V)),T=Math.min(B,($+h)/V);let R=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=u;r<l;++r){const a=r*W-o;for(let i=p;i<T;++i){const o=x*e+w*n+v*r+k*i,u=N*(A-1-s)+S*(_-1-a)+C*($-1-(i*V-h))+E*t;for(let e=0;e<M;++e)R+=b[o+e]*I[u+e]}}}d[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},hk=Jw(Ue,(e=>Math.cos(e))),pk={kernelName:Ue,backendName:"cpu",kernelFunc:hk},dk=Jw(He,(e=>Math.cosh(e))),fk={kernelName:He,backendName:"cpu",kernelFunc:dk};function mk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;Hw([s,a],"depthwiseConv2DNative");const c=Z(s.shape),h=Z(a.shape);let p=u;null==p&&(p=[1,1]),A(Ma(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Ta(s.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new ar(d.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,S=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],s=e*d.strideHeight-x;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-w;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],o=i+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[u+e]+=t*N[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const gk={kernelName:Ke,backendName:"cpu",kernelFunc:mk},yk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Hw([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Ta(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new ar(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new ar(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,I=new ar(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},bk={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Hw([s,a],"depthwiseConv2DNativeBackpropInput");const h=Z(s.shape),p=Z(a.shape),d=Ta(c,a.shape,i,o,u,l,!0),f=new ar(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[N,S,C]=p,{batchSize:E,filterHeight:T,filterWidth:A,inChannels:_,inHeight:$,inWidth:R,outChannels:D,outHeight:F,outWidth:O,strideHeight:M,strideWidth:L}=d,z=T-1-d.padInfo.top,B=A-1-d.padInfo.left,P=D/_;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<$;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),a=Math.min(F,(T+r)/M);for(let i=0;i<R;++i){const o=i-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(A+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=u;r<l;++r){const a=w*e+v*n+k*r,i=N*(T-1-s)+S*(A-1-(r*L-o))+C*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},xk={kernelName:Je,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=Sa(r.shape,s.shape,a,i,"NHWC",o),E=D(C),T=C.length,A=U(r.dtype,E);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*S;if(d>=0&&d<m){const i=ae([e,a,d,o],c,Z(r.shape)),f=ae([t,n,o],p,Z(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}A[ae([e,t,a,o],T,Z(C))]=u}}}return{dataId:u.write(tr(A,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},wk={kernelName:Qe,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ee(r.shape,l.data.get(r.dataId).values),h=ee(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Sa(r.shape,s.shape,i,o,"NHWC",u);A(a.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got `+a.rank));const C=ee(S,l.data.get(a.dataId).values),E=re(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*N;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}E[o][u][a]+=C[e][t][r][a]}}}return{dataId:l.write(tr(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},vk={kernelName:Ze,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ee(r.shape,l.data.get(r.dataId).values),h=ee(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Sa(r.shape,s.shape,i,o,"NHWC",u);A(a.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got `+a.rank));const C=ee(S,l.data.get(a.dataId).values),E=re(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*N;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}E[e][o][u][a]+=C[e][t][r][a]}}}return{dataId:l.write(tr(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},kk=rv(((e,t)=>e/t)),Ik=bv(et,kk),Nk={kernelName:et,backendName:"cpu",kernelFunc:Ik},Sk=Yu,Ck=Ju,Ek=Zu,Tk=Qu,Ak=el,_k=tl,$k=Jw(nt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Sk*n);return t*(1-((((_k*r+Ak)*r+Tk)*r+Ek)*r+Ck)*r*Math.exp(-n*n))})),Rk={kernelName:nt,backendName:"cpu",kernelFunc:$k},Dk=Kv((e=>Math.exp(e))),Fk=Zw(st,Dk),Ok={kernelName:st,backendName:"cpu",kernelFunc:Fk},Mk=Kv((e=>Math.expm1(e))),Lk=Zw(at,Mk),zk={kernelName:at,backendName:"cpu",kernelFunc:Lk},Bk=rv(((e,t)=>e*t)),Pk=xv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Wk=bv(Bt,Bk,Pk),Vk={kernelName:Bt,backendName:"cpu",kernelFunc:Wk};function Uk(e,t,n,r,s){const a=Ks(r,t,n),i=D(n),o=Z(r);if(a){const n=Xs(t,o);return e.subarray(n,n+i)}const u=V(s,i);for(let s=0;s<i;++s){const a=ae(ie(s,n.length,Z(n)).map(((e,n)=>e+t[n])),r.length,o);u[s]=e[a]}return u}function Hk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;Hw(s,"slice");const[o,u]=Ys(s,a,i);Ms(s,o,u);const l=Uk(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const Gk={kernelName:cn,backendName:"cpu",kernelFunc:Hk},jk=rv(((e,t)=>e-t)),qk=xv(((e,t,n,r)=>({real:e-n,imag:t-r}))),Kk=bv(In,jk,qk),Xk={kernelName:In,backendName:"cpu",kernelFunc:Kk};function Yk(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=D(l),h=V("float32",c),p=V("float32",c);for(let e=0;e<s;e++){const r=Hk({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=Hk({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=pv({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=Jk(i,t,n),d=sl(l,c);for(let t=0;t<a;t++){const n=ul(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=pv({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function Jk(e,t,n){const r=D(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=r)&u-1)){const s=Zk(a,i,r,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),a=n.makeTensorInfo([],"float32",(o=r,"string"=="float32"?rr(o):tr([o],"float32"))),i=tv({inputs:{x:a},backend:n}),l=Nk.kernelFunc({inputs:{a:e,b:a},backend:n}),c=Nk.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:h,imag:p}}return s}return al(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=hl(s*r,t,n),u=ul(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),ll(r,a,i,s)}return r}(sl(a,i),r,t));var o,u}function Zk(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=sl(e,t),i=n/2,o=il(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=pv({inputs:{real:h,imag:p},backend:s}),f=ol(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=pv({inputs:{real:b,imag:x},backend:s}),v=Zk(u,l,i,r,s),k=v.real,I=v.imag,N=[k.length],S=s.makeTensorInfo(N,"float32",k),C=s.makeTensorInfo(N,"float32",I),E=pv({inputs:{real:S,imag:C},backend:s}),T=Zk(m,g,i,r,s),A=T.real,_=T.imag,$=[A.length],R=s.makeTensorInfo($,"float32",A),D=s.makeTensorInfo($,"float32",_),F=pv({inputs:{real:R,imag:D},backend:s}),O=cl(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),B=pv({inputs:{real:L,imag:z},backend:s}),P=Wk({inputs:{a:B,b:F},backend:s}),W=kv({inputs:{a:E,b:P},backend:s}),V=Kk({inputs:{a:E,b:P},backend:s}),U=fv({inputs:{input:W},backend:s}),H=fv({inputs:{input:V},backend:s}),G=ek({inputs:{input:W},backend:s}),j=ek({inputs:{input:V},backend:s}),q=nk({inputs:[U,H],backend:s,attrs:{axis:0}}),K=nk({inputs:[G,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Qk={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=D(r.shape),a=r.shape[r.shape.length-1],i=Nv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Yk(i,!1,n),u=Nv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},eI={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||X(s),o=U(i,D(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}},tI={kernelName:ut,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=V(r.dtype,D(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,e,r,o][2],p=Math.round(u-h),d=t+n+s+o;let f=c[d];p>=0&&p<u&&(f=c[t+n+p*l+o]),a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nI=Kv((e=>Math.floor(e))),rI=Zw(lt,nI),sI={kernelName:lt,backendName:"cpu",kernelFunc:rI},aI={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=sk({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=f;f=kv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=f;f=hv(n,f,d,o),n.disposeIntermediateTensorInfo(e)}return f}},iI={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=mk({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=f;f=kv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=f;f=hv(n,f,d,o),n.disposeIntermediateTensorInfo(e)}return f}},oI={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=D(r.shape),a=r.shape[r.shape.length-1],i=Nv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Yk(i,!0,n),u=Nv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},uI=Jw(xt,(e=>Number.isFinite(e)?1:0),"bool"),lI={kernelName:xt,backendName:"cpu",kernelFunc:uI},cI=Jw(wt,(e=>Math.abs(e)===1/0?1:0),"bool"),hI={kernelName:wt,backendName:"cpu",kernelFunc:cI},pI=Jw(vt,(e=>Number.isNaN(e)?1:0),"bool"),dI={kernelName:vt,backendName:"cpu",kernelFunc:pI},fI=Kv((e=>Math.log(e))),mI=Zw(Nt,fI),gI={kernelName:Nt,backendName:"cpu",kernelFunc:mI},yI=Jw(St,(e=>Math.log1p(e))),bI={kernelName:St,backendName:"cpu",kernelFunc:yI},xI=Jw(Et,(e=>e?0:1),"bool"),wI={kernelName:Et,backendName:"cpu",kernelFunc:xI};function vI(e,t,n,r){const s=V(r,D(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function kI(e,t,n,r,s){const a=t.length,i=D(t),o=Z(t),u=Z(s),l=V(n,D(s));for(let t=0;t<i;++t){const n=ie(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[ae(s,a,u)]=e[t]}return l}const II={kernelName:At,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{reductionIndices:s,keepDims:a}=t,i=n;let o=r.shape;const u=o.length,l=P(s,o);let c=l;const h=ya(c,u);let p=i.data.get(r.dataId).values;if(null!=h){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=o[h[t]];p=kI(p,o,r.dtype,h,e),c=xa(c.length,u),o=e}Hw(r,"max"),ga("max",c,u);const[d,f]=fa(o,c),m=vI(p,D(f),d,r.dtype),g=i.write(m,d,r.dtype);let y=d;return a&&(y=ma(d,l)),{dataId:g,shape:y,dtype:r.dtype}}},NI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Hw(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;A(Ma(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ca(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&F(l.inShape,l.outShape))c=tv({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Z(s.shape),r=Uv(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},SI={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Hw([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Ca(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=bs(p.outShape,o.dtype,Hv(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=bs(o.shape,"float32"),N=n.data.get(s.dataId).values,S=bs(s.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==u&&(i+=S.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},CI={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;Hw(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Ca(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=Uv(e,0,n,Z(t),s,"max"),i=Hv(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},EI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;Hw(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Z(s.shape),f=D(o),m=o.length,g=Z(o),y=V(s.dtype,f);for(let e=0;e<f;e++){let t=ie(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=ae(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},TI=iu,AI={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=t;Hw(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=TI(c,h,a,i,o,u);return[p,d]}},_I=ou,$I={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=t;Hw(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=_I(c,h,p,d,f,m);return[g,y]}},RI=rv(((e,t)=>e!==t?1:0)),DI=bv(Wt,RI,null,"bool"),FI={kernelName:Wt,backendName:"cpu",kernelFunc:DI},OI={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;Hw(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=D(s.shape),h=s.shape.length,p=Z(s.shape),d=D(o),f=o.length,m=Z(o),g=V(s.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[ae(ie(e,h,p).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},MI=Jw(Jt,(e=>1/e)),LI={kernelName:Jt,backendName:"cpu",kernelFunc:MI},zI={kernelName:On,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=V(r.dtype,D(r.shape)),[l,c,h,p]=r.shape,[d,f]=Vu(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},BI=Jw(sn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),PI={kernelName:sn,backendName:"cpu",kernelFunc:BI},WI=Kv((e=>1/Math.sqrt(e))),VI=Zw(an,WI),UI={kernelName:an,backendName:"cpu",kernelFunc:VI},HI=Ku,GI=Xu,jI=Jw(ln,(e=>e>=0?GI*e:HI*(Math.exp(e)-1))),qI={kernelName:ln,backendName:"cpu",kernelFunc:jI},KI=Jw(fn,(e=>1/(1+Math.exp(-e)))),XI={kernelName:fn,backendName:"cpu",kernelFunc:KI},YI=Jw(dn,(e=>e<0?-1:e>0?1:0)),JI={kernelName:dn,backendName:"cpu",kernelFunc:YI},ZI=Jw(hn,(e=>Math.sin(e))),QI={kernelName:hn,backendName:"cpu",kernelFunc:ZI},eN=Jw(pn,(e=>Math.sinh(e))),tN={kernelName:pn,backendName:"cpu",kernelFunc:eN},nN=Math.log(1.1920928955078125e-7)+2,rN=Jw(mn,(e=>{const t=e>-nN,n=e<nN,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),sN={kernelName:mn,backendName:"cpu",kernelFunc:rN};function aN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Hw(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=kI(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const iN={kernelName:Tn,backendName:"cpu",kernelFunc:aN},oN={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Hw([s],"spaceToBatchND");const o=D(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=OI.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Uu(l.shape,a,o,!1),h=Hu(c.length,a.length,!1),p=Gu(l.shape,a,o,!1),d=Nv({inputs:{x:l},backend:n,attrs:{shape:c}}),f=aN({inputs:{x:d},backend:n,attrs:{perm:h}}),m=Nv({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}},uN=Jw(gn,(e=>Math.sqrt(e))),lN={kernelName:gn,backendName:"cpu",kernelFunc:uN},cN={kernelName:kn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Hw(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},hN=rv(((e,t)=>{const n=e-t;return n*n})),pN=bv(vn,hN),dN={kernelName:vn,backendName:"cpu",kernelFunc:pN},fN=Jw(Dn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),mN={kernelName:Dn,backendName:"cpu",kernelFunc:fN},gN=Jw(Sn,(e=>Math.tan(e))),yN={kernelName:Sn,backendName:"cpu",kernelFunc:gN},bN=Jw(Cn,(e=>Math.tanh(e)));function xN(e,t,n,r){const s=P(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new ar(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new ar(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const wN=[Tv,_v,Rv,Fv,Iv,Mv,zv,Pv,Vv,Gv,jv,Ev,qv,yv,Jv,Qv,dv,rk,ik,ok,ak,lk,ck,uk,pk,fk,gk,yk,bk,xk,vk,wk,Nk,ev,Rk,Ok,zk,Qk,eI,tI,sI,aI,iI,nv,oI,tk,lI,hI,dI,gI,bI,wI,NI,SI,CI,II,EI,Vk,AI,$I,FI,OI,iv,mv,LI,uv,cv,Sv,zI,PI,UI,qI,XI,JI,QI,tN,Gk,sN,oN,lN,cN,dN,mN,Xk,yN,{kernelName:Cn,backendName:"cpu",kernelFunc:bN},iN,{kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Hw(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=xN(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const e of wN)Hn(e);const vN={},kN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function IN(e){if(!(e in vN)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete vN[e]}),!1),1===e?t.getContext("webgl",kN)||t.getContext("experimental-webgl",kN):t.getContext("webgl2",kN)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;vN[e]=t}const t=vN[e];return t.isContextLost()?(delete vN[e],IN(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),vN[e])}var NN,SN,CN;function EN(e,t){return[t,e]}function TN(e){const t=D(e);return M(Math.ceil(t/4))}function AN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function _N(e,t){const n=e;let r,s,a,i,o,u,l,c,h,p;return 2===le().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function $N(e,t){const n=t();return le().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}function RN(e){return!!(le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function DN(e,t){return WN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(NN||(NN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(SN||(SN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(CN||(CN={}));const FN=/ERROR: [0-9]+:([0-9]+):/g;function ON(e,t){if($N(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function MN(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&($N(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),$N(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),$N(e,(()=>e.enableVertexAttribArray(o))),!0)}function LN(e,t,n,r){$N(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),$N(e,(()=>e.activeTexture(e.TEXTURE0+n))),$N(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),$N(e,(()=>e.uniform1i(n,r)))}function zN(e,t,n){$N(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),$N(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function BN(e,t){$N(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),$N(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function PN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function WN(e,t,n){const r=$N(e,(()=>t()));if(null==r)throw new Error(n);return r}function VN(e,t=2){return D(e.slice(0,e.length-t))}function UN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function HN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[VN(e),...UN(e)]),t}function GN(e){return e%2==0}function jN(e,t){if(F(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(GN(n)&&GN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&GN(e[0])&&GN(t[0])}let qN,KN;function XN(e,t){return null!=e.getExtension(t)}function YN(e){try{if(null!=IN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function JN(e){const t=_N(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function ZN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&A("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the WebGL backend."))}))}const QN=le();QN.registerFlag("HAS_WEBGL",(()=>QN.getNumber("WEBGL_VERSION")>0)),QN.registerFlag("WEBGL_VERSION",(()=>YN(2)?2:YN(1)?1:0)),QN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),QN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===QN.get("WEBGL_VERSION"))),QN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),QN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),QN.registerFlag("WEBGL_PACK",(()=>QN.getBool("HAS_WEBGL"))),QN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_CLIP",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),QN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_PACK_REDUCE",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_CONV_IM2COL",(()=>QN.getBool("WEBGL_PACK"))),QN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==qN){const t=IN(e);qN=t.getParameter(t.MAX_TEXTURE_SIZE)}return qN}(QN.getNumber("WEBGL_VERSION")))),QN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==KN){const t=IN(e);KN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,KN)}(QN.getNumber("WEBGL_VERSION")))),QN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=QN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=IN(e);return t=XN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:XN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),QN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>QN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}())),QN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=IN(e);if(1===e){if(!XN(t,"OES_texture_float"))return!1}else if(!XN(t,"EXT_color_buffer_float"))return!1;return JN(t)}(QN.getNumber("WEBGL_VERSION")))),QN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!QN.getBool("WEBGL_FORCE_F16_TEXTURES")&&QN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),QN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=IN(e);if(1!==e){if(XN(t,"EXT_color_buffer_float"))return JN(t);const e="EXT_color_buffer_half_float";if(XN(t,e)){const n=t.getExtension(e);return function(e,t){const n=_N(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!XN(t,"OES_texture_float")&&!!XN(t,"WEBGL_color_buffer_float")&&JN(t)}(QN.getNumber("WEBGL_VERSION")))),QN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=QN.getNumber("WEBGL_VERSION"))&&null!=IN(e).fenceSync;var e})),QN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>QN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),QN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const{simpleAbsImpl:eS,addImpl:tS,ceilImpl:nS,expImpl:rS,expm1Impl:sS,floorImpl:aS,logImpl:iS,maxImpl:oS,multiplyImpl:uS,rsqrtImpl:lS,sliceImpl:cS,subImpl:hS,transposeImpl:pS,uniqueImpl:dS}=v;class fS{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class mS{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class gS{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function yS(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bS(e,t){return 1===t?[e]:yS(e,t)}function xS(){let e,t,n,r,s,a,i,o,u,l;return 2===le().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function wS(e,t,n="index"){const r=Z(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function vS(e){const t=Z(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}const kS="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:IS}=r;function NS(e,t,n,r){const s=[];e.forEach((e=>{const t=D(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?CS(e):SS(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=IS(e.shapeInfo.logicalShape,t.logicalShape),u=DS(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+h[t+l])).join(", ");let d="return outputValue;";const f=1===D(e.shapeInfo.logicalShape),m=1===D(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&F(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=DS(u),c=IS(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+d[t+h])).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,u=xS(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ES}\n    ${TS}\n    ${AS}\n  `}(u);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(F(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return F(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=wS(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=wS(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=wS(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=wS(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=_S),[p,l,h,a,c,i,n].join("\n")}function SS(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${$S(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${RS(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=$S(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&F(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=W(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${SS(FS(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${OS(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${RS(e)}\n      }\n    `;const u=s[0],l=s[1],c=$S(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=W(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${SS(FS(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${OS(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${RS(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${$S(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:u}=W(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${SS(FS(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${OS(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${RS(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${$S(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=W(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${SS(FS(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${OS(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${RS(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${$S(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=W(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${SS(FS(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${OS(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${RS(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${$S(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function CS(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${xS().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=xS();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=xS();if(null!=s&&F(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${CS(FS(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${OS(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${xS().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${xS().texture2D}(${r}, uv);\n    }\n  `}(e)}}const ES="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",TS="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AS="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_S="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function $S(e){return"offset"+e}function RS(e){const t=e.name,n=D(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function DS(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function FS(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function OS(e,t){return t.map((t=>e[t])).join(", ")}class MS{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=DS(o),l=bS("coords",o);let c,h;if(1===a){h=o+1;const e=DS(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=bS("sourceLocR",h-1).concat("inIdx.r"),g=bS("sourceLocG",h-1).concat("inIdx.g"),y=bS("sourceLocB",h-1).concat("inIdx.b"),b=bS("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class LS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BS="return (a < 0.) ? b * a : a;";class PS{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ci(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const WS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class VS{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ci(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===D(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${DS(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bS("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class US{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class HS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class GS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class jS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZS{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,a=e.padInfo.left,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),d=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class QS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eC{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,a=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,f=e.outChannels/e.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class tC{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,a=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,f=d;let m="int xR; int xC; int xCOffset;";for(let e=0;e<p;e++)for(let t=0;t<d;t++)m+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<p;e++)for(let t=0;t<f;t++){const n=2*t;if(m+=`\n          xR = xRCorner + ${e*c};\n          xC = xCCorner + ${n*h};\n        `,1===l){if(n<d&&(m+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<d)){const t=o%2==0?T(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+=`\n                  xCOffset = xC + ${o%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(m+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),m+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):m+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<d&&(m+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(m+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<d&&(m+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(m+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<d&&(m+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),m+="}");n<d&&(m+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<d&&(m+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<p;e++)for(let t=0;t<d;t++)m+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${m}\n\n        vec4 result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class nC{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+d],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class rC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${sC(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${DS(r)} coords = getOutputCoords();\n        int end = ${aC(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${aC(r,"coords")} = idx;\n          val += getX(${sC(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function sC(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function aC(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}class iC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=NN.DENSE;const t=TN(e),n=xS();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${wS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class oC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=NN.DENSE;const t=TN(e),n=xS();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${wS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class uC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class lC{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class cC{constructor(e){this.variableNames=["A"],this.outTexUsage=SN.DOWNLOAD;const t=xS();this.outputShape=e,this.userCode=`\n      ${kS}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class hC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=SN.DOWNLOAD;const t=xS();this.outputShape=e,this.userCode=`\n      ${kS}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class pC{constructor(e,t,n=!1){this.variableNames=["A"];const r=xS(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${vS(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class dC{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=xS(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${vS(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class fC{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class mC{constructor(e,t,n){this.variableNames=["A","indices"];const r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;const s=DS(this.rank),a=function(e,t){const n=e.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<e.length;n++)n===t?s.push(`int(getIndices(${r[n]}))`):s.push(""+r[n]);return s.join()}(e,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class gC{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=DS(t.length),s=DS(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function yC(e,t,n,r,s,a){!function(e,t){const n=le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return WN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return $N(e,(()=>e.bindTexture(o,i))),$N(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),$N(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),$N(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),$N(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),$N(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),$N(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function bC(e){return e.internalFormatFloat}function xC(e){return e.internalFormatHalfFloat}function wC(e){return e.downloadTextureFormat}function vC(e){return e.internalFormatPackedFloat}function kC(e){return e.internalFormatPackedHalfFloat}class IC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=le().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){vN[e]=t}(t,e)):this.gl=IN(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===le().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=DN(this.gl,e),XN(this.gl,t))this.textureHalfFloatExtension=DN(this.gl,t);else if(le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),XN(this.gl,r))this.colorBufferHalfFloatExtension=DN(this.gl,r);else if(le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",XN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!XN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=WN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return $N(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),$N(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=WN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return $N(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),$N(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return WN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=_N(this.gl,this.textureHalfFloatExtension)}get debug(){return le().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;$N(e,(()=>e.finish())),$N(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),$N(e,(()=>e.deleteFramebuffer(this.framebuffer))),$N(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),$N(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),$N(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EN(t,n);return yC(e,s,a,bC(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EN(t,n);return yC(e,s,a,xC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=EN(t,n);return yC(e,s,a,wC(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){$N(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?$N(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):$N(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),$N(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;$N(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),$N(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),$N(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=AN(t,n);return yC(e,s,a,kC(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=AN(t,n);return yC(e,s,a,vC(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(BN(this.gl,this.framebuffer),this.outputTexture=null),$N(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=EN(t,n),i=new Uint8Array(t*n*4);return $N(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=AN(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();$N(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return $N(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),$N(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),$N(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(le().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return $N(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=WN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if($N(e,(()=>e.shaderSource(n,t))),$N(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=FN.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>L((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+L(l[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),r=function(e){const t=xS();return function(e,t){const n=WN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if($N(e,(()=>e.shaderSource(n,t))),$N(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),s=function(e){return WN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return $N(t,(()=>t.attachShader(s,r))),$N(t,(()=>t.attachShader(s,n))),function(e,t){if($N(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&ON(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return $N(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MN(e,t,"clipSpacePos",n,3,20,0)&&MN(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&$N(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ON(this.gl,this.program),$N(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return WN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),$N(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),LN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=AN(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ON(this.gl,this.program),PN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),$N(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$N(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=DN(this.gl,2===le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await z((()=>this.disposed||this.isQueryAvailable(e,le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||z((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zN(this.gl,e,this.framebuffer),this.debug&&PN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(zN(this.gl,this.outputTexture,this.framebuffer),this.debug&&PN(this.gl)):BN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;zN(r,e,this.framebuffer),this.debug&&PN(r),this.outputTexture=e,$N(r,(()=>r.viewport(0,0,t,n))),$N(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),$N(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function NC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!F(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!F(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class SC{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=xS(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class CC{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class EC{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class TC{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class AC{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _C{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $C{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class RC{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}class DC{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class FC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=bS("rc",t),r=DS(t),s=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=t[t.length-1-n]+","+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class OC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=DS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class MC{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=DS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=bS("rc",r),u=bS("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class LC{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class zC{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class BC{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class PC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${wS(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${vS(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class WC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,s]=t.shape,[,a,i]=e.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class VC{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=e;this.outputShape=[s,t,n,o];const u=[r&&t>1?a-1:a,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class UC{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=e;this.outputShape=[s,t,n,o];const u=[r&&t>1?a-1:a,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class HC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,s]=t.shape,[,a,i]=e.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class GC{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=e;this.outputShape=[s,t,n,o];const u=[r&&t>1?a-1:a,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class jC{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=DS(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class qC{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bS("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=DS(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class KC{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=DS(s.length),u=DS(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class XC{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class YC{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=DS(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class JC{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=DS(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return ZC.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${ZC[t]} = start[${t}] + coords.${ZC[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const ZC=["x","y","z","w","u","v"];class QC{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=DS(this.rank),n=bS("coords",this.rank),r=bS("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}class eE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=DS(n.length),a=DS(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class tE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=rE(t,n),s=sE(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=nE(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===CN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===CN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===CN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===CN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===CN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=rE(n,r),a=sE(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=nE(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=le().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function nE(e,t,n,r,s){const a=function(e,t){switch(e){case CN.PACKED_2X2_FLOAT32:return vC(t);case CN.PACKED_2X2_FLOAT16:return kC(t);case CN.UNPACKED_FLOAT32:return bC(t);case CN.UNPACKED_FLOAT16:return xC(t);case CN.PACKED_4X1_UNSIGNED_BYTE:return wC(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(s){const[t,n]=AN(e[0],e[1]);i=t*n}else{const[t,n]=EN(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,a)}function rE(e,t){if(e===SN.UPLOAD)return CN.PACKED_2X2_FLOAT32;if(e===SN.RENDER||null==e)return function(e){return le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?CN.PACKED_2X2_FLOAT32:CN.UNPACKED_FLOAT32:e?CN.PACKED_2X2_FLOAT16:CN.UNPACKED_FLOAT16}(t);if(e===SN.DOWNLOAD||e===SN.PIXELS)return CN.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function sE(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class aE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=DS(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class iE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const oE="return abs(x);",uE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",lE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",cE="return (x >= 0.0) ? x : (exp(x) - 1.0);",hE=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ku};\n  float scale = ${Xu};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,pE="return -x;",dE="return ceil(x);",fE="return floor(x);",mE="return exp(x);",gE="return exp(x) - 1.0;",yE=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Yu};\n  float a1 = ${Ju};\n  float a2 = ${Zu};\n  float a3 = ${Qu};\n  float a4 = ${el};\n  float a5 = ${tl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,bE="return x;",xE="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",wE="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",vE="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class kE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class IE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=bS("rc",t),r=DS(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:NE}=r,SE=ml,CE=gl,EE=yl,TE=bl,AE={};function _E(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?xE:uE;if("elu"===e)return t?vE:cE;if("relu6"===e)return t?wE:lE;if("prelu"===e)return t?WS:BS;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class $E extends N{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!le().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=IN(le().getNumber("WEBGL_VERSION"));this.binaryCache=((t=le().getNumber("WEBGL_VERSION"))in AE||(AE[t]={}),AE[t]),this.gpgpu=new IC(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new tE(this.gpgpu),this.numMBBeforeWarning=null==le().global.screen?1024:le().global.screen.height*le().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new I(this,ta())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((le().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||le().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:SN.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r){if(le().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:SN.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new kE(i,bE):new iE(i,bE);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=nr()),c="complex64"===r?sl(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=nr()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new kE(r,bE):new iE(r,bE);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===le().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&le().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...TN(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=sl(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=D(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),h}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!RN(n)){if(le().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=D(t);if(le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...TN(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=le().getBool("WEBGL_PACK")&&!0===r,i=a?HN(t):t,o=a?new hC(i):new cC(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=R(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=R(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:nr(),endMs:null}}endTimer(e){return le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=nr(),e)}async getQueryTime(e){if(le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return le().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=ta().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&D(e.shape)<t))}getGPGPUContext(){return this.gpgpu}slice(e,t,n){if(this.shouldExecuteOnCPU([e])){const r=cS(this.texData.get(e.dataId).values,t,n,e.shape,e.dtype);return this.makeOutput(n,e.dtype,r)}if(0===D(n))return zr([],n,e.dtype);const{isPacked:r}=this.texData.get(e.dataId),s=Ks(e.shape,t,n);if(r||!s){const r=le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QC(n):new JC(n),s=r.getCustomSetupFunc(t);return this.compileAndRun(r,[e],null,s)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)}shallowSlice(e,t,n){const r=this.texData.get(e.dataId),s=this.makeOutput(n,e.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=e.dtype;let i=Xs(t,e.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(e,t,n,r){const s=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.stridedSlice(e,t,n,r)));if(s)return s;const a=zs(t,n,r);if(a.some((e=>0===e)))return zr([],a);const i=new eE(t,r,a);return this.compileAndRun(i,[e])}reverse(e,t){const n=le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qC(e.shape,t):new jC(e.shape,t);return this.compileAndRun(n,[e])}neg(e){const t=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.neg(e)));if(t)return t;if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pE,e.dtype);const n=new iE(e.shape,pE);return this.compileAndRun(n,[e])}batchMatMul(e,t,n,r){const s=n?e.shape[2]:e.shape[1],a=r?t.shape[1]:t.shape[2],i=n?e.shape[1]:e.shape[2],o=Math.max(e.shape[0],t.shape[0]);if((1===s||1===a)&&i>1e3){n&&(e=va(e,[0,2,1])),r&&(t=va(t,[0,2,1]));const s=1===a?e:e.as3D(o,i,1),u=1===a?2:1,l=1===a?t.as3D(o,1,i):t;return Ei(s,l).sum(u,!0)}const u=yr(e.dtype,t.dtype),l=new $C(e.shape,t.shape,[o,s,a],n,r);return this.compileAndRun(l,[e,t],u)}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?e.shape[2]:e.shape[1],u=r?t.shape[1]:t.shape[2],l=Math.max(e.shape[0],t.shape[0]),c=yr(e.dtype,t.dtype),h=null!=s,p=null!=i,d=a?_E(a,!0):null,f=new $C(e.shape,t.shape,[l,o,u],n,r,h,d,p),m=[e,t];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(e,t,n,r,s){const a=le().getBool("WEBGL_PACK_NORMALIZATION")?new TC(e.shape,t,n,r,s):new CC(e.shape,t,n,r,s);return this.compileAndRun(a,[e])}LRNGrad(e,t,n,r,s,a,i){const o=new EC(t.shape,r,s,a,i);return this.compileAndRun(o,[t,n,e])}tile(e,t){if("string"===e.dtype){const n=this.readSync(e.dataId).map((e=>sr(e))),r=bs(e.shape,e.dtype,n);return CE(r,t)}const n=new aE(e.shape,t);return this.compileAndRun(n,[e])}pad(e,t,n){const r=le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MC(e.shape,t,n):new OC(e.shape,t,n);return this.compileAndRun(r,[e])}gather(e,t,n){const r=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.gather(e,t,n)));if(r)return r;const s=new mC(e.shape,t.size,n);return this.compileAndRun(s,[e,t])}batchToSpaceND(e,t,n){A(e.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),s=Uu(e.shape,t,r),a=Hu(s.length,t.length),i=Gu(e.shape,t,r),o=ju(n,t.length),u=qu(i,n,t.length);return va(e.reshape(s),a).reshape(i).slice(o,u)}spaceToBatchND(e,t,n){A(e.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),s=[[0,0]];s.push(...n);for(let n=1+t.length;n<e.shape.length;++n)s.push([0,0]);const a=e.pad(s),i=Uu(a.shape,t,r,!1),o=Hu(i.length,t.length,!1),u=Gu(a.shape,t,r,!1),l=va(a.reshape(i),o);return wa(l,u)}reduce(e,t,n){const r=e.shape[0],s=e.shape[1],a=xi(s),i=Math.ceil(s/a),o=new BC({windowSize:a,inSize:s,batchSize:r,outSize:i},t),u=this.compileAndRun(o,[e],n);return 1===u.shape[1]?u:this.reduce(u,t,n)}argReduce(e,t,n=null){let r=e.shape[0],s=e.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=xi(s),i={windowSize:a,inSize:s,batchSize:r,outSize:Math.ceil(s/a)},o=new gS(i,t,null==n),u=[e];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(e,t,l)}argReducePacked(e,t,n=null){const r=null!=n?n.shape:e.shape,s=xi(r[r.length-1]),a=new MS(r,s,t,null==n),i=null==n?[e]:[e,n],o=this.compileAndRun(a,i,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o}sum(e,t){ga("sum",t,e.rank);const[n,r]=fa(e.shape,t),s=D(r),a=e.as2D(-1,s),i=br(e.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(e,t){const n=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.prod(e,t)));if(n)return n;const[r,s]=fa(e.shape,t),a=D(s),i=e.as2D(-1,a),o=br(e.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(e,t,n){let r=0;const s=ya([r],e.rank);let a=e;null!=s&&(a=va(e,s),r=xa(1,e.rank)[0]);const i=NE.computeOutShape(a.shape,r,n),o=D([a.shape[r]]),u=a.as2D(-1,o),l=br(e.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(i);return null!=s&&(c=va(c,ba(s))),c}segOpCompute(e,t,n,r,s){const a=e.shape[0],i=e.shape[1],o=NE.segOpComputeOptimalWindowSize(i,s),u=new XC({windowSize:o,inSize:i,batchSize:a,numSegments:s},t),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===s?l:(n=ao(0,s).tile([i/o]),this.segOpCompute(l,t,n,r,s))}argMinMaxReduce(e,t,n){const r=[t];if(ga("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!le().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){const[t,s]=fa(e.shape,r),a=D(s),i=e.as2D(-1,a);return this.argReduce(i,n).reshape(t)}return this.argReducePacked(e,n)}argMin(e,t){return this.argMinMaxReduce(e,t,"min")}argMax(e,t){return this.argMinMaxReduce(e,t,"max")}cumsum(e,t,n,r){if(t!==e.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${e.rank-1} but got axis=`+t);const s=e.shape[t];let a=e;for(let t=0;t<=Math.ceil(Math.log2(s))-1;t++){const n=new rC(e.shape,!1,r),s=n.getCustomSetupFunc(t),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const t=new rC(e.shape,n,r),s=a;a=this.compileAndRun(t,[a]),s.dispose()}return a}equal(e,t){if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");const n=new PS("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}less(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.less(e,t)));if(n)return n;if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");const r=new PS("return float(a < b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}lessEqual(e,t){if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new PS("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}greater(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.greater(e,t)));if(n)return n;if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new PS("return float(a > b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}greaterEqual(e,t){if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new PS("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalNot(e){const t=new iE(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])}logicalAnd(e,t){if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new PS("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalOr(e,t){if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new PS("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}select(e,t,n){const r=new YC(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],yr(t.dtype,n.dtype))}where(e){nl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return TE(e.shape,t)}topk(e,t,n){const r=e.dataSync();return EE(r,e.shape,e.dtype,t,n)}min(e,t){ga("min",t,e.rank);const[n,r]=fa(e.shape,t),s=D(r),a=e.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.minimum(e,t)));if(n)return n;const r=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new PS("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}mod(e,t){const n=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new PS("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}maximum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.maximum(e,t)));if(n)return n;const r=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new PS("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}all(e,t){ga("all",t,e.rank);const[n,r]=fa(e.shape,t),s=D(r),a=e.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(e,t){ga("any",t,e.rank);const[n,r]=fa(e.shape,t),s=D(r),a=e.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(e,t){const n="int32";if(le().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new PS("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(r,[e,t],n)}packedUnaryOp(e,t,n){const r=new kE(e.shape,t);return this.compileAndRun(r,[e],n)}packedBinaryOp(e,t,n,r,s=!1){const a=new VS(n,e.shape,t.shape,s);return this.compileAndRun(a,[e,t],r)}makeComplexComponentTensorInfo(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}addN(e){if(1===e.length)return e[0];if(e.length>le().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}const t=e.map((e=>e.dtype)).reduce(((e,t)=>yr(e,t))),n=e.map((e=>e.shape)),r=le().getBool("WEBGL_PACK")?new mS(e[0].shape,n):new fS(e[0].shape,n);return this.compileAndRun(r,e,t)}pow(e,t){const n=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new PS("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=yr(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)}ceil(e){if(this.shouldExecuteOnCPU([e])){const t=nS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dE,e.dtype);const t=new iE(e.shape,dE);return this.compileAndRun(t,[e])}floor(e){if(this.shouldExecuteOnCPU([e])){const t=aS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,fE,e.dtype);const t=new iE(e.shape,fE);return this.compileAndRun(t,[e])}sign(e){const t=new iE(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])}isNaN(e){const t=new iE(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")}isInf(e){const t=new iE(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")}isFinite(e){const t=new iE(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")}round(e){const t=new iE(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])}exp(e){if(this.shouldExecuteOnCPU([e])){const t=rS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mE,e.dtype);const t=new iE(e.shape,mE);return this.compileAndRun(t,[e])}expm1(e){if(this.shouldExecuteOnCPU([e])){const t=sS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,gE,e.dtype);const t=new iE(e.shape,gE);return this.compileAndRun(t,[e])}softmax(e,t){const n=P([t],e.shape),r=_i(e,n),s=ma(r.shape,n),a=$i(e,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return ii(i,o)}log(e){if(this.shouldExecuteOnCPU([e])){const t=iS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);const t=new iE(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])}log1p(e){const t=new iE(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])}sqrt(e){const t=new iE(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])}rsqrt(e){if(this.shouldExecuteOnCPU([e])){const t=lS(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}const t=new iE(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])}reciprocal(e){const t=new iE(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])}relu(e){let t;return t=le().getBool("WEBGL_PACK")?new kE(e.shape,xE):new iE(e.shape,uE),this.compileAndRun(t,[e])}relu6(e){let t;return t=le().getBool("WEBGL_PACK")?new kE(e.shape,wE):new iE(e.shape,lE),this.compileAndRun(t,[e])}prelu(e,t){const n=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS(WS,e.shape,t.shape):new PS(BS,e.shape,t.shape);return this.compileAndRun(n,[e,t])}elu(e){if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,vE,e.dtype);const t=new iE(e.shape,cE);return this.compileAndRun(t,[e])}eluDer(e,t){const n=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new PS("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}selu(e){const t=new iE(e.shape,hE);return this.compileAndRun(t,[e])}clip(e,t,n){let r;r=le().getBool("WEBGL_PACK_CLIP")?new HS(e.shape):new US(e.shape);const s=r.getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=eS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,oE,e.dtype);const t=new iE(e.shape,oE);return this.compileAndRun(t,[e])}complexAbs(e){const t=this.texData.get(e.dataId),n=new GS(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.real),this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(e){const t=new iE(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])}softplus(e){const t=new iE(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])}asin(e){const t=new iE(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(t,[e])}acos(e){const t=new iE(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(t,[e])}atan(e){const t=new iE(e.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(t,[e])}sinh(e){const t=new iE(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}cosh(e){const t=new iE(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}tanh(e){const t=new iE(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])}asinh(e){const t=new iE(e.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(t,[e])}acosh(e){const t=new iE(e.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(t,[e])}atanh(e){const t=new iE(e.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(t,[e])}erf(e){const t=new iE(e.shape,yE);return this.compileAndRun(t,[e])}step(e,t){const n=new iE(e.shape,function(e=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e});\n  `}(t));return this.compileAndRun(n,[e])}conv2dByMatMul(e,t,n,r,s,a){const i=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,l=i[0]*i[1]*i[2],c=n.outChannels,h="channelsLast"===n.dataFormat,p=(1===l||1===c)&&u>1e3,d=i[2]%2!=0&&!!o.isPacked;if(p||!le().getBool("WEBGL_LAZILY_UNPACK")||!le().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!d){const o=h?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=wa(e,[1,o,n.inChannels]),l=wa(t,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a});return wa(c,n.outShape)}const f=h?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),m={dataId:e.dataId,shape:[1,f,n.inChannels],dtype:e.dtype},g=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,A(jN(o.shape,m.shape),(()=>`packed reshape ${o.shape} to ${m.shape} isn't free`));const y=wa(t,[1,n.inChannels,n.outChannels]),b=this.fusedBatchMatMul({a:m,b:y,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:a}),x=this.texData.get(b.dataId);return A(x.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=g,x.shape=n.outShape,ta().makeTensorFromDataId(b.dataId,n.outShape,b.dtype)}conv2dWithIm2Row(e,t,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,p="channelsLast"===h,d=i*o*u,f=c*l,m=[d,f],g=e.squeeze([0]),y=t.reshape([1,d,-1]),b=new SC(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,k=s?_E(s,!0):null,I=new $C(x.shape,y.shape,[1,f,n.outChannels],!0,!1,w,k,v),N=[x,y];r&&N.push(r),v&&N.push(a);const S=this.compileAndRun(I,N);return p?S.reshape([1,c,l,n.outChannels]):S.reshape([1,n.outChannels,c,l])}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n,r,s,a);if(le().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n,r,s,a);const i=null!=r,o=null!=a,u=s?_E(s,!1):null,l=new ZS(n,i,u,o),c=[e,t];return r&&c.push(r),a&&c.push(a),this.compileAndRun(l,c)}conv2d(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(le().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);const r=new ZS(n);return this.compileAndRun(r,[e,t])}conv2dDerInput(e,t,n){const r=new qS(n);return this.compileAndRun(r,[e,t])}conv2dDerFilter(e,t,n){const r=new jS(n);return this.compileAndRun(r,[e,t])}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=le().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?_E(s,i):null,u=[e,t],l=null!=r,c=null!=a;let h;return l&&u.push(r),c&&u.push(a),i?(h=new tC(n,l,o,c),this.compileAndRun(h,u)):(h=new eC(n,l,o,c),this.compileAndRun(h,u))}depthwiseConv2D(e,t,n){let r;return le().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new tC(n),this.compileAndRun(r,[e,t])):(r=new eC(n),this.compileAndRun(r,[e,t]))}depthwiseConv2DDerInput(e,t,n){const r=new JS(n);return this.compileAndRun(r,[e,t])}depthwiseConv2DDerFilter(e,t,n){const r=new YS(n);return this.compileAndRun(r,[e,t])}conv3d(e,t,n){const r=new QS(n);return this.compileAndRun(r,[e,t])}conv3dDerInput(e,t,n){const r=new XS(n);return this.compileAndRun(r,[e,t])}conv3dDerFilter(e,t,n){const r=new KS(n);return this.compileAndRun(r,[e,t])}unstack(e,t){const n=e.shape[t],r=new Array(e.rank-1);let s=0;for(let n=0;n<e.rank;n++)n!==t&&(r[s++]=e.shape[n]);const a=new Array(e.rank).fill(0),i=e.shape.slice();i[t]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[t]=n,o[n]=this.slice(e,a,i).reshape(r);return o}avgPool3d(e,t){const n=new zC(t,"avg",!1);return this.compileAndRun(n,[e],"float32")}avgPool3dBackprop(e,t,n){const r=new zS(n);return this.compileAndRun(r,[e],t.dtype)}maxPool3d(e,t){const n=new zC(t,"max",!1);return this.compileAndRun(n,[e],"float32")}maxPool3dBackprop(e,t,n,r){const s=new zC(r,"max",!0),a=this.compileAndRun(s,[t]),i=new _C(r),o=this.compileAndRun(i,[e,a],t.dtype);return a.dispose(),o}resizeBilinear(e,t,n,r){const s=le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UC(e.shape,t,n,r):new VC(e.shape,t,n,r);return this.compileAndRun(s,[e],"float32")}resizeBilinearBackprop(e,t,n){const r=new WC(e,t,n);return this.compileAndRun(r,[e])}resizeNearestNeighbor(e,t,n,r){const s=new GC(e.shape,t,n,r);return this.compileAndRun(s,[e])}resizeNearestNeighborBackprop(e,t,n){const r=new HC(e,t,n);return this.compileAndRun(r,[e])}multinomial(e,t,n,r){const s=t?e:yo(e),a=s.shape[0],i=s.shape[1],o=new RC(a,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",u)}oneHot(e,t,n,r){const s=new DC(e.size,t,n,r);return this.compileAndRun(s,[e])}diag(e){const t=new lC(e.size);return this.compileAndRun(t,[e])}cropAndResize(e,t,n,r,s,a){const i=new nC(e.shape,t.shape,r,s,a);return this.compileAndRun(i,[e,t,n],"float32")}depthToSpace(e,t,n){A(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+t));const r=e.shape[0],s="NHWC"===n?e.shape[1]:e.shape[2],a="NHWC"===n?e.shape[2]:e.shape[3],i="NHWC"===n?e.shape[3]:e.shape[1],o=s*t,u=a*t,l=i/(t*t),c=new uC("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])}split(e,t,n){return SE(e,t,n)}scatterND(e,t,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Os(0,e,n),u=[o/a,a],l=e.reshape([s,r]),c=t.reshape([s,a]);if(0===o)return dl(zr([]),n);const h=ua(0),p=new KC(s,r,l.rank,c.rank,i,u);return this.compileAndRun(p,[c,l,h]).reshape(n)}sparseToDense(e,t,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=Os(0,e,n),u=new KC(a,s,e.rank,t.rank,i,[o,1],!1);return this.compileAndRun(u,[t,e,r]).reshape(n)}gatherND(e,t){const n=t.shape,r=n[n.length-1],[s,a,i,o]=Rs(e,t),u=t.reshape([a,r]),l=e.reshape([e.size/i,i]),c=new gC(r,o,[a,i]);return this.compileAndRun(c,[l,u]).reshape(s)}fill(e,t,n){if("string"===(n=n||X(t))){const r=U(n,D(e));return r.fill(t),ta().makeTensor(r,e,n,this)}{const r=new fC(e,t),s=r.getCustomSetupFunc(t);return this.compileAndRun(r,[],n,s)}}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)}zerosLike(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)}linspace(e,t,n){return fl(e,t,n)}makeTensorInfo(e,t,n){const r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return ta().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new IE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new FC(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[VN(e.shape),...UN(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[VN(t),...UN(t)],a=new PC(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=HN(r);let i;return i=n?new oC(a):new iC(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===NN.DENSE){const t=TN(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===D(a.shape))return i.values=V(a.dtype,0),a;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&D(t.shape)<=le().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!jN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,u,l),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=NS(a,o,s,t.packedInputs),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===le().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;p[r]=e.getUniformLocation(l,r,s),p["offset"+r]=e.getUniformLocation(l,"offset"+r,s)}return{program:t,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,l))),p=null!=this.activeTimers;let d;if(p&&(d=this.startTimer()),function(e,t,n,r,s){NC(t.inShapeInfos,n),NC([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===le().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations["offset"+s];if(null!=a)if(n.isUniform)if(D(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!le().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return ta().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(le().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ra((()=>{if(!le().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=le().getBool("DEBUG");le().set("DEBUG",!1);const t=this.abs(ua(1e-8)).dataSync()[0];if(le().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=nr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?T(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=W(e);e=t.newShape}let r=D(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=VN(e);let n=2,s=2;return e.length&&([n,s]=UN(e)),r=t*(n/2)*(s/2),M(r).map((e=>2*e))}return M(r)}(n,o),t.texShape=c),null!=s){const e=HN(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array;o?([i,h]=AN(c[0],c[1]),a=new dC(e,[h,i],p)):a=new pC(e,[h,i],p);const d=this.makeTensorInfo([h,i],r);this.texData.get(d.dataId).usage=p?SN.PIXELS:SN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=nr()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*j(t)}tryRunOnCpuOrThrow(e,t){if(this.shouldExecuteOnCPU(e))try{return t()}catch(e){if(le().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function RE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}Tr()&&ia("webgl",(()=>new $E),2);const DE={kernelName:gt,backendName:"webgl",kernelFunc:RE};function FE(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=RE({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=RE({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const OE={kernelName:Oe,backendName:"webgl",kernelFunc:FE};function ME(e){return({inputs:t,backend:n})=>{const{x:r}=t,s=n,a=new iE(r.shape,e);return s.runWebGLProgram(a,[r],r.dtype)}}function LE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new PS(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],yr(n.dtype,r.dtype))})),a=FE({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||yr(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new VS(t,u.shape,l.shape,n):new PS(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}const zE="return a + b;",BE=LE({opSnippet:zE,packedOpSnippet:zE,supportsComplex:!0,cpuKernelImpl:tS}),PE={kernelName:ye,backendName:"webgl",kernelFunc:BE},WE=LE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),VE={kernelName:Se,backendName:"webgl",kernelFunc:WE},UE={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ZN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;A(Ma(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ca(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&F(l.inShape,l.outShape))return RE({inputs:{x:s},backend:n});const c=new LC(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},HE={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;ZN([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=Ca(i.shape,o,u,1,l),h=new LS(c);return n.runWebGLProgram(h,[s],i.dtype)}};class GE{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ci(e,t),ci(e,n);let i="0.0";null!=r&&(ci(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ci(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class jE{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ci(e,t),ci(e,n);let i="vec4(0.0)";null!=r&&(ci(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ci(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const qE={kernelName:ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;A(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=le().getBool("WEBGL_PACK_NORMALIZATION")?new jE(r.shape,s.shape,a.shape,c,h,u):new GE(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}},KE=LE({opSnippet:"return float(a != b);",dtype:"bool"}),XE={kernelName:Wt,backendName:"webgl",kernelFunc:KE};function YE(e){const{inputs:t,backend:n}=e,{input:r}=t;return RE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const JE={kernelName:Yt,backendName:"webgl",kernelFunc:YE},ZE={kernelName:Re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return RE({inputs:{x:a},backend:r});const t=Li(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=FE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=YE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!H(a.dtype,i)){const e=RE({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new iE(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",V("bool",1)),t=KE({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}};class QE{constructor(e){this.outputShape=[],this.outputShape=qa(e,1),this.variableNames=e.map(((e,t)=>"T"+t));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class eT{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qa(e,t);const n=this.outputShape,r=n.length,s=DS(r),a=bS("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>"T"+t));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${tT(i,u,t)}),\n            vec2(${tT(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${tT(i,u,d)}),\n          vec2(${tT(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function tT(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function nT(e){const{inputs:t,backend:n}=e,{input:r}=t;return RE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const rT={kernelName:bt,backendName:"webgl",kernelFunc:nT};function sT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=D(s.shape),u=B(a,o),l=D(u);A(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||jN(s.shape,u)||null!==c.texture&&jN(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[VN(e.shape),...UN(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[VN(t),...UN(t)],i=new PC(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,u,i)}const aT={kernelName:Qt,backendName:"webgl",kernelFunc:sT};function iT(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>YE({inputs:{input:e},backend:n}))),s=e.map((e=>nT({inputs:{input:e},backend:n}))),a=iT(r,t,n),i=iT(s,t,n),o=FE({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(e.length>le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=iT(e.slice(0,r),t,n),a=iT(e.slice(r),t,n),i=iT([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new eT(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const s=qa(e.map((e=>e.shape)),t),a=e.map((e=>sT({inputs:{x:e},attrs:{shape:[-1,D(e.shape.slice(t))]},backend:n}))),i=new QE(a.map((e=>e.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=sT({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}const oT={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=P(s,t[0].shape)[0],i=qa(t.map((e=>e.shape)),a);if(0===D(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>D(e.shape)>0));return 1===o.length?o[0]:(ja(o.map((e=>e.shape)),a),iT(o,a,n))}},uT=ME("if (isnan(x)) return x;\n  return cos(x);\n"),lT={kernelName:Ue,backendName:"webgl",kernelFunc:uT},cT=LE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),hT={kernelName:et,backendName:"webgl",kernelFunc:cT};class pT{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function dT(e,t,n){const r=n.texData.get(e.dataId),s=D(e.shape),a=e.shape[e.shape.length-1],i=sT({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}).shape,o=new pT("real",i,t),u=new pT("imag",i,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),h=n.runWebGLProgram(u,l,"float32"),p=FE({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const d=sT({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(d),d}const fT={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dT(r,!1,n)}};class mT{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const gT={kernelName:ut,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new mT(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class yT{constructor(e){this.variableNames=["A"];const t=xS(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class bT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=xS(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const xT={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==wT&&(wT=document.createElement("canvas").getContext("2d")),wT.canvas.width=u,wT.canvas.height=l,wT.drawImage(s,0,0,u,l),s=wT.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=SN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=le().getBool("WEBGL_PACK")?new bT(h):new yT(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let wT;const vT={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return dT(r,!0,n)}};class kT{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${O(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function IT(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=xi(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new kT({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new kT({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new BC({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class NT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=DS(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class ST{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=DS(this.rank),s=yS("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function CT(e,t,n){const r=le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ST(e.shape,t):new NT(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}const ET={kernelName:At,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{reductionIndices:s,keepDims:a}=t,i=n,o=r.shape.length,u=P(s,r.shape);let l=u;const c=ya(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=i.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=pS(e,r.shape,r.dtype,c,t);d=i.makeTensorInfo(t,r.dtype),i.texData.get(d.dataId).values=n}else d=CT(r,c,i);l=xa(l.length,o)}ga("max",l,o);const[f,m]=fa(d.shape,l);let g,y=f;if(a&&(y=ma(f,u)),p){const e=i.texData.get(d.dataId).values,t=oS(e,D(m),y,r.dtype);g=i.makeTensorInfo(y,r.dtype),i.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=D(t),a=sT({inputs:{x:e},attrs:{shape:[D(e.shape)/s,s]},backend:r}),i=IT(a,e.dtype,"max",r),o=sT({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,m,y,i);return h&&i.disposeIntermediateTensorInfo(d),g}},TT={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ZN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;A(Ma(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Ca(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&F(l.inShape,l.outShape))return RE({inputs:{x:s},backend:n});const c=new LC(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},AT={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;ZN([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Ca(o.shape,u,l,1,c,h),d=new LC(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new AC(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},_T={kernelName:Ft,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;A(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];A(Ma(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Ca(r.shape,s,a,l,i),[h,p]=function(e,t,n,r){let s=new LC(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new LC(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,p]}},$T={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=P(a,r.shape);let l=u;const c=ya(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=pS(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=CT(r,c,i);d.push(f),l=xa(l.length,o)}ga("sum",l,o);const[m,g]=fa(f.shape,l);let y=m;s&&(y=ma(m,u));const b=function(e,t,n,r){const s=D(t),a=sT({inputs:{x:e},attrs:{shape:[D(e.shape)/s,s]},backend:r}),i=IT(a,"float32","mean",r),o=sT({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}};class RT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=DS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class DT{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=DS(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=bS("rc",r),u=bS("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const FT={kernelName:zt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DT(r.shape,s,a):new RT(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}};class OT{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ci(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const MT="return a * b;",LT={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=yr(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new OT("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new OT("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=FE({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=uS(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VS(MT,r.shape,s.shape):new PS(MT,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}},zT={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{nl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,u=t;return au(u.readSync(r.dataId),u.readSync(s.dataId),a,i,o)}},BT=iu,PT={kernelName:Ut,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{nl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=t,c=l.readSync(r.dataId),h=l.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=BT(c,h,a,i,o,u);return[p,d]}},WT=ou,VT={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{nl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=t,c=l.readSync(r.dataId),h=l.readSync(s.dataId),p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=WT(c,h,p,d,f,m);return[g,y]}};class UT{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const s=e[1],a=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;const[u,l]=Vu(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HT={kernelName:On,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new UT(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},GT=ME("if (isnan(x)) return x;\n  return sin(x);\n"),jT={kernelName:hn,backendName:"webgl",kernelFunc:GT},qT={kernelName:kn,backendName:"webgl",kernelFunc:ME("return x * x;")},KT="return (a - b) * (a - b);",XT=LE({opSnippet:KT,packedOpSnippet:KT}),JT={kernelName:vn,backendName:"webgl",kernelFunc:XT},ZT="return a - b;",QT=LE({opSnippet:ZT,packedOpSnippet:ZT,supportsComplex:!0,cpuKernelImpl:hS}),eA={kernelName:In,backendName:"webgl",kernelFunc:QT},tA=ME("return tan(x);"),nA=[PE,VE,UE,HE,qE,ZE,OE,oT,lT,hT,fT,gT,xT,DE,vT,rT,ET,TT,AT,_T,$T,FT,LT,zT,PT,VT,XE,JE,aT,HT,jT,qT,eA,JT,{kernelName:Sn,backendName:"webgl",kernelFunc:tA},{kernelName:Tn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{perm:s}=t,a=n,i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[s[e]];let u;if(a.shouldExecuteOnCPU([r])){const e=a.texData.get(r.dataId).values,t=pS(e,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype),a.texData.get(u.dataId).values=t}else u=CT(r,s,a);return u}},{kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ZN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=dS(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const e of nA)Hn(e);const rA=e=>({startEndTensor:e,startPoint:ho(e,[0,0],[-1,2]),endPoint:ho(e,[0,2],[-1,2])}),sA={strides:[8,16],anchors:[2,6]};function aA(e,t){let n,r,s;if(e.topLeft instanceof lr&&e.bottomRight instanceof lr){const[a,i]=ra((()=>[Ka([$i(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),Ka([$i(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]));n=a,r=i,null!=e.landmarks&&(s=ra((()=>{const n=$i(so([t-1,0]),e.landmarks),r=so([1,-1]);return Ei(n,r)})))}else{const[a,i]=e.topLeft,[o,u]=e.bottomRight;n=[t-1-a,i],r=[t-1-o,u],null!=e.landmarks&&(s=e.landmarks.map((e=>[t-1-e[0],e[1]])))}const a={topLeft:n,bottomRight:r};return null!=s&&(a.landmarks=s),null!=e.probability&&(a.probability=e.probability instanceof lr?e.probability.clone():e.probability),a}function iA(e,t){return ra((()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=Ei(e.startPoint,t),r=Ei(e.endPoint,t),s=Ya([n,r],1);return rA(s)})(n,t).startEndTensor.squeeze()}))}class oA{constructor(e,t,n,r,s,a){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const r=[];for(let s=0;s<n.strides.length;s++){const a=n.strides[s],i=Math.floor((t+a-1)/a),o=Math.floor((e+a-1)/a),u=n.anchors[s];for(let e=0;e<i;e++){const t=a*(e+.5);for(let e=0;e<o;e++){const n=a*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,n,sA),this.anchors=So(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=so([t,n]),this.iouThreshold=s,this.scoreThreshold=a}async getBoundingBoxes(e,t,n=!0){const[r,s,a]=ra((()=>{const t=e.resizeBilinear([this.width,this.height]),n=Ei($i(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=function(e,t,n){const r=ho(e,[0,1],[-1,2]),s=ha(r,t),a=ho(e,[0,3],[-1,2]),i=ii(a,n),o=ii(s,n),u=ii(i,2),l=$i(o,u),c=ha(o,u),h=Ei(l,n),p=Ei(c,n);return Ya([h,p],1)}(r,this.anchors,this.inputSize),a=ho(r,[0,0],[-1,1]);return[r,s,co(a).squeeze()]})),i=console.warn;console.warn=()=>{};const o=Au.nonMaxSuppression(s,a,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map((e=>ho(s,[e,0],[1,-1])));t||(l=await Promise.all(l.map((async e=>{const t=await e.array();return e.dispose(),t}))));const c=e.shape[1],h=e.shape[2];let p;p=t?ii([h,c],this.inputSize):[h/this.inputSizeData[0],c/this.inputSizeData[1]];const d=[];for(let e=0;e<l.length;e++){const s=l[e],i=ra((()=>{const i=rA(s instanceof lr?s:So(s));if(!n)return i;const o=u[e];let l;return l=t?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:ho(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:ho(a,[o],[1]),anchor:l}}));d.push(i)}return s.dispose(),a.dispose(),r.dispose(),{boxes:d,scaleFactor:p}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,s]=function(e){return e instanceof lr?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),a=ra((()=>(e instanceof lr||(e=$s(e)),e.toFloat().expandDims(0)))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(a,t,r);return a.dispose(),t?i.map((e=>{const t=iA(e,o);let a={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,s=t.add(r).mul(o);a.landmarks=s,a.probability=n}return n&&(a=aA(a,s)),a})):Promise.all(i.map((async e=>{const t=iA(e,o);let a;if(r){const[n,r,s]=await Promise.all([e.landmarks,t,e.probability].map((async e=>e.array()))),i=e.anchor,[u,l]=o,c=n.map((e=>[(e[0]+i[0])*u,(e[1]+i[1])*l]));a={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:s},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();a={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(a=aA(a,s)),a})))}}async function uA(){if(!k.video)return;const e=await k.model.estimateFaces(k.video,!1);if(e.length>0){k.ctx.clearRect(0,0,k.canvas.width,k.canvas.height);for(let t=0;t<e.length;t++){const n=e[t].topLeft,r=e[t].bottomRight,s=[r[0]-n[0],r[1]-n[1]];k.ctx.strokeStyle="white",k.ctx.strokeRect(n[0],n[1],s[0],s[1]);{const n=e[t].landmarks;k.ctx.fillStyle="white";for(let e=0;e<n.length;e++){const t=n[e][0],r=n[e][1];k.ctx.fillRect(t,r,5,5)}}}}requestAnimationFrame(uA)}!async function(){!function(e,t=!1){if(Fd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Rd=e;else{Dd=e;const t=Ad.filter((e=>null==Dd[e]));if(t.length>0)throw new Error("There were no entries found for the following binaries: "+t.join(",")+". Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.")}Od=t}("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm/dist/"),await("wasm",Cr.setBackend("wasm")),k.model=await async function({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:s=.75}={}){const a=await async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new dw(e,t);return await n.load(),n}("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new oA(a,t,n,e,r,s)}(),console.log("Finished loading model")}(),window.addEventListener("click",(function e(t){console.log("Detected a click");let n=t.target;if("A"===n.nodeName){let r=n.getAttribute("href");if(r.includes("youtube")){t.preventDefault(),console.log("Stopped redirection to Youtube"),window.removeEventListener("click",e);let n=document.createElement("div");n.id="studyModeLocker",n.addEventListener("click",(e=>{e.stopPropagation(),console.log("Overlay clicked")})),document.getElementsByTagName("BODY")[0].appendChild(n),function(e){let t=document.getElementById("studyModeLocker"),n=document.createElement("DIV"),r=document.createElement("BUTTON"),s=document.createElement("I"),a=document.createElement("BUTTON"),i=document.createElement("I");s.setAttribute("class","fas fa-times-circle icon-left-padding"),r.setAttribute("class","button exit-button"),r.innerText="Leave",r.addEventListener("click",(t=>function(e,t){e.stopPropagation();let n=document.getElementById("studyModeLocker");n&&(n.remove(),k.stream.getTracks().forEach((function(e){e.stop()})),k.video=null,window.addEventListener("click",t))}(t,e))),i.setAttribute("class","fas fa-question icon-left-padding"),a.setAttribute("class","button question-button"),a.innerText="Question",a.addEventListener("click",(e=>async function(e){e.stopPropagation(),console.debug("Question ButtonPressed at "+k.player.getCurrentTime())}(e))),r.appendChild(s),a.appendChild(i),n.setAttribute("class","button-container"),n.appendChild(r),n.appendChild(a),t.appendChild(n)}(e),function(e){let t=document.getElementById("studyModeLocker"),n=e.split("youtube.com/watch?v="),r="hXDiv7f73H0";r=2==n.length?n[1]:n[0];let s=document.createElement("div"),a=document.createElement("iframe");s.id="videoWrapper",a.id="videoIFrame",a.origin="youtube.com",a.setAttribute("width","100%"),a.setAttribute("height","100%"),a.setAttribute("class","youtubeIFrame"),a.src=`https://www.youtube-nocookie.com/embed/${r}?enablejsapi=1&controls=0`,s.appendChild(a),t.appendChild(s),k.player=new YT.Player("videoIFrame",{events:{onReady:e=>{console.debug("Embedded Youtube Player is ready"),window.localStorage.setItem("youtube_video_id",r),window.localStorage.setItem("youtube_video_duration",e.target.getDuration()),window.localStorage.setItem("youtube_video_title",e.target.getVideoData().title)},onStateChange:e=>{console.debug("Embedded Youtube Player has a new change"),e.data,YT.PlayerState.ENDED}}})}(r),async function(){!function(){let e=document.createElement("VIDEO");e.id="overlayVideoCam",e.setAttribute("autoplay","");let t=document.createElement("CANVAS");t.id="overlayVideoCanvas",t.width=640,t.height=480;let n=document.getElementById("studyModeLocker");n.appendChild(e),n.appendChild(t)}(),await async function(){return k.video=document.getElementById("overlayVideoCam"),k.stream=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}),k.video.srcObject=k.stream,new Promise((e=>{k.video.onloadedmetadata=()=>{e(k.video)}}))}(),k.canvas=document.getElementById("overlayVideoCanvas"),k.ctx=k.canvas.getContext("2d"),k.ctx.fillStyle="rgba(255, 0, 0, 0.5)",uA()}()}}})),console.log("Google Classroom Overlay registered")})()})();